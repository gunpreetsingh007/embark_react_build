{"version":3,"file":"static/js/366.89df222b.chunk.js","mappings":"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","sources":["helpers/trackUserEvent.js","components/SingleOrderCart/index.jsx","screens/MyAccount/singleOrder.jsx"],"sourcesContent":["import Axios from \"../api/Axios\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst trackUserEvent = (event) => {\r\n    if (sessionStorage.getItem(\"session-id\") && isValidUUID(sessionStorage.getItem(\"session-id\"))) {\r\n        axios.callApi(\"/session/trackUserEvent\", {\r\n            method: \"POST\",\r\n            body: {\r\n                event\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        sessionStorage.removeItem('session-id');\r\n        const keyword = 'utm'; // The keyword you want to match\r\n        const matchingParams = getParamsMatchingKeyword(keyword);\r\n        let options = {\r\n            method: \"POST\",\r\n            body: {\r\n                additionalDetails: matchingParams,\r\n                event\r\n            }\r\n        }\r\n        axios.callApi(\"/session/createNewSession\", options).then((result) => {\r\n            sessionStorage.setItem('session-id', result.data.data)\r\n        })\r\n    }\r\n}\r\n\r\nfunction getParamsMatchingKeyword(keyword) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const matchingParams = {};\r\n\r\n    for (const [key, value] of params) {\r\n        if (key.includes(keyword)) {\r\n            matchingParams[key] = value;\r\n        }\r\n    }\r\n\r\n    return matchingParams;\r\n}\r\n\r\nfunction isValidUUID(uuid) {\r\n    const uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\r\n    return uuidPattern.test(uuid);\r\n}\r\n\r\nexport default trackUserEvent","import \"./index.css\"\r\n\r\nexport const SingleOrderCart = (props) => {\r\n  const { photoURL, productName, productAttribute, count, realPrice, discountPrice } = props\r\n  return (\r\n    <div className='singleOrderCart-container card mt-2 mb-2'>\r\n      <div className='product-image'>\r\n        <img src={process.env.REACT_APP_BASE_URL + \"/\" + photoURL} alt=\"product-image\" />\r\n      </div>\r\n      <div className='product-details'>\r\n        <span>{productName}</span>\r\n        <span className=\"mb-4\" style={{ textAlign: \"center\" }}>{productAttribute}</span>\r\n        <div>\r\n          <span>Quantity :</span>\r\n          <span className='card ms-2' style={{ width: \"2rem\", height: \"1.4rem\", textAlign: \"center\" }}>{count}</span>\r\n        </div>\r\n      </div>\r\n      <div className='price'>\r\n        <del>&#8377; {realPrice}</del>\r\n        <span>&#8377; {discountPrice}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import \"./index.css\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport Axios from \"../../api/Axios\"\nimport { SingleOrderCart } from \"../../components/SingleOrderCart\"\nimport trackUserEvent from \"../../helpers/trackUserEvent\"\n\nconst axios = new Axios();\n\nconst SingleOrder = () => {\n\n    const { id } = useParams()\n    const navigator = useNavigate()\n    const [shippingAddress, setShippingAddress] = useState({})\n    const [billingAddress, setBillingAddress] = useState({})\n    const [orderDetails, setOrderDetails] = useState([])\n    const [orderStatus, setOrderStatus] = useState()\n    const [productPrice, setProductPrice] = useState({})\n\n    const getUserOrderById = async () => {\n        const options = {\n            method: \"GET\"\n        };\n        try {\n            const result = await axios.callApi(\n                `/user/getOrderById/${id}`,\n                options\n            );\n            if (result.status == 200) {\n                setShippingAddress(result.data.data.addressDetails.shippingAddress)\n                setBillingAddress(result.data.data.addressDetails.billingAddress)\n                setOrderStatus(result.data.data.orderStatus)\n                setOrderDetails(result.data.data.orderDetails)\n                setProductPrice({\n                    totalAmount: result.data.data.orderTotalAmount,\n                    deliveryCharges: result.data.data.deliveryCharges,\n                    orderAmount: result.data.data.orderAmount,\n                    orderAmountWithoutDiscount: result.data.data.orderAmountWithoutDiscount\n                })\n            }\n            else {\n                navigator(\"*\")\n            }\n        }\n        catch (error) {\n            console.error(\"Something went wrong\")\n        }\n    }\n\n    useEffect(() => {\n        if (id)\n            getUserOrderById()\n    }, [])\n\n    useEffect(() => {\n        trackUserEvent(\"View Single Order\")\n    },[])\n\n    return (\n        <div className=\"single-order-container\">\n            <div className=\"first-section\">\n                <div>\n                    <h3>Delivery Address</h3>\n                    <span>{shippingAddress.firstName + \" \" + shippingAddress.lastName}</span><br />\n                    <span>{shippingAddress.streetAddress + \", \" + shippingAddress.city + \"-\" + shippingAddress.pincode + \", \" + shippingAddress.state + \", \" + shippingAddress.country}</span><br />\n                    <span>Phone number : {shippingAddress.contact}</span>\n                </div>\n                <div className=\"order-status\">\n                    <h3>Order Status</h3>\n                    <span className=\"mt-2\">{orderStatus}</span><br />\n                    {/* <button className='btn btn-dark mt-2'>Download Invoice</button> */}\n                </div>\n            </div>\n            <div className=\"second-section mt-5\">\n                <h4>Product Details</h4>\n                {orderDetails.map((e) => <SingleOrderCart photoURL={e.productImage} productName={e.productName} productAttribute={Object.values(e.attributeCombination)[0]} count={e.count} realPrice={e.productPrice} discountPrice={e.productDiscountPrice} />)}\n            </div>\n            <div className=\"third-section mt-5\">\n                <h4>Price Details</h4>\n                <div className=\"price-details ms-3\">\n                    <span>List price : &#8377; {productPrice.orderAmountWithoutDiscount}</span>\n                    <span>Selling price : &#8377; {productPrice.orderAmount}</span>\n                    <span>Shipping fee : &#8377; {productPrice.deliveryCharges}</span>\n                    <span>Total Amount : &#8377; {productPrice.totalAmount}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SingleOrder\n"],"names":["axios","Axios","event","sessionStorage","getItem","uuid","test","callApi","method","body","removeItem","matchingParams","keyword","params","URLSearchParams","window","location","search","key","value","includes","getParamsMatchingKeyword","options","additionalDetails","then","result","setItem","data","SingleOrderCart","props","photoURL","productName","productAttribute","count","realPrice","discountPrice","_jsxs","className","children","_jsx","src","process","alt","style","textAlign","width","height","SingleOrder","id","useParams","navigator","useNavigate","shippingAddress","setShippingAddress","useState","billingAddress","setBillingAddress","orderDetails","setOrderDetails","orderStatus","setOrderStatus","productPrice","setProductPrice","useEffect","async","concat","status","addressDetails","totalAmount","orderTotalAmount","deliveryCharges","orderAmount","orderAmountWithoutDiscount","error","console","getUserOrderById","trackUserEvent","firstName","lastName","streetAddress","city","pincode","state","country","contact","map","e","productImage","Object","values","attributeCombination","productDiscountPrice"],"sourceRoot":""}