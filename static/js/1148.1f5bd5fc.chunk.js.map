{"version":3,"file":"static/js/1148.1f5bd5fc.chunk.js","mappings":"kKAiCA,MAhCA,MAEEA,YAAYC,GAAU,KAQtBC,+BAAiC,KAC/BC,KAAKC,SAASC,aAAaC,SAASC,IAClCJ,KAAKK,gBACLL,KAAKM,aACN,EACD,KAEFD,gBAAmBE,GAASA,EAAK,KAEjCD,aAAeE,UAAiC,IAA1B,SAAEL,EAAQ,OAAEM,GAAQC,EASxC,OAAOC,QAAQC,QAAQT,EAAS,EAzBhCH,KAAKC,SAAWY,EAAAA,EAAAA,OAAa,CAC3Bf,YAGFE,KAAKD,gCACP,G,WCPa,MAAMe,UAAcC,EACjClB,cACEmB,MAAMC,kCAAgC,KAKxCC,8BAAgC,KAC9BlB,KAAKC,SAASC,aAAaiB,QAAQf,IAAIJ,KAAKoB,eAAe,EAC3D,KAEFA,eAAiBZ,UACf,IAAIa,EAAQC,EAAAA,EAAAA,WAAiBC,KAAKC,YAAYC,YAM9C,OALIJ,IACJZ,EAAOiB,QAAQC,cAAgBN,GAC5BO,eAAeC,QAAQ,gBAC1BpB,EAAOiB,QAAQ,cAAgBE,eAAeC,QAAQ,eAE/CpB,CAAM,EAfbT,KAAKkB,+BACP,CAiBAY,QAAQC,EAAKC,GACX,OAAOhC,KAAKC,SAAS,CACnBgC,OAAQD,EAAQC,OAChBF,IAAKA,EACLL,QAAgB,OAAPM,QAAO,IAAPA,GAAAA,EAASE,OAAgB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASE,OAAS,CAAC,EAC9C3B,KAAa,OAAPyB,QAAO,IAAPA,GAAAA,EAASG,KAAc,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASG,UAAOC,EACtCC,iBAAyB,OAAPL,QAAO,IAAPA,GAAAA,EAASK,iBAA0B,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASK,sBAAmBD,GAE9E,E,wJClBF,MAAMvB,EAAQ,IAAIC,EAAAA,EACZwB,EAASC,IAAiBC,KAEhC,UAAgBC,IACd,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,EAAU,UAAEC,GAAcN,GAC3BO,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,MACnCC,GAAiBC,EAAAA,EAAAA,cAAY5C,UACjC,IAGI6C,QAAexC,EAAMiB,QAAQ,WAHnB,CACZG,OAAQ,QAGa,OAAb,OAANoB,QAAM,IAANA,OAAM,EAANA,EAAQC,SACVZ,GAASa,EAAAA,EAAAA,IAAW,CAClBC,KAAMH,EAAO9C,KAAKA,KAAKiD,KACvBC,OAAQJ,EAAO9C,KAAKA,KAAKmD,GACzBC,UAAWN,EAAO9C,KAAKA,KAAKoD,UAC5BC,SAAUP,EAAO9C,KAAKA,KAAKqD,SAC3BC,MAAOR,EAAO9C,KAAKA,KAAKsD,MACxBC,QAAST,EAAO9C,KAAKA,KAAKwD,eAE5Bd,EAAYI,EAAO9C,KAAKA,KAAKiD,OAG7BP,EAAY,mBACd,GACA,IAMF,IAJAe,EAAAA,EAAAA,kBAAgB,KACdb,GAAgB,GAChB,KAEEH,EACF,OAAQiB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAEZ,GAAe,oBAAZlB,EACNV,EAAO6B,KAAK,CACVC,KAAM,kCACNC,QAAS,CACPC,GAAI,CACFF,KAAM,KACNG,MAAO,SAIVC,MAAMD,IACL,GAAS,OAALA,QAAK,IAALA,GAAAA,EAAOE,YACT,OAAO7B,EAAS,WAClB,QAGD,IAAIE,EAAW4B,SAAS1B,GAiB3B,OAAOD,EAhBPT,EAAO6B,KAAK,CACVC,KAAM,yBACNC,QAAS,CACPC,GAAI,CACFF,KAAM,KACNG,MAAO,SAIVC,MAAMD,IACL,GAAS,OAALA,QAAK,IAALA,GAAAA,EAAOE,YACT,OAAO7B,GAAU,EACnB,GAKN,CACD,C","sources":["api/index.js","api/Axios.js","routes/ProtectedComponent.jsx"],"sourcesContent":["import axios from 'axios';\nclass HttpClient {\n\n  constructor(baseURL) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  _handleResponse = (data) => data;\n\n  _handleError = async ({ response, config }) => {\n    const originalRequest = config;\n    // if (response?.status === 401 && !originalRequest._retry) {\n    //   // call refresh token\n    //   localStorage.clear();\n    //   sessionStorage.clear()\n    //   store.dispatch(logout())\n    //   window.location.href = '/sign-in'\n    // }\n    return Promise.resolve(response);\n  };\n}\n\nexport default HttpClient;","import HttpClient from \"./index\";\nimport store from \"../store\";\nexport default class Axios extends HttpClient {\n  constructor() {\n    super(process.env.REACT_APP_BASE_URL);\n    this._initializeRequestInterceptor();\n  }\n\n\n  _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest);\n  };\n\n  _handleRequest = async (config) => {\n    let token = store.getState().user.currentUser.accessToken\n    if (token)\n    config.headers.Authorization = token;\n    if(sessionStorage.getItem('session-id'))\n    config.headers['session-id'] = sessionStorage.getItem('session-id');\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\n    return config;\n  };\n\n  callApi(url, options) {\n    return this.instance({\n      method: options.method,\n      url: url,\n      headers: options?.header ? options?.header : {},\n      data: options?.body ? options?.body : undefined,\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\n    });\n  };\n}\n","import React from \"react\";\nimport {\n  useNavigate\n} from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Axios from \"../api/Axios\";\nimport {  updateUser } from \"../store/user\";\nimport { useCallback } from \"react\";\nimport { useLayoutEffect } from \"react\";\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport Loader from \"../components/Loader\";\nimport { useState } from \"react\";\nconst axios = new Axios();\nconst MySwal = withReactContent(Swal)\n\nexport default (props) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { accessCode, Component } = props;\n  const [userRole, setUserRole] = useState(null);\n  const getCurrentUser = useCallback(async ()=>{\n    let options = {\n      method: \"GET\"\n    }\n    let result = await axios.callApi(\"/user/me\", options)\n    if (result?.status === 200) {\n      dispatch(updateUser({\n        role: result.data.data.role,\n        userId: result.data.data.id,\n        firstName: result.data.data.firstName,\n        lastName: result.data.data.lastName,\n        email: result.data.data.email,\n        contact: result.data.data.phoneNumber\n      }))\n      setUserRole(result.data.data.role)\n    }\n    else{\n      setUserRole(\"sign-in-required\")\n    }\n  },[])\n  \n  useLayoutEffect(()=>{\n    getCurrentUser()\n  },[])\n\n  if(!userRole){\n    return (<Loader/>)\n  }\n  else if(userRole == \"sign-in-required\"){\n    MySwal.fire({\n      text: \"You need to sign in to continue\",\n      buttons: {\n        OK: {\n          text: \"OK\",\n          value: \"OK\",\n        }\n      },\n    })\n      .then((value) => {\n        if (value?.isConfirmed) {\n          return navigate(\"/sign-in\")\n        }\n      });\n  }\n  else if(!accessCode.includes(userRole)){\n    MySwal.fire({\n      text: \"You are not authorized\",\n      buttons: {\n        OK: {\n          text: \"OK\",\n          value: \"OK\",\n        }\n      },\n    })\n      .then((value) => {\n        if (value?.isConfirmed) {\n          return navigate(-1)\n        }\n      });\n  }\n  else {\n    return Component\n  }\n};\n"],"names":["constructor","baseURL","_initializeResponseInterceptor","this","instance","interceptors","response","use","_handleResponse","_handleError","data","async","config","_ref","Promise","resolve","axios","Axios","HttpClient","super","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","sessionStorage","getItem","callApi","url","options","method","header","body","undefined","onUploadProgress","MySwal","withReactContent","Swal","props","dispatch","useDispatch","navigate","useNavigate","accessCode","Component","userRole","setUserRole","useState","getCurrentUser","useCallback","result","status","updateUser","role","userId","id","firstName","lastName","email","contact","phoneNumber","useLayoutEffect","_jsx","Loader","fire","text","buttons","OK","value","then","isConfirmed","includes"],"sourceRoot":""}