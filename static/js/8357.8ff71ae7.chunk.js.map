{"version":3,"file":"static/js/8357.8ff71ae7.chunk.js","mappings":"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","sources":["api/index.js","api/Axios.js","helpers/triggerSwalAlert.js","components/RsuiteTable/index.jsx","components/DateRangePicker/Style.jsx","components/DateRangePicker/index.jsx","screens/EmbarkAdmins/Orders/index.jsx"],"sourcesContent":["import axios from 'axios';\nclass HttpClient {\n\n  constructor(baseURL) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  _handleResponse = (data) => data;\n\n  _handleError = async ({ response, config }) => {\n    const originalRequest = config;\n    // if (response?.status === 401 && !originalRequest._retry) {\n    //   // call refresh token\n    //   localStorage.clear();\n    //   sessionStorage.clear()\n    //   store.dispatch(logout())\n    //   window.location.href = '/sign-in'\n    // }\n    return Promise.resolve(response);\n  };\n}\n\nexport default HttpClient;","import HttpClient from \"./index\";\nimport store from \"../store\";\nexport default class Axios extends HttpClient {\n  constructor() {\n    super(process.env.REACT_APP_BASE_URL);\n    this._initializeRequestInterceptor();\n  }\n\n\n  _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest);\n  };\n\n  _handleRequest = async (config) => {\n    let token = store.getState().user.currentUser.accessToken\n    if (token)\n    config.headers.Authorization = token;\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\n    return config;\n  };\n\n  callApi(url, options) {\n    return this.instance({\n      method: options.method,\n      url: url,\n      headers: options?.header ? options?.header : {},\n      data: options?.body ? options?.body : undefined,\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\n    });\n  };\n}\n","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\n\nconst triggerSwalAlert = async (title, message, type)=>{\n    return MySwal.fire({\n      title: <strong>{title}</strong>,\n      html: <p>{message}</p>,\n      icon: type\n    })\n}\n\nexport default triggerSwalAlert","import { useState } from 'react';\nimport { Table, Pagination,SelectPicker } from 'rsuite';\nimport 'rsuite/dist/rsuite.min.css';\nconst { Column, ColumnGroup, HeaderCell, Cell } = Table;\n\nconst TableComponent = (columns,data) => {\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const limitOptions = [10, 50, 100];\n  const columnData = columns.columns;\n\n  const handleChangeLimit = (dataKey) => {\n    setPage(1);\n    setLimit(dataKey);\n  };\n\n//   const paginationData = data?.filter((v, i) => {\n//     const start = limit * (page - 1);\n//     const end = start + limit;\n//     return i >= start && i < end;\n//   });\n\n\n  return (\n    <div className='datarstable'>\n      <Table className='rstable' id=\"dataTable\" fillHeight={true} bordered cellBordered headerHeight={60} data={data}>\n        {columnData?.map((item,index) => {\n        return ( \n          <>\n          { !item?.children ? (\n            <>\n              <Column key={index} width={item.width} align=\"center\" resizable>\n              <HeaderCell key={index} style={{background:\"#fff\",textTransform:\"none\"}}>{item?.displayName}\n              { item?.headerElement && item?.headerElement}\n              </HeaderCell>\n              {item?.cell \n              ? \n              (<Cell key={index} style={index == \"0\" ? {textTransform:\"none\",background:\"#F1F3F5\"} : {textTransform:\"none\"}} dataKey={item?.accessor}>\n              {item.cell}\n              </Cell>)\n              : \n              (<Cell key={index} style={{textTransform:\"none\"}} dataKey={item?.accessor} />)}\n              </Column>\n            </>\n          ):(\n            <>\n              <ColumnGroup key={index} align=\"center\" header={item?.displayName} style={{background:\"#fff\"}}  >\n                {item.children.map((child)=>{\n                  return (\n                    <Column key={index} width={child.width} align={item.align ? item.align : \"center\"} resizable >\n                  <HeaderCell key={index} style={{background:\"#fff\"}}>{child?.childName}</HeaderCell>\n                  {child?.cell\n                  ? \n                  <Cell key={index} dataKey={child?.accessor}>{child?.cell}</Cell>\n                  : \n                  <Cell key={index}  dataKey={child?.accessor} />\n                }\n                </Column>\n                  )\n                })}\n                \n              </ColumnGroup>\n            </>\n          )}\n\n          </>\n        )\n        })} \n      </Table>\n      <div style={{ padding: 15, display:\"flex\",alignItems:\"center\",justifyContent:\"center\" }}>\n          <Pagination\n            prev\n            next\n            first\n            last\n            ellipsis\n            boundaryLinks\n            maxButtons={5}\n            size=\"md\"\n            total={data.length}\n            limit={limit}\n            limitOptions={limitOptions}\n            activePage={page}\n            onChangePage={setPage}\n            onChangeLimit={handleChangeLimit}\n            />\n            <span style={{ marginLeft: 20, fontSize:\"12px\" }}>\n            Results per page\n            <SelectPicker\n              value={limit}\n              onChange={handleChangeLimit}\n              cleanable={false}\n              searchable={false}\n              placement=\"topStart\"\n              style={{marginLeft:\"10px\",border: \"1px solid #E3E7EB\",color:\"#4A4E52\"}}\n              data={limitOptions.map((key) => ({ value: key, label: key }))}\n            />\n            </span>\n      </div>\n    </div>\n\n  );\n};\n\nexport default TableComponent;\n","import styled from \"styled-components\";\n\nexport const DatePicker = styled.input`\nwidth: 236px;\nheight: 40px;\nborder: 1px solid #A6B0B9;\nborder-radius: 4px;\ncolor: #A6B0B9;\n  padding: 0.56rem 0.25rem 0.56rem 1.875rem;  \nbackground: transparent url(\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20height%3D%220.875rem%22%20width%3D%220.75rem%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22%23A6B0B9%22%20d%3D%22M0%20464c0%2026.5%2021.5%2048%2048%2048h352c26.5%200%2048-21.5%2048-48V192H0v272zm320-196c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zm0%20128c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zM192%20268c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zm0%20128c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zM64%20268c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012H76c-6.6%200-12-5.4-12-12v-40zm0%20128c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012H76c-6.6%200-12-5.4-12-12v-40zM400%2064h-48V16c0-8.8-7.2-16-16-16h-32c-8.8%200-16%207.2-16%2016v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8%200-16%207.2-16%2016v48H48C21.5%2064%200%2085.5%200%20112v48h448v-48c0-26.5-21.5-48-48-48z%22%2F%3E%3C%2Fsvg%3E\") no-repeat 10px center;\n::placeholder {\n    font: normal normal normal 16px/19px \"Proxima Nova Rg\", sans-serif;\n    letter-spacing: 0px;\n    color: #00000099;\n  }\n`","import React, { useRef, useEffect } from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport './index.css';\nimport { DatePicker } from './Style';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nconst DatePickerElement = (props) => {\n  const { onChangeDateRange } = props\n  const todaySampleDate = [new Date().setHours(0, 0, 0, 0), new Date().setHours(0, 0, 0, 0)]\n  const [startDate, endDate] = [new Date().setHours(0, 0, 0, 0), new Date().setHours(0, 0, 0, 0)]\n  const pickerRef = useRef()\n\n  useEffect(() => {\n    pickerRef.current.setStartDate(startDate ?? todaySampleDate[0])\n    pickerRef.current.setEndDate(endDate ?? todaySampleDate[1])\n\n  }, [startDate, endDate])\n\n  const applyDateRangeHandler = (event) => {\n    let selectedDateRangeArr = event.target.value.split(\" - \")\n    selectedDateRangeArr = selectedDateRangeArr.map(date => new Date(date))\n    onChangeDateRange && onChangeDateRange(selectedDateRangeArr)\n  }\n\n  return (\n    <form className=\"dateRange\">\n      <DateRangePicker\n        ref={pickerRef} initialSettings={{ locale: { format: 'MMM DD YYYY' }, showDropdowns: true, opens: 'left' }}\n        onApply={applyDateRangeHandler}>\n        <DatePicker readOnly={true} />\n      </DateRangePicker>\n\n    </form>\n  )\n\n}\n\nexport default DatePickerElement;","import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport { Table, Popover, Whisper, Checkbox, Dropdown, IconButton, Progress, Pagination } from 'rsuite';\r\nimport MoreIcon from '@rsuite/icons/legacy/More';\r\nimport \"./index.css\";\r\nimport TableComponent from '../../../components/RsuiteTable/index.jsx';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport DatePickerElement from '../../../components/DateRangePicker';\r\nimport Axios from '../../../api/Axios';\r\nimport Loader from '../../../components/Loader';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport triggerSwalAlert from '../../../helpers/triggerSwalAlert';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\n\r\nconst axios = new Axios();\r\n\r\nconst ProductOrders = () => {\r\n  const navigate = useNavigate();\r\n  const { Column, HeaderCell, Cell } = Table;\r\n  const [checkedKeys, setCheckedKeys] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [action, setAction] = useState(\"\");\r\n  const [selectedOrderStatus, setSelectedOrderStatus] = useState(\"ALL\");\r\n  const [copyData, setCopyData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sortColumn, setSortColumn] = useState();\r\n  const [sortType, setSortType] = useState();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [csvData, setCSVData] = useState([]);\r\n  const [originalOrdersData, setOriginalOrdersData] = useState([]);\r\n  const [todayStats, setTodayStats] = useState({units: 0, value: 0})\r\n  const [currentMonthStats, setCurrentMonthStats] = useState({units: 0, value: 0})\r\n  const [lastMonthStats, setLastMonthStats] = useState({units: 0, value: 0})\r\n  const [currentYearStats, setCurrentYearStats] = useState({units: 0, value: 0})\r\n  const [customStats, setCustomStats] = useState({units: 0, value: 0})\r\n  let [customerCount, setCustomerCount] = useState(0)\r\n  let [newCustomer, setNewCustomer] = useState(0)\r\n  let [existingCustomer, setExistingCustomer] = useState(0)\r\n  // const [searchKey, setSearchKey] = useState('');\r\n  const orderStatusFilters = [\r\n      {\r\n          \"id\": \"all\",\r\n          \"value\": \"ALL\"\r\n      },\r\n      {\r\n          \"id\": \"processing\",\r\n          \"value\": \"PROCESSING\"\r\n      },\r\n      {\r\n        \"id\": \"onhold\",\r\n        \"value\": \"ON HOLD\"\r\n      },\r\n      {\r\n          \"id\": \"completed\",\r\n          \"value\": \"COMPLETED\"\r\n      },\r\n      {\r\n          \"id\": \"cancelled\",\r\n          \"value\": \"CANCELLED\"\r\n      },\r\n      {\r\n          \"id\": \"refunded\",\r\n          \"value\": \"REFUNDED\"\r\n      },\r\n      {\r\n          \"id\": \"failed\",\r\n          \"value\": \"FAILED\"\r\n      }\r\n  ]\r\n  const [pending, setPending] = useState(false)\r\n  const [finalDate, setFinalDate] = useState([new Date(), new Date()])\r\n\r\n\r\n  let checked = false;\r\n  let indeterminate = false;\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (checkedKeys.length === data.length) {\r\n    checked = true;\r\n  } else if (checkedKeys.length === 0) {\r\n    checked = false;\r\n  } else if (checkedKeys.length > 0 && checkedKeys.length < data.length) {\r\n    indeterminate = true;\r\n  }\r\n\r\n  const handleCheckAll = (value, checked) => {\r\n    const keys = checked ? data.map(item => item.id) : [];\r\n    setCheckedKeys(keys);\r\n  };\r\n  const handleCheck = (value, checked) => {\r\n    const keys = checked ? [...checkedKeys, value] : checkedKeys.filter(item => item !== value);\r\n    setCheckedKeys(keys);\r\n  };\r\n\r\n  const CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\r\n    <Cell {...props} style={{ padding: 0 }}>\r\n      <div style={{ lineHeight: '46px' }}>\r\n        <Checkbox\r\n          value={rowData[dataKey]}\r\n          inline\r\n          onChange={onChange}\r\n          checked={checkedKeys.some(item => item === rowData[dataKey])}\r\n        />\r\n      </div>\r\n    </Cell>\r\n  );\r\n\r\n  const StatusCell = ({ rowData, dataKey, ...props }) => (\r\n    <Cell {...props} style={{ padding: 0 }}>\r\n      <div\r\n        style={{\r\n          background: `${rowData.status == 'COMPLETED' ? '#00ff00' : rowData.status == 'PROCESSING' ? '#FFA500' : rowData.status == 'CANCELLED' ? '#e0e0e0' : 'transparent'}`,\r\n          borderRadius: 6,\r\n          padding: \"5px 10px\",\r\n          marginTop: \"8px\",\r\n          overflow: 'hidden',\r\n          display: 'inline-block'\r\n        }}\r\n      >\r\n        <div>{rowData.status}</div>\r\n      </div>\r\n    </Cell>\r\n  );\r\n\r\n  const handleData = useCallback(async () => {\r\n    setPending(true)\r\n    const options = {\r\n      method: \"GET\"\r\n    }\r\n    const result = await axios.callApi(`order/getOrders?start=${moment(finalDate[0]).startOf(\"day\").valueOf()}&end=${moment(finalDate[1]).endOf(\"day\").valueOf()}&type=${(selectedOrderStatus != \"ALL\") ? selectedOrderStatus : \"\"}`, options)\r\n    if (result.status == 200) {\r\n      setPending(false)\r\n      let ordersArr = []\r\n      let newCustomersArr = []\r\n      let existingCustomersArr = []\r\n      result?.data?.data.forEach((order) => {\r\n        if(order.purchaseCount == 1) newCustomersArr.push(order.userId)\r\n        else existingCustomersArr.push(order.userId)\r\n        ordersArr.push({\r\n          id: order.id,\r\n          orderNo: `${order.orderToken}`,\r\n          shiprocketOrderNo: `${order.id}`,\r\n          name: `${order.addressDetails.shippingAddress.firstName} ${order.addressDetails.shippingAddress.lastName}`,\r\n          date: moment(order.placedAt).format(\"YYYY-MM-DD h:m a\"),\r\n          status: order.orderStatus,\r\n          city: order.addressDetails.shippingAddress.city,\r\n          purchaseNo: order.purchaseCount,\r\n          total: parseInt(order.orderTotalAmount),\r\n        })\r\n      })\r\n      customerCount = result?.data?.customerCount\r\n      setData(ordersArr);\r\n      setCopyData(ordersArr);\r\n      setOriginalOrdersData(result?.data?.data)\r\n      setTodayStats(result?.data?.todayStats)\r\n      setCurrentMonthStats(result?.data?.currentMonthStats)\r\n      setLastMonthStats(result?.data?.lastMonthStats)\r\n      setCurrentYearStats(result?.data?.thisYearStats)\r\n      setCustomStats(result?.data?.customStats)\r\n      setCustomerCount(result?.data?.customerCount)\r\n      newCustomer = new Set(newCustomersArr).size\r\n      existingCustomer = new Set(existingCustomersArr).size\r\n      setNewCustomer(newCustomer)\r\n      setExistingCustomer(existingCustomer)\r\n    }\r\n    else {\r\n      setPending(false)\r\n    }\r\n  }, [finalDate, selectedOrderStatus])\r\n\r\n  // const setFiltersArray = (orders)=>{\r\n  //   let filtersValuesCount = [{all: 0}, {processing: 0}, {completed: 0}, {cancelled: 0}, {refunded: 0}, {failed: 0}]\r\n\r\n  //   orders.forEach(order=>{\r\n  //     filtersValuesCount[0].all += 1\r\n  //     switch(order.orderStatus){\r\n  //       case \"PROCESSING\":\r\n  //         filtersValuesCount[1].processing += 1\r\n  //         break \r\n  //       case \"COMPLETED\":\r\n  //         filtersValuesCount[2].completed += 1\r\n  //         break \r\n  //       case \"CANCELLED\":\r\n  //         filtersValuesCount[3].cancelled += 1\r\n  //         break \r\n  //       case \"REFUNDED\":\r\n  //         filtersValuesCount[4].refunded += 1\r\n  //         break \r\n  //       case \"FAILED\":\r\n  //         filtersValuesCount[5].failed += 1\r\n  //         break\r\n  //       default:\r\n  //         break\r\n  //     }\r\n  //   })\r\n  //   let filtersArr = filtersValuesCount.map(item => {\r\n  //     return {\r\n  //       \"id\": Object.keys(item)[0],\r\n  //       \"value\": `${Object.keys(item)[0].toUpperCase()} (${Object.values(item)[0]})`\r\n  //     }\r\n  //   })\r\n  //   setOrderStatusFilters(filtersArr)\r\n  //   return filtersArr\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleData()\r\n  }, [finalDate, selectedOrderStatus])\r\n\r\n  const handleBulkStatusChange = async (event) => {\r\n    if(checkedKeys.length == 0) return\r\n    const { target: { value } } = event;\r\n    setPending(true)\r\n    setAction(value);\r\n    let options = {\r\n        method: \"POST\",\r\n        body: {\r\n            status: value,\r\n            ids: checkedKeys\r\n        }\r\n    }\r\n    let result = await axios.callApi(\"/order/bulkUpdateOrderStatus\", options);\r\n    if(result.status == 200){\r\n        setPending(false)\r\n        let temp = JSON.parse(JSON.stringify(copyData))\r\n        temp.map(item=> {\r\n          if(checkedKeys.includes(item.id)){\r\n            item.status = value\r\n          }\r\n        })\r\n        setData(temp);\r\n        setCopyData(temp);\r\n        triggerSwalAlert(\"Success\", \"Status Updated Successfully\", \"success\")\r\n    }\r\n    else{\r\n        setPending(false)\r\n        triggerSwalAlert(\"Error\", \"Error while updating the status of order\", \"error\")\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    const {target: { value }} = event;\r\n    setSelectedOrderStatus(value)\r\n  //   let selectedFilter = selectedOrderStatus.split(' ')[0];\r\n  //  let filteredData = copyData.filter((item)=> item.status == selectedFilter)\r\n  //  if(searchKey.length !== 0 && selectedFilter.toLowerCase() !== 'all'){\r\n  //   let newFilteredData = filteredData.filter(\r\n  //       (e) =>\r\n  //         e?.name\r\n  //           ?.toLocaleLowerCase()\r\n  //           .includes(searchKey.trim().toLocaleLowerCase())\r\n  //     );\r\n  //     setData(newFilteredData)\r\n  //     setBackup(filteredData)\r\n  //  }else{\r\n  //   setData(filteredData)\r\n  //   setBackup(filteredData)\r\n  //  }\r\n  //  if(selectedFilter.toLowerCase() == 'all'){\r\n  //      if(searchKey.length !== 0){\r\n  //   let newFilteredData = copyData.filter(\r\n  //       (e) =>\r\n  //         e?.name\r\n  //           ?.toLocaleLowerCase()\r\n  //           .includes(searchKey.trim().toLocaleLowerCase())\r\n  //     );\r\n  //     setData(newFilteredData)\r\n  //     setBackup(newFilteredData)\r\n  //  }else{\r\n  //   setData(copyData)\r\n  //   setBackup(copyData)\r\n  //  }\r\n  //  }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      id: 2,\r\n      value: \"PROCESSING\",\r\n      label: 'Change status to processing'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: \"ON HOLD\",\r\n      label: 'Change status to on-hold'\r\n    },\r\n    {\r\n      id: 4,\r\n      value: \"COMPLETED\",\r\n      label: 'Change status to completed'\r\n    },\r\n    {\r\n      id: 5,\r\n      value: \"CANCELLED\",\r\n      label: 'Change status to cancelled'\r\n    }\r\n  ];\r\n\r\n  const onSearch = useCallback((key) => {\r\n    // setSearchKey(key)\r\n    const temp = copyData.filter(\r\n      (e) =>\r\n        e?.name\r\n          ?.toLocaleLowerCase()\r\n          .includes(key.trim().toLocaleLowerCase())\r\n    );\r\n    setData(temp);\r\n  }, [copyData]);\r\n\r\n  const getData = () => {\r\n    if (sortColumn && sortType) {\r\n      return data.sort((a, b) => {\r\n        let x = a[sortColumn];\r\n        let y = b[sortColumn];\r\n        if (typeof x === 'string') {\r\n          x = x.charCodeAt();\r\n        }\r\n        if (typeof y === 'string') {\r\n          y = y.charCodeAt();\r\n        }\r\n        if (sortType === 'asc') {\r\n          return x - y;\r\n        } else {\r\n          return y - x;\r\n        }\r\n      });\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const handleSortColumn = (sortColumn, sortType) => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setSortColumn(sortColumn);\r\n      setSortType(sortType);\r\n    }, 500);\r\n  };\r\n\r\n  const handleChangeLimit = dataKey => {\r\n    setPage(1);\r\n    setLimit(dataKey);\r\n  };\r\n\r\n  const tableData = getData().filter((v, i) => {\r\n    const start = limit * (page - 1);\r\n    const end = start + limit;\r\n    return i >= start && i < end;\r\n  });\r\n\r\n  const onChangeDateRange = (value) => {\r\n    setFinalDate(value)\r\n  }\r\n\r\n  //   let windowWidth = document.documentElement.clientWidth;\r\n  //   let w = (20 * windowWidth ) / 100;\r\n  //   let w = (20 * 16 ) / 100;\r\n\r\n  const headers = [\r\n    \"PARTNER\",\r\n    \"DATE\",\r\n    \"EAN CODE\",\r\n    \"PRODUCT NAME\",\r\n    \"QTY\",\r\n    \"MRP SALES\",\r\n    \"NET(DISCOUNTED SALES)\",\r\n    \"LOCATION\"\r\n  ]\r\n\r\n  const downloadFile = () => {\r\n    let dataVal = []\r\n    originalOrdersData.forEach((order) => {\r\n      if([\"CANCELLED\", \"REFUNDED\", \"FAILED\"].includes(order.orderStatus)){\r\n        return\r\n      }\r\n      order.orderDetails.forEach(product => {\r\n         dataVal.push({\r\n          \"PARTNER\": \"WEBSITE\",\r\n          \"DATE\": moment(order.placedAt).format(\"DD/MM/YYYY\"),\r\n          \"EAN CODE\": product.hsnNumber,\r\n          \"PRODUCT NAME\": product.productName + \" \" + Object.values(product.attributeCombination),\r\n          \"QTY\": product.count,\r\n          \"MRP SALES\": product.productPrice * product.count,\r\n          \"NET(DISCOUNTED SALES)\": product.productDiscountPrice * product.count,\r\n          \"LOCATION\": order.addressDetails.shippingAddress.city\r\n         })\r\n      })\r\n    })\r\n    setCSVData(dataVal)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {pending ? <Loader /> : null}\r\n      <div className=\"container ordersContainer\">\r\n        <div className=\"header my-4 title fs-3\">Orders</div>\r\n        <div className=\"row mb-5 gy-5\">\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>TODAY'S</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>UNITS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{todayStats?.units || 0}</td>\r\n                  <td className='w-50'>{todayStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CURRENT MONTH</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>UNITS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{currentMonthStats?.units || 0}</td>\r\n                  <td className='w-50'>{currentMonthStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>LAST MONTH</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>UNITS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{lastMonthStats?.units || 0}</td>\r\n                  <td className='w-50'>{lastMonthStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>THIS YEAR</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>UNITS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{currentYearStats?.units || 0}</td>\r\n                  <td className='w-50'>{currentYearStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CUSTOM</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>UNITS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{customStats?.units || 0}</td>\r\n                  <td className='w-50'>{customStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CUSTOMER</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>NEW</td>\r\n                  <td className='w-50'>EXISTING</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{newCustomer}</td>\r\n                  <td className='w-50'>{existingCustomer}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{Math.round(newCustomer / customerCount * 100) || 0}%</td>\r\n                  <td className='w-50'>{Math.round(existingCustomer / customerCount * 100) || 0}%</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CUSTOMER COUNT</th>\r\n              </tr>\r\n                <tr>\r\n                  <td colSpan={2} style={{width:\"100%\",textAlign:\"center\"}}>{customerCount}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className='d-flex align-items-center justify-content-between'>\r\n          <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\r\n            <Select\r\n              displayEmpty\r\n              value={action}\r\n              onChange={handleBulkStatusChange}\r\n              input={<OutlinedInput />}\r\n              renderValue={(selected) => {\r\n                if (!selected) {\r\n                  return <em>Bulk actions</em>;\r\n                }\r\n                return selected;\r\n              }}\r\n              MenuProps={MenuProps}\r\n              inputProps={{ 'aria-label': 'Without label' }}\r\n            >\r\n              {actions.map((item) => (\r\n                <MenuItem\r\n                  key={item.id}\r\n                  value={item.value}\r\n                >\r\n                  {item.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <div className='d-flex align-items-center' style={{gap:\"0 0.75rem\"}}>\r\n            <DatePickerElement onChangeDateRange={onChangeDateRange} />\r\n            <FormControl sx={{ width: 300, mt: 3 }}>\r\n              <Select\r\n                displayEmpty\r\n                value={selectedOrderStatus}\r\n                onChange={handleFilterChange}\r\n                input={<OutlinedInput />}\r\n                renderValue={(selected) => {\r\n                  if (!selected) {\r\n                    return <em>Filters</em>;\r\n                  }\r\n                  return selected;\r\n                }}\r\n                MenuProps={MenuProps}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n              >\r\n                {orderStatusFilters.map((item) => (\r\n                  <MenuItem\r\n                    key={item.id}\r\n                    value={item.value}\r\n                  >\r\n                    {item.value}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <form className={`nosubmit`} onSubmit={(e) => { e.preventDefault(); }}>\r\n              <input className=\"nosubmit\" type=\"search\" placeholder=\"Search\" onChange={(e) => onSearch(e.target.value)} />\r\n            </form>\r\n            <CSVLink\r\n            data={csvData}\r\n            filename=\"orders.csv\"\r\n            headers={headers}\r\n            onClick={downloadFile}\r\n            asyncOnClick={true}\r\n            style={{\r\n              display: \"inline\",\r\n              // height: \"fit-content\",\r\n              // marginRight: \"8px\",\r\n              marginTop: \"0px\",\r\n              textDecoration:\"none\"\r\n            }}\r\n            >\r\n            <button className=\"btn ordersDownload\">Download</button>\r\n            </CSVLink>\r\n          </div>\r\n        </div>\r\n        <Table className='my-4'\r\n          height={300}\r\n          id=\"table\"\r\n          bordered\r\n          loading={loading}\r\n          data={tableData}\r\n          sortColumn={sortColumn}\r\n          sortType={sortType}\r\n          onSortColumn={handleSortColumn}>\r\n          <Column width={100} align=\"center\">\r\n            <HeaderCell style={{ padding: 0 }}>\r\n              <div style={{ lineHeight: '40px' }}>\r\n                <Checkbox\r\n                  inline\r\n                  checked={checked}\r\n                  indeterminate={indeterminate}\r\n                  onChange={handleCheckAll}\r\n                />\r\n              </div>\r\n            </HeaderCell>\r\n            <CheckCell dataKey=\"id\" checkedKeys={checkedKeys} onChange={handleCheck} />\r\n          </Column>\r\n          <Column align=\"center\" sortable resizable>\r\n            <HeaderCell>Order No.</HeaderCell>\r\n            <Cell dataKey=\"orderNo\" />\r\n          </Column>\r\n          <Column align=\"center\" sortable resizable>\r\n            <HeaderCell>Shiprocket Order No.</HeaderCell>\r\n            <Cell dataKey=\"shiprocketOrderNo\" />\r\n          </Column>\r\n          <Column align=\"center\" sortable resizable>\r\n            <HeaderCell>Name</HeaderCell>\r\n            <Cell dataKey=\"name\" />\r\n          </Column>\r\n          <Column align=\"center\" resizable>\r\n            <HeaderCell></HeaderCell>\r\n            <Cell dataKey=\"id\">\r\n              {rowData =>\r\n                <svg onClick={()=>navigate(`/view-order/${rowData.id}`)} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-eye-fill\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z\" />\r\n                  <path d=\"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z\" />\r\n                </svg>}\r\n            </Cell>\r\n          </Column>\r\n          <Column width={100} sortable resizable>\r\n            <HeaderCell>Purchase No.</HeaderCell>\r\n            <Cell dataKey=\"purchaseNo\" />\r\n          </Column>\r\n          <Column width={100} sortable resizable>\r\n            <HeaderCell>City</HeaderCell>\r\n            <Cell dataKey=\"city\" />\r\n          </Column>\r\n          <Column width={300} sortable resizable>\r\n            <HeaderCell>Date</HeaderCell>\r\n            <Cell dataKey=\"date\" />\r\n          </Column>\r\n          <Column width={235} sortable resizable>\r\n            <HeaderCell>Status</HeaderCell>\r\n            <StatusCell style={{ padding: '10px 0' }} dataKey=\"status\">\r\n              {/* {rowData => <Progress percent={rowData.progress} showInfo={false} />} */}\r\n            </StatusCell>\r\n          </Column>\r\n          <Column width={300} sortable resizable>\r\n            <HeaderCell>Total</HeaderCell>\r\n            <Cell style={{ padding: '10px 0' }} dataKey=\"total\">\r\n              {rowData => <div>&#8377; {rowData.total}</div>}\r\n            </Cell>\r\n          </Column>\r\n        </Table>\r\n        <div style={{ padding: 20 }}>\r\n          <Pagination\r\n            prev\r\n            next\r\n            first\r\n            last\r\n            ellipsis\r\n            boundaryLinks\r\n            maxButtons={5}\r\n            size=\"xs\"\r\n            layout={['total', '-', 'limit', '|', 'pager', 'skip']}\r\n            total={getData().length}\r\n            limitOptions={[10, 30, 50]}\r\n            limit={limit}\r\n            activePage={page}\r\n            onChangePage={setPage}\r\n            onChangeLimit={handleChangeLimit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductOrders;"],"names":["HttpClient","_createClass","baseURL","_this","_classCallCheck","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","config","wrap","_context","prev","next","abrupt","Promise","resolve","stop","_x","apply","arguments","this","axios","Axios","_HttpClient","_inherits","_super","_createSuper","call","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","key","value","url","options","method","header","body","undefined","onUploadProgress","MySwal","withReactContent","Swal","triggerSwalAlert","title","message","type","fire","_jsx","children","html","icon","_x2","_x3","Table","DatePicker","styled","_templateObject","_taggedTemplateLiteral","props","onChangeDateRange","todaySampleDate","Date","setHours","startDate","endDate","pickerRef","useRef","useEffect","current","setStartDate","setEndDate","className","DateRangePicker","ref","initialSettings","locale","format","showDropdowns","opens","onApply","event","selectedDateRangeArr","target","split","map","date","readOnly","navigate","useNavigate","Column","HeaderCell","Cell","_useState","useState","_useState2","_slicedToArray","checkedKeys","setCheckedKeys","_useState3","_useState4","setData","_useState5","_useState6","action","setAction","_useState7","_useState8","selectedOrderStatus","setSelectedOrderStatus","_useState9","_useState10","copyData","setCopyData","_useState11","_useState12","loading","setLoading","_useState13","_useState14","sortColumn","setSortColumn","_useState15","_useState16","sortType","setSortType","_useState17","_useState18","limit","setLimit","_useState19","_useState20","page","setPage","_useState21","_useState22","csvData","setCSVData","_useState23","_useState24","originalOrdersData","setOriginalOrdersData","_useState25","units","_useState26","todayStats","setTodayStats","_useState27","_useState28","currentMonthStats","setCurrentMonthStats","_useState29","_useState30","lastMonthStats","setLastMonthStats","_useState31","_useState32","currentYearStats","setCurrentYearStats","_useState33","_useState34","customStats","setCustomStats","_useState35","_useState36","customerCount","setCustomerCount","_useState37","_useState38","newCustomer","setNewCustomer","_useState39","_useState40","existingCustomer","setExistingCustomer","_useState41","_useState42","pending","setPending","_useState43","_useState44","finalDate","setFinalDate","checked","indeterminate","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","length","CheckCell","rowData","onChange","dataKey","_objectWithoutProperties","_excluded","_objectSpread","padding","lineHeight","Checkbox","inline","some","item","StatusCell","_excluded2","background","concat","status","borderRadius","marginTop","overflow","display","handleData","useCallback","result","_result$data","_result$data2","_result$data3","_result$data4","_result$data5","_result$data6","_result$data7","_result$data8","_result$data9","ordersArr","newCustomersArr","existingCustomersArr","callApi","moment","startOf","valueOf","endOf","sent","forEach","order","purchaseCount","push","userId","id","orderNo","orderToken","shiprocketOrderNo","name","addressDetails","shippingAddress","firstName","lastName","placedAt","orderStatus","city","purchaseNo","total","parseInt","orderTotalAmount","thisYearStats","Set","size","handleBulkStatusChange","_ref4","_callee2","temp","_context2","ids","JSON","parse","stringify","includes","onSearch","filter","e","_e$name","toLocaleLowerCase","trim","getData","sort","a","b","x","y","charCodeAt","tableData","v","i","start","_jsxs","_Fragment","Loader","colSpan","Math","round","textAlign","FormControl","sx","m","mt","Select","displayEmpty","input","OutlinedInput","renderValue","selected","inputProps","label","MenuItem","gap","DatePickerElement","onSubmit","preventDefault","placeholder","CSVLink","filename","onClick","dataVal","orderDetails","product","hsnNumber","productName","Object","values","attributeCombination","count","productPrice","productDiscountPrice","asyncOnClick","textDecoration","height","bordered","onSortColumn","setTimeout","align","keys","_toConsumableArray","sortable","resizable","xmlns","fill","viewBox","d","Pagination","first","last","ellipsis","boundaryLinks","maxButtons","layout","limitOptions","activePage","onChangePage","onChangeLimit"],"sourceRoot":""}