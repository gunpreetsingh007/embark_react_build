{"version":3,"file":"static/js/8769.afde12ae.chunk.js","mappings":"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","sources":["api/index.js","api/Axios.js","screens/MyAccount/addresses.jsx"],"sourcesContent":["import axios from 'axios';\nclass HttpClient {\n\n  constructor(baseURL) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  _handleResponse = (data) => data;\n\n  _handleError = async ({ response, config }) => {\n    const originalRequest = config;\n    // if (response?.status === 401 && !originalRequest._retry) {\n    //   // call refresh token\n    //   localStorage.clear();\n    //   sessionStorage.clear()\n    //   store.dispatch(logout())\n    //   window.location.href = '/sign-in'\n    // }\n    return Promise.resolve(response);\n  };\n}\n\nexport default HttpClient;","import HttpClient from \"./index\";\nimport store from \"../store\";\nexport default class Axios extends HttpClient {\n  constructor() {\n    super(process.env.REACT_APP_BASE_URL);\n    this._initializeRequestInterceptor();\n  }\n\n\n  _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest);\n  };\n\n  _handleRequest = async (config) => {\n    let token = store.getState().user.currentUser.accessToken\n    if (token)\n    config.headers.Authorization = token;\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\n    return config;\n  };\n\n  callApi(url, options) {\n    return this.instance({\n      method: options.method,\n      url: url,\n      headers: options?.header ? options?.header : {},\n      data: options?.body ? options?.body : undefined,\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\n    });\n  };\n}\n","import \"./index.css\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport Axios from \"../../api/Axios\";\n\nconst axios = new Axios();\n\nconst Addresses = () => {\n\n  const [billingAddress, setBillingAddress] = useState([])\n  const [shippingAddress, setShippingAddress] = useState([])\n  const [noAddressAvailable, setNoAddressAvailable] = useState(false)\n  const navigate = useNavigate();\n\n  const getUserAddressDetails = async () => {\n    const options = {\n      method: \"GET\"\n    }\n    const result = await axios.callApi(`user/getAddresses`, options)\n    if (result.status == 200) {\n      setBillingAddress(result?.data?.data?.filter(address => address.addressType == \"billing\"))\n      setShippingAddress(result?.data?.data?.filter(address => address.addressType == \"shipping\"))\n      if(result?.data?.data.length == 0){\n        setNoAddressAvailable(true)\n      }\n    }\n  }\n\n  const handleAddAddressClick = (data) => {\n    navigate(`/my-account/addresses/${data}-address${noAddressAvailable ? \"?firstAddress=true\" : \"\"}`)\n  }\n\n  useEffect(() => {\n    getUserAddressDetails()\n  }, [])\n\n  return (\n    <div style={{ backgroundColor: \"white\" }}>\n      <span className=\"text-style\">\n        The following addresses will be used on the checkout page by default.\n      </span>\n      <div className=\"container-fluid\" style={{ backgroundColor: \"white\" }}>\n        <div className=\"row\" style={{ marginTop: \"25px\" }}>\n\n          <div className=\"col-sm-12 col-lg-6 text-style\" >\n            <span style={{ fontSize: \"30px\" }}>Billing address</span><br />\n           {billingAddress.map((item)=>{\n            return (\n              <div className=\"card p-2 mt-2\">\n              <div className=\"text-bold-md\">\n                <i className=\"fw-bold\">{`${item?.firstName} ${item?.lastName}`}</i><br />\n                <i>{`${item?.streetAddress}`}</i><br />\n                {item?.landmark && <><i>{`${item?.landmark}`}</i><br /></>}\n                <i>{`${item?.city} ${item?.pincode}`}</i><br />\n                <i>{`${item?.state}`}</i>\n                </div>\n                <br />\n               <Link className=\"inline-block\" to={`/my-account/addresses/billing-address?id=${item.id}`} style={{ textDecoration: \"none\", color: \"#777777\" }}>{\"Edit\"}</Link>\n              </div>\n            )\n            })}\n          <button className=\"btn btn-dark mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#addAddress\" onClick={()=>handleAddAddressClick('billing')}>Add New Address</button>\n          </div>\n\n          <div className=\"col text-style\"  >\n            <span style={{ fontSize: \"30px\" }}>Shipping address</span><br />\n            {shippingAddress.map((item)=>{\n            return (\n              <div className=\"card p-2 mt-2\">\n              <div className=\"text-bold-md\">\n                <i className=\"fw-bold\">{`${item?.firstName} ${item?.lastName}`}</i><br />\n                <i>{`${item?.streetAddress}`}</i><br />\n                {item?.landmark && <><i>{`${item?.landmark}`}</i><br /></>}\n                <i>{`${item?.city} ${item?.pincode}`}</i><br />\n                <i>{`${item?.state}`}</i>\n                </div>\n                <br />\n               <Link className=\"d-inline\" to={`/my-account/addresses/shipping-address?id=${item.id}`} style={{ textDecoration: \"none\", color: \"#777777\" }}>{\"Edit\"}</Link>\n              </div>\n            )\n            })}\n            <button className=\"btn btn-dark mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#addAddress\" onClick={()=>handleAddAddressClick('shipping')}>Add New Address</button>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Addresses\n"],"names":["HttpClient","_createClass","baseURL","_this","_classCallCheck","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","config","wrap","_context","prev","next","abrupt","Promise","resolve","stop","_x","apply","arguments","this","axios","Axios","_HttpClient","_inherits","_super","_createSuper","call","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","key","value","url","options","method","header","body","undefined","onUploadProgress","_useState","useState","_useState2","_slicedToArray","billingAddress","setBillingAddress","_useState3","_useState4","shippingAddress","setShippingAddress","_useState5","_useState6","noAddressAvailable","setNoAddressAvailable","navigate","useNavigate","getUserAddressDetails","result","_result$data","_result$data$data","_result$data2","_result$data2$data","_result$data3","callApi","sent","status","filter","address","addressType","length","handleAddAddressClick","concat","useEffect","_jsxs","style","backgroundColor","children","_jsx","className","marginTop","fontSize","map","item","firstName","lastName","streetAddress","landmark","_Fragment","city","pincode","state","Link","to","id","textDecoration","color","onClick"],"sourceRoot":""}