{"version":3,"file":"static/js/8130.5858d103.chunk.js","mappings":"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","sources":["helpers/trackUserEvent.js","helpers/triggerSwalAlert.js","screens/CheckOut/index.jsx","screens/CheckOut/validation.js"],"sourcesContent":["import Axios from \"../api/Axios\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst trackUserEvent = (event) => {\r\n    if (sessionStorage.getItem(\"session-id\") && isValidUUID(sessionStorage.getItem(\"session-id\"))) {\r\n        axios.callApi(\"/session/trackUserEvent\", {\r\n            method: \"POST\",\r\n            body: {\r\n                event\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        sessionStorage.removeItem('session-id');\r\n        const keyword = 'utm'; // The keyword you want to match\r\n        const matchingParams = getParamsMatchingKeyword(keyword);\r\n        let options = {\r\n            method: \"POST\",\r\n            body: {\r\n                additionalDetails: matchingParams,\r\n                event\r\n            }\r\n        }\r\n        axios.callApi(\"/session/createNewSession\", options).then((result) => {\r\n            sessionStorage.setItem('session-id', result.data.data)\r\n        })\r\n    }\r\n    if(event != \"Add To Cart\"){\r\n        axios.callApi(\"/session/sendFacebookConversionEvent\",{\r\n            method: \"POST\",\r\n            body: {\r\n                eventType: \"PageViewEvent\",\r\n                source_url: window.location.href\r\n            }\r\n        })\r\n    }\r\n    else{\r\n        axios.callApi(\"/session/sendFacebookConversionEvent\",{\r\n            method: \"POST\",\r\n            body: {\r\n                eventType: \"AddToCartEvent\",\r\n                source_url: window.location.href\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction getParamsMatchingKeyword(keyword) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const matchingParams = {};\r\n\r\n    for (const [key, value] of params) {\r\n        if (key.includes(keyword)) {\r\n            matchingParams[key] = value;\r\n        }\r\n    }\r\n\r\n    return matchingParams;\r\n}\r\n\r\nfunction isValidUUID(uuid) {\r\n    const uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\r\n    return uuidPattern.test(uuid);\r\n}\r\n\r\nexport default trackUserEvent","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\n\nconst triggerSwalAlert = async (title, message, type)=>{\n    return MySwal.fire({\n      title: <strong>{title}</strong>,\n      html: <p>{message}</p>,\n      icon: type\n    })\n}\n\nexport default triggerSwalAlert","import { useCallback, useEffect, useState } from \"react\";\nimport { validation } from './validation'\nimport Axios from \"../../api/Axios\";\nimport { Link, useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport \"./index.css\"\nimport { isEqual } from \"lodash\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { cartActions } from \"../../store/cart\";\nimport { useDispatch } from \"react-redux\";\nimport store from \"../../store\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport triggerSwalAlert from \"../../helpers/triggerSwalAlert\";\nimport trackUserEvent from \"../../helpers/trackUserEvent\";\nconst MySwal = withReactContent(Swal)\n\nconst axios = new Axios();\n\nconst CheckOut = () => {\n\n    const navigate = useNavigate()\n    const location = useLocation()\n    const [pending, setPending] = useState(false)\n    const [error, setError] = useState({\n        firstName: false,\n        lastName: false,\n        email: false,\n        phone: false,\n    });\n    const currentUser = store.getState().user.currentUser\n    let [billingAddress, setBillingAddress] = useState([])\n    let [shippingAddress, setShippingAddress] = useState([])\n    const [freeProducts, setFreeProducts] = useState([]);\n    let [popups,setPopups] = useState([]);\n    const [selectedBillingAddress, setSelectedBillingAddress] = useState(null)\n    const [selectedShippingAddress, setSelectedShippingAddress] = useState(null)\n    const [showBillingAddress, setShowBillingAddress] = useState(false)\n    const [cartProducts, setCartProducts] = useState([]);\n    const [selectedCartProducts, setSelectedCartProducts] = useState([]);\n    const selectedList = useSelector((state) => state.cart.itemsList);\n    const [noAddressAvailable, setNoAddressAvailable] = useState(false)\n    const [subtotalWithoutDiscount, setSubTotalWithoutDiscount] = useState(0);\n    const [subtotalWithDiscount, setSubTotalWithDiscount] = useState(0);\n    const [totalDiscount, setTotalDiscount] = useState(0);\n    const [shippingCharges, setShippingCharges] = useState(0);\n    const [orderType, setOrderType] = useState(\"COD\")\n    const [searchParams, setSearchParams] = useSearchParams();\n    const couponCode = searchParams.get(\"couponCode\")\n    const [couponAmount, setCouponAmount] = useState(0);\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        email: currentUser.email,\n        phone: currentUser.contact,\n        notes: \"\"\n    });\n\n\n    const onChange = (value, target) => {\n        setData({\n            ...data,\n            [target]: value,\n        });\n        if (error.email === true || error.firstName === true || error.lastName === true || error.phone) {\n            setError({\n                ...error,\n                [target]: false\n            })\n        }\n    };\n\n    const loadScript = (src) => {\n        return new Promise((resolve) => {\n            const script = document.createElement(\"script\");\n            script.src = src;\n            script.onload = () => {\n                resolve(true);\n            };\n            script.onerror = () => {\n                resolve(false);\n            };\n            document.body.appendChild(script);\n        });\n    }\n\n    const handleRazorpayPayment = async (order, payload)=>{\n\n        let getUserDetailsResponse = await axios.callApi(`user/getUserDetails`, {method: \"GET\"})\n        let currentUser = getUserDetailsResponse.data.user\n\n        let options = {\n            \"key\": process.env.REACT_APP_RAZORPAY_KEY_ID, // Enter the Key ID generated from the Dashboard\n            \"amount\": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n            \"currency\": \"INR\",\n            \"name\": `Order Payment`,\n            \"description\": \"\",\n            \"image\": \"\",\n            \"order_id\": order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n            \"handler\": async function (response){\n                setPending(true)\n                let axiosOption = {\n                    method: \"POST\",\n                    body: {\n                        payload,\n                        razorpay_payment_id: response.razorpay_payment_id,\n                        razorpay_order_id: response.razorpay_order_id,\n                        razorpay_signature: response.razorpay_signature\n                    }\n                }\n                let result = await axios.callApi(\"/order/paymentVerificationAndCreateOrder\", axiosOption)\n                if(result.status == 200){\n                    setPending(false)\n                    dispatch(cartActions.addToCart([]))\n                    navigate(\"/\")\n                    return MySwal.fire({\n                        title: <strong>ORDER PLACED</strong>,\n                        html: <p>Your order has been placed successfully</p>,\n                        icon: 'success'\n                    })\n                }\n                else{\n                    setPending(false)\n                    return MySwal.fire({\n                        title: <strong>Error</strong>,\n                        html: <p>Something went wrong while making your order. Please try again in sometime</p>,\n                        icon: 'error'\n                    })\n                }\n\n            },\n            \"prefill\": {\n                \"name\": `${currentUser.firstName} ${currentUser.lastName}`,\n                \"email\": `${currentUser.email}`,\n                \"contact\": \"\"\n            },\n            \"notes\": {\n                \"address\": \"Razorpay Corporate Office\"\n            },\n            \"theme\": {\n                \"color\": \"#121212\"\n            }\n        };\n        let razor = new window.Razorpay(options);\n        razor.open()\n        razor.on('payment.failed', function (response) {\n            // alert(response.error.code);\n            // alert(response.error.description);\n            // alert(response.error.source);\n            // alert(response.error.step);\n            // alert(response.error.reason);\n            // alert(response.error.metadata.order_id);\n            // alert(response.error.metadata.payment_id);\n        });\n    }\n\n    const handleSubmit = async (e) => {\n        try {\n            e.preventDefault()\n            const valid = validation(data)\n            setError(valid)\n            if (valid.firstName || valid.lastName || valid.email || valid.phone) {\n                return\n            }\n            if (!selectedBillingAddress || !selectedShippingAddress) {\n                return MySwal.fire({\n                    title: <strong>Error</strong>,\n                    html: <p>You need to select billing and shipping addresses</p>,\n                    icon: 'error'\n                })\n            }\n            setPending(true)\n            if(orderType == \"RAZORPAY\"){\n                const razorpayScript = await loadScript(\n                    \"https://checkout.razorpay.com/v1/checkout.js\"\n                );\n            }\n            let addressDetails = {\n                shippingAddress: { ...selectedShippingAddress, firstName: data.firstName, lastName: data.lastName, email: data.email, contact: data.phone },\n                billingAddress: { ...selectedBillingAddress, firstName: data.firstName, lastName: data.lastName, email: data.email, contact: data.phone }\n            }\n            let payload = {\n                addressDetails,\n                selectedList,\n                couponCode: couponCode || null,\n                orderNotes: data.notes,\n                paymentMethod: orderType\n            }\n            const options = {\n                method: \"POST\",\n                body: payload\n            }\n\n            const result = await axios.callApi(`order/createOrder`, options)\n            if (result.status == 200) {\n                setPending(false)\n                if(orderType == \"RAZORPAY\"){\n                    return await handleRazorpayPayment(result?.data?.data, payload)\n                }\n                dispatch(cartActions.addToCart([]))\n                navigate(\"/\")\n                return MySwal.fire({\n                    title: <strong>ORDER PLACED</strong>,\n                    html: <p>Your order has been placed successfully</p>,\n                    icon: 'success'\n                })\n            }\n            else {\n                setPending(false)\n                return MySwal.fire({\n                    title: <strong>Error</strong>,\n                    html: <p>Something went wrong while making your order. Please try again in sometime</p>,\n                    icon: 'error'\n                })\n            }\n        }\n        catch (error) {\n            console.error(\"Something went wrong\")\n        }\n    }\n\n    const handleGetFreeProducts = useCallback(async () => {\n        let unlockedPopup\n        if(subtotalWithDiscount != 0 && popups.length){\n          let tempPopups = [...popups]\n          tempPopups.reverse()\n          tempPopups.every((popup) => {\n            if(subtotalWithDiscount >= popup.minimumAmount){\n              unlockedPopup = popup\n              return false\n            }\n            else{\n              return true\n            }\n          })\n        }\n        if(!unlockedPopup) {\n            setFreeProducts([])\n            return\n        }\n    \n        setFreeProducts(unlockedPopup.products)\n    }, [popups, subtotalWithDiscount])\n\n    const getAllPopups = useCallback(async () => {\n        setPending(true)\n        let options = {\n          method: \"GET\"\n        }\n        let result = await axios.callApi(\"/popup/getAllPopups\", options);\n        if (result?.status == 200) {\n          setPending(false)\n          popups = result?.data?.data\n          setPopups(result?.data?.data)\n        }\n        else {\n          setPending(false)\n        }\n    }, [])\n\n    const getUserAddressDetails = async () => {\n        const options = {\n            method: \"GET\"\n        }\n        const result = await axios.callApi(`user/getAddresses`, options)\n        if (result.status == 200) {\n            if(result?.data?.data.length == 0){\n                setNoAddressAvailable(true)\n            }\n            billingAddress = result?.data?.data?.filter(address => address.addressType == \"billing\")\n            setBillingAddress([...billingAddress])\n            shippingAddress = result?.data?.data?.filter(address => address.addressType == \"shipping\")\n            setShippingAddress([...shippingAddress])\n            setSelectedBillingAddress(shippingAddress[0])\n            setSelectedShippingAddress(shippingAddress[0])\n        }\n    }\n\n    useEffect(() => {\n        getUserAddressDetails()\n    }, [])\n\n    const handleAddNewClick = (data) => {\n        navigate(`/addEditAddress/${data}-address${noAddressAvailable ? \"?firstAddress=true\" : \"\"}`)\n    }\n\n    const handleShippingAddressChange = (address) => {\n        setSelectedShippingAddress(address)\n        if (!showBillingAddress) {\n            setSelectedBillingAddress(address)\n        }\n    }\n\n    const getProductsInCart = useCallback(async () => {\n        try {\n            setPending(true);\n            const options = {\n                method: \"POST\",\n                body: selectedList,\n            };\n            const result = await axios.callApi(`/product/getProductsInCart`, options);\n            if (result?.status == 200) {\n                setPending(false);\n                let cartProducts = result?.data?.data\n                let selectedCartProducts = result?.data?.data?.map(item => {\n                    return item?.productDetails?.find(x => isEqual(x.attributeCombination, item.attributeCombination))\n                })\n                setCartProducts(cartProducts);\n                setSelectedCartProducts(selectedCartProducts)\n                setAmountSummary(cartProducts, selectedCartProducts);\n            } else {\n                setPending(false);\n            }\n        } catch (err) {\n            setPending(false);\n        }\n    }, [selectedList]);\n\n    useEffect(() => {\n        getProductsInCart();\n    }, []);\n\n    useEffect(() => {\n        getAllPopups();\n    }, []);\n\n    useEffect(() => {\n        trackUserEvent(\"Checkout\")\n    },[])\n\n    useEffect(() => {\n        handleGetFreeProducts()\n    },[popups, subtotalWithDiscount])\n\n    const setAmountSummary = (cartProducts, selectedCartProducts, isCouponAppliedToCompleteCart=false, couponValue=null) => {\n        let totalAmountWithoutDiscount = 0;\n        let totalAmountWithDiscount = 0;\n        let totalDiscount = 0;\n        let deliveryCharges = 0;\n        cartProducts.forEach((product, index) => {\n            let selectedProduct = selectedCartProducts[index]\n            totalAmountWithoutDiscount +=\n                selectedProduct.productPrice * product.count;\n            totalAmountWithDiscount +=\n                selectedProduct.productDiscountPrice * product.count;\n            let discount =\n                selectedProduct.productPrice * product.count -\n                selectedProduct.productDiscountPrice * product.count;\n            totalDiscount += discount;\n        });\n        if (isCouponAppliedToCompleteCart) {\n            let couponAmountTemp = Math.round(totalAmountWithDiscount * couponValue / 100)\n            setCouponAmount(couponAmountTemp)\n            totalAmountWithDiscount = totalAmountWithDiscount - couponAmountTemp\n        }\n        if (totalAmountWithDiscount < 500) {\n            deliveryCharges = 50\n        }\n        totalAmountWithDiscount = totalAmountWithDiscount + deliveryCharges\n        handleGetFreeProducts(totalAmountWithDiscount)\n        setSubTotalWithDiscount(totalAmountWithDiscount);\n        setSubTotalWithoutDiscount(totalAmountWithoutDiscount);\n        setTotalDiscount(totalDiscount);\n        setShippingCharges(deliveryCharges)\n    };\n\n    useEffect(() => {\n        if(!location?.state?.showPopup){\n           return\n        }\n        {\n          subtotalWithDiscount != 0 && popups.length && subtotalWithDiscount < popups[popups.length -1].minimumAmount && MySwal.fire({\n            title: <strong>Available offer</strong>,\n            html: <Swiper\n              style={{ fontSize: \"2.5rem\", cursor: \"default\" }}\n              slidesPerView={1}\n            >\n              {popups.map((popup) => {\n                return subtotalWithDiscount < popup?.minimumAmount && <SwiperSlide>\n                  <img src={process.env.REACT_APP_BASE_URL + \"/\" + popup?.image?.url} alt=\"\" style={{ width: '17rem', height: \"12rem\" }} /> <br />\n                </SwiperSlide>\n              })}\n\n            </Swiper>\n          })\n        }\n      }, [popups,subtotalWithDiscount])\n\n    function findProductWithVariantId(product) {\n        return (\n            product.productId == this.productId &&\n            product.productVariantId == this.productVariantId\n        );\n    }\n    \n    useEffect(() => {\n        if(!couponCode || !cartProducts.length) return\n\n        let options = {\n            method: \"POST\",\n            body: {\n                selectedList,\n                couponCode\n            }\n        }\n        axios.callApi(\"/coupon/validateAndApplyCoupon\", options).then(result => {\n            if (result?.status == 200) {\n                let cartProductTemp = JSON.parse(JSON.stringify(cartProducts));\n                let selectedCartProductsTemp = JSON.parse(JSON.stringify(selectedCartProducts))\n                if (result?.data?.data?.products && result?.data?.data?.products.length) {\n                    for (let i = 0; i < result?.data?.data?.products.length; i++) {\n                        let product = result?.data?.data?.products[i]\n                        let couponProductIndex = cartProductTemp.findIndex(findProductWithVariantId, product)\n                        if (couponProductIndex != -1) {\n                            selectedCartProductsTemp[couponProductIndex].productDiscountPrice = Math.round(selectedCartProductsTemp[couponProductIndex].productDiscountPrice - selectedCartProductsTemp[couponProductIndex].productDiscountPrice * result.data.data.couponValue / 100)\n                        }\n                    }\n                    setSelectedCartProducts([...selectedCartProductsTemp])\n                }\n                setAmountSummary(cartProductTemp, selectedCartProductsTemp, result?.data?.data?.products == null, result?.data?.data?.couponValue);\n            }\n            else {\n                triggerSwalAlert(\"Error\", result?.data?.errorMessage || \"Something went wrong\", \"error\")\n            }\n        });\n    }, [cartProducts])\n\n    return (\n        <>\n            {pending ? <Loader /> : null}\n            <div className=\"checkout-container container pb-4\" style={{ backgroundColor: \"white\" }}>\n                <span className=\"heading\">CHECKOUT DETAILS</span>\n                <form>\n                    <div className=\"row\">\n                        <div className=\"col-1\"></div>\n                        <div className=\"col-lg-10 col-sm-12\">\n                            <div className=\"text-style\">\n                                BILLING DETAILS\n                            </div>\n                            <div className=\"row\" style={{ marginTop: \"25px\" }}>\n                                <div className='col-lg-6 col-sm-12 form-group mb-2'>\n                                    <label htmlFor=\"firstName\" className='form-label'>First Name</label>\n                                    <input type=\"text\" id='firstName' className={`form-control ${error.firstName ? \"errorInputField\" : \"\"}`} required onChange={e => onChange(e.target.value, 'firstName')} value={data.firstName} />\n                                    {error.firstName && <div className='error'>\n                                        Please enter your first name\n                                    </div>}\n                                </div>\n                                <div className='col-lg-6 form-group mb-2'>\n                                    <label htmlFor=\"lastName\" className='form-label'>Last Name</label>\n                                    <input type=\"text\" id='lastName' className={`form-control ${error.lastName ? \"errorInputField\" : \"\"}`} required onChange={e => onChange(e.target.value, 'lastName')} value={data.lastName} />\n                                    {error.lastName && <div className='error'>\n                                        Please enter your last name\n                                    </div>}\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-lg-6 mt-5\">\n                                    <div className='form-group mb-2'>\n                                        <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                                        <input type=\"email\" id='email' className={`form-control ${error.email ? \"errorInputField\" : \"\"}`} onChange={e => onChange(e.target.value, 'email')} value={data.email} />\n                                        {error.email && <div className='error'>\n                                            {error.message ? \"Please enter a valid email\" : \"Please enter your email\"}\n                                        </div>}\n                                    </div>\n                                    <div className='form-group mb-2'>\n                                        <label htmlFor=\"phone\" className=\"form-label\">Phone No.</label>\n                                        <input type=\"number\" id='phone' className={`form-control ${error.phone ? \"errorInputField\" : \"\"}`} onChange={e => onChange(e.target.value, 'phone')} value={data.phone} />\n                                        {error.phone && <div className='error'>\n                                            Please enter valid phone number\n                                        </div>}\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-6\">\n                                    <div className=\"text-style\" style={{ marginBottom: \"1rem\" }}>\n                                        ADDITIONAL INFORMATION\n                                    </div>\n                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                                        <strong style={{ marginBottom: \"0.3rem\" }}>\n                                            Order notes (optional)\n                                        </strong>\n                                        <textarea cols=\"10\" rows=\"4\" placeholder=\"Notes about your order, e.g. special notes for delivery.\" onChange={e => onChange(e.target.value, 'notes')}></textarea>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-6 mt-4\">\n                                    <div className=\"title ps-0 mb-3\">Select a Shipping (Delivery) address</div>\n                                    <div className=\"form-group\">\n                                        {shippingAddress?.map((item) => {\n                                            return (\n                                                <label className=\"card p-2 mb-3\" htmlFor={`shippingAddressRadio${shippingAddress.indexOf(item)}`}>\n                                                    <span>\n                                                        <div className=\"d-flex align-items-start\">\n                                                            <input type=\"radio\" className=\"me-2 mt-2\" name=\"shippingAddressRadio\" id={`shippingAddressRadio${shippingAddress.indexOf(item)}`} defaultChecked={selectedShippingAddress ? isEqual(selectedShippingAddress, item) ? true : false : shippingAddress.indexOf(item) == 0 ? true : false} onChange={() => handleShippingAddressChange(item)} />\n                                                            {item ? <div className=\"text-bold-md\">\n                                                                {item?.companyName && <><i>{`${item?.companyName}`}</i><br /></>}\n                                                                <i>{`${item?.streetAddress}`}</i><br />\n                                                                {item?.landmark && <><i>{`${item?.landmark}`}</i><br /></>}\n                                                                <i>{`${item?.city} ${item?.pincode}`}</i><br />\n                                                                <i>{`${item?.state}`}</i>\n                                                                <br />\n                                                                <br />\n                                                                <Link to={`/addEditAddress/shipping-address?id=${item.id}`} className=\"mt-4\" style={{ textDecoration: \"underline\", color: \"#777777\" }}>{\"Edit\"}</Link>\n                                                                <br />\n                                                            </div> : ''}\n                                                        </div>\n                                                    </span>\n                                                </label>\n                                            )\n                                        })}\n                                    </div>\n                                    <button className=\"btn btn-dark\" data-bs-toggle=\"modal\" data-bs-target=\"#addAddress\" onClick={() => handleAddNewClick('shipping')}>Add New Shipping Address</button>\n                                    {/* billing Details  */}\n                                    <br />\n                                    <label htmlFor=\"\" className=\"mt-4\">\n                                        <input type=\"radio\" name=\"billingAddressRadio\"\n                                            onChange={() => {\n                                                setShowBillingAddress(false)\n                                                setSelectedBillingAddress(selectedShippingAddress)\n                                            }} defaultChecked /><span className=\"title\">Billing address same as Shipping address</span>\n                                    </label>\n                                    <br />\n                                    <label htmlFor=\"\" className=\"mt-4\">\n                                        <input type=\"radio\" name=\"billingAddressRadio\"\n                                            onChange={() => {\n                                                setShowBillingAddress(true)\n                                                setSelectedBillingAddress(billingAddress[0])\n                                            }} /><span className=\"title\">Select Another Billing address</span>\n                                    </label>\n                                    {showBillingAddress ?\n                                        <>\n                                            <div className=\"form-group\">\n                                                {billingAddress?.map((item) => {\n                                                    return (\n                                                        <label className=\"card p-2 mb-3\" htmlFor={`billingAddressRadio${billingAddress.indexOf(item)}`}>\n                                                            <span>\n                                                                <div className=\"d-flex align-items-start\">\n                                                                    <input type=\"radio\" className=\"me-2 mt-2\" name=\"billingAddressRadio\" id={`billingAddressRadio${billingAddress.indexOf(item)}`} defaultChecked={billingAddress.indexOf(item) == 0 ? true : false} onChange={() => setSelectedBillingAddress(item)} />\n                                                                    {item ? <div className=\"text-bold-md\">\n                                                                        {item?.companyName && <><i>{`${item?.companyName}`}</i><br /></>}\n                                                                        <i>{`${item?.streetAddress}`}</i><br />\n                                                                        {item?.landmark && <><i>{`${item?.landmark}`}</i><br /></>}\n                                                                        <i>{`${item?.city} ${item?.pincode}`}</i><br />\n                                                                        <i>{`${item?.state}`}</i>\n                                                                        <br />\n                                                                        <br />\n                                                                        <Link to={`/addEditAddress/billing-address?id=${item.id}`} className=\"mt-4\" style={{ textDecoration: \"underline\", color: \"#777777\" }}>{\"Edit\"}</Link>\n                                                                        <br />\n                                                                    </div> : ''}\n                                                                </div>\n                                                            </span>\n                                                        </label>\n                                                    )\n                                                })}\n                                            </div>\n                                            <button className=\"btn btn-dark\" data-bs-toggle=\"modal\" data-bs-target=\"#addAddress\" onClick={() => handleAddNewClick('billing')}>Add New Billing Address</button>\n                                        </>\n                                        : <></>\n                                    }\n\n                                </div>\n                                <div className=\"col-lg-6 mt-4\">\n                                    <div className=\"text-style\" style={{ fontSize: \"1.2rem\" }}>\n                                        YOUR ORDER\n                                    </div>\n                                    <div className=\"order-section ps-0\">\n                                        <div className=\"heading\">\n                                            <span>PRODUCT</span>\n                                            <span>SUB TOTAL</span>\n                                        </div>\n                                        {cartProducts.map((product, index) => {\n                                            return (\n                                                <div className=\"orders\">\n                                                    <span>{product?.productName + \" \" + Object.values(product.attributeCombination)}  × {product.count}</span>\n                                                    <span>₹{selectedCartProducts[index]?.productDiscountPrice * product?.count}</span>\n                                                </div>\n                                            )\n                                        })}\n                                        {freeProducts.map((product) => {\n                                            return (\n                                                <div className=\"orders\">\n                                                    <span>{product?.productName + \" \" + Object.values(product?.attributeCombination)}  × {product?.count}</span>\n                                                    <span>FREE</span>\n                                                </div>\n                                            )\n                                        })}\n                                        {couponAmount ? (\n                                            <div className=\"heading\">\n                                                <span>COUPON APPLIED</span>\n                                                <div className=\"total-price\">\n                                                    <span style={{ textAlign: \"end\" }}>₹{couponAmount}</span>\n                                                </div>\n                                            </div>\n                                        ) : null}\n                                        <div className=\"heading\">\n                                            <span>DELIVERY</span>\n                                            <div className=\"total-price\">\n                                                <span style={{ textAlign: \"end\" }}>₹{shippingCharges}</span>\n                                                <span className=\"tax-info\">{shippingCharges == 0 ? `(Free Delivery over ₹500)` : \"\"}</span>\n                                            </div>\n                                        </div>\n                                        <div className=\"heading\">\n                                            <span>Total</span>\n                                            <div className=\"total-price\">\n                                                <span style={{ textAlign: \"end\" }}>₹{subtotalWithDiscount}</span>\n                                                <span className=\"tax-info\">{selectedShippingAddress?.state?.toLowerCase() == \"maharashtra\" ? `(includes ₹${(subtotalWithDiscount * 9 / 100).toFixed(1)} 9% CGST, ₹${(subtotalWithDiscount * 9 / 100).toFixed(1)} 9% SGST)` : `(includes ₹${(subtotalWithDiscount * 18 / 100).toFixed(1)} 18% GST)`}</span>\n                                            </div>\n                                        </div>\n                                        <div className=\"mt-3\">Orders usually dispatch in 1-2 working days</div>\n                                        <label htmlFor=\"\" className=\"mt-4\">\n                                            <input type=\"radio\" name=\"orderType\"\n                                                onChange={() => {\n                                                    setOrderType(\"COD\")\n                                                }} defaultChecked /><span className=\"title\">Cash on delivery</span>\n                                        </label>\n                                        <br />\n                                        <label htmlFor=\"\" className=\"mt-4\">\n                                            <input type=\"radio\" name=\"orderType\"\n                                                onChange={() => {\n                                                    setOrderType(\"RAZORPAY\")\n                                                }} /><span className=\"title\">Credit Card/Debit Card/NetBanking <img src=\"https://cdn.razorpay.com/static/assets/logo/payment.svg\" alt=\"Credit Card/Debit Card/NetBanking\"></img></span>\n                                        </label>\n                                        <button className='btn btn-dark mt-3 mb-3' onClick={(e) => handleSubmit(e)}>PLACE ORDER</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-1\"></div>\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default CheckOut\n","export const validation = (data) => {\n  const { firstName, lastName, email, country, state, streetAddress, city, postcode, phone } = data;\n  var errorVal = {\n    firstName: false,\n    lastName: false,\n    email: false,\n    country: false,\n    state: false,\n    streetAddress: false,\n    city: false,\n    postcode: false,\n    phone: false,\n    message: \"\"\n  }\n\n  if (!firstName) {\n    errorVal[\"firstName\"] = true\n  }\n  if (!lastName) {\n    errorVal[\"lastName\"] = true\n  }\n  if (!email) {\n    errorVal[\"email\"] = true\n  }\n  if (email && !(/\\S+@\\S+\\.\\S+/.test(email))) {\n    errorVal[\"email\"] = true\n    errorVal[\"message\"] = \"invalid email\"\n  }\n  if (!country) {\n    errorVal[\"country\"] = true\n  }\n  if (!state) {\n    errorVal[\"state\"] = true\n  }\n  if (!streetAddress) {\n    errorVal[\"streetAddress\"] = true\n  }\n  if (!city) {\n    errorVal[\"city\"] = true\n  }\n  if (!postcode) {\n    errorVal[\"postcode\"] = true\n  }\n  if (!phone) {\n    errorVal[\"phone\"] = true\n  }\n  if (phone && phone.length != 10) {\n    errorVal[\"phone\"] = true\n  }\n  return errorVal\n};"],"names":["axios","Axios","event","sessionStorage","getItem","uuid","test","callApi","method","body","removeItem","matchingParams","keyword","params","URLSearchParams","window","location","search","key","value","includes","getParamsMatchingKeyword","options","additionalDetails","then","result","setItem","data","eventType","source_url","href","MySwal","withReactContent","Swal","async","title","message","type","fire","_jsx","children","html","icon","CheckOut","_shippingAddress","_billingAddress","_selectedShippingAddr","navigate","useNavigate","useLocation","pending","setPending","useState","error","setError","firstName","lastName","email","phone","currentUser","store","user","billingAddress","setBillingAddress","shippingAddress","setShippingAddress","freeProducts","setFreeProducts","popups","setPopups","selectedBillingAddress","setSelectedBillingAddress","selectedShippingAddress","setSelectedShippingAddress","showBillingAddress","setShowBillingAddress","cartProducts","setCartProducts","selectedCartProducts","setSelectedCartProducts","selectedList","useSelector","state","cart","itemsList","noAddressAvailable","setNoAddressAvailable","subtotalWithoutDiscount","setSubTotalWithoutDiscount","subtotalWithDiscount","setSubTotalWithDiscount","totalDiscount","setTotalDiscount","shippingCharges","setShippingCharges","orderType","setOrderType","searchParams","setSearchParams","useSearchParams","couponCode","get","couponAmount","setCouponAmount","dispatch","useDispatch","setData","contact","notes","onChange","target","handleSubmit","e","preventDefault","valid","country","streetAddress","city","postcode","errorVal","length","validation","src","Promise","resolve","script","document","createElement","onload","onerror","appendChild","payload","addressDetails","orderNotes","paymentMethod","_result$data","status","order","process","amount","id","response","axiosOption","razorpay_payment_id","razorpay_order_id","razorpay_signature","cartActions","concat","razor","Razorpay","open","on","handleRazorpayPayment","console","handleGetFreeProducts","useCallback","unlockedPopup","tempPopups","reverse","every","popup","minimumAmount","products","getAllPopups","_result$data2","_result$data3","useEffect","_result$data4","_result$data5","_result$data5$data","_result$data6","_result$data6$data","filter","address","addressType","getUserAddressDetails","handleAddNewClick","getProductsInCart","_result$data7","_result$data8","_result$data8$data","map","item","_item$productDetails","productDetails","find","x","isEqual","attributeCombination","setAmountSummary","err","trackUserEvent","isCouponAppliedToCompleteCart","arguments","undefined","couponValue","totalAmountWithoutDiscount","totalAmountWithDiscount","deliveryCharges","forEach","product","index","selectedProduct","productPrice","count","productDiscountPrice","discount","couponAmountTemp","Math","round","findProductWithVariantId","productId","this","productVariantId","_location$state","showPopup","Swiper","style","fontSize","cursor","slidesPerView","_popup$image","_jsxs","SwiperSlide","image","url","alt","width","height","_result$data9","_result$data9$data","_result$data10","_result$data10$data","_result$data13","_result$data13$data","_result$data14","_result$data14$data","cartProductTemp","JSON","parse","stringify","selectedCartProductsTemp","i","_result$data11","_result$data11$data","_result$data12","_result$data12$data","couponProductIndex","findIndex","_result$data15","triggerSwalAlert","errorMessage","_Fragment","Loader","className","backgroundColor","marginTop","htmlFor","required","marginBottom","display","flexDirection","cols","rows","placeholder","indexOf","name","defaultChecked","handleShippingAddressChange","companyName","landmark","pincode","Link","to","textDecoration","color","onClick","_selectedCartProducts","productName","Object","values","textAlign","toLowerCase","toFixed"],"sourceRoot":""}