{"version":3,"file":"static/js/7905.c92c4e43.chunk.js","mappings":"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","sources":["screens/EmbarkAdmins/AddEditPopup/index.jsx"],"sourcesContent":["import Axios from \"../../../api/Axios\";\nimport Form from \"../../../components/Form/index.tsx\";\nimport PicUpload from \"../../../components/PicUpload/index.tsx\";\nimport { BtnWrapper, Btn, BtnSecondary, Column as Col, Row, Title } from \"../../../components/StyledComponent/index.tsx\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { IoMdAddCircleOutline } from \"react-icons/io\";\nimport TextInput from \"../../../components/TextInput/index.tsx\";\nimport { useState, useRef, useEffect, useCallback } from \"react\";\nimport Loader from \"../../../components/Loader\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Select from \"../../../components/Select/index.tsx\";\nimport triggerSwalAlert from \"../../../helpers/triggerSwalAlert\";\n\nconst axios = new Axios();\n\nconst AddEditPopup = (props) => {\n\n  const [pending, setPending] = useState(false);\n  let [details, setDetails] = useState({ image: {}})\n  const navigate = useNavigate()\n  const { id } = useParams();\n  const [chooseAttribute, setChooseAttribute] = useState([])\n  const formRef = useRef();\n  let [formValues, setFormValues] = useState([\n    { productName: \"\", attributeValue: \"\", count: \"\" , pictureUrl: \"\", productMainImageProgress: 0, refNumber: \"\", hsnNumber: \"\" },\n  ]);\n  const addFormFields = () => {\n    setFormValues([\n      ...formValues,\n      { productName: \"\", attributeValue: \"\", count: \"\", pictureUrl: \"\", productMainImageProgress: 0, refNumber: \"\", hsnNumber: \"\" },\n    ]);\n  };\n\n  const removeFormFields = async (i) => {\n    let formValue = formValues[i]\n    let promiseArray = []\n    if (formValue.pictureUrl)\n    promiseArray.push(multiplePicturesDeletion(formValue.pictureUrl))\n    await Promise.all(promiseArray)\n    formValues.splice(i, 1);\n    setFormValues([...formValues]);\n  };\n\n  const multiplePicturesDeletion = (image) => {\n    let splitImage = image.split(\"/\")\n    let imageName = splitImage[splitImage.length - 1]\n    const options = {\n      method: \"DELETE\",\n      body: {\n        name: imageName\n      }\n    }\n    return axios.callApi(`/file/deleteFile`, options)\n  }\n\n  const getPopupDetails = useCallback(async () => {\n    setPending(true)\n    let options = {\n      method: \"GET\"\n    }\n    let result = await axios.callApi(`/popup/getPopupById/${id ? id : \"\"}`, options);\n    if (result?.status == 200) {\n      result.data.data.image.progress = 100\n      details = result.data.data\n      setDetails(result.data.data)\n      let tempFormValues = result?.data?.data?.products.map((productVariant)=> {\n        productVariant.productMainImageProgress = 100\n        productVariant.attributeValue = Object.values(productVariant.attributeCombination)[0]\n        return productVariant\n      })\n      setFormValues(tempFormValues)\n      setPending(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    if(props.type == \"edit\"){\n      getPopupDetails()\n    }\n    getAllProductAttributes()\n  }, [])\n\n  const handlePopupImageChange = async (value) => {\n    let formData = new FormData();\n    formData.append(\"productImage\", value);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      body: formData,\n      onUploadProgress: (data) => {\n        details.image.progress = Math.round((100 * data.loaded) / data.total);\n        setDetails(JSON.parse(JSON.stringify(details)))\n      },\n    }\n    let result = await axios.callApi(\"/file/uploadFile\", options)\n\n    if (result.status == 200) {\n      details.image.url = result?.data?.data\n      setDetails(JSON.parse(JSON.stringify(details)))\n    }\n    else {\n      details.image.progress = -1\n      setDetails(JSON.parse(JSON.stringify(details)))\n    }\n  };\n  const handlePopupImageDelete = async () => {\n    setPending(true);\n    let selectedImage = details?.image?.url\n    let splitImage = selectedImage.split(\"/\")\n    let imageName = splitImage[splitImage.length - 1]\n    const options = {\n      method: \"DELETE\",\n      body: {\n        name: imageName\n      }\n    }\n    let result = await axios.callApi(`/file/deleteFile`, options)\n    if (result?.status === 200) {\n      setPending(false);\n      details.image.url = \"\"\n      details.image.progress = 0\n      setDetails(JSON.parse(JSON.stringify(details)))\n      return \"success\";\n    }\n    else {\n      setPending(false);\n      return \"failed\"\n    }\n  };\n\n  const getAllProductAttributes = useCallback(async () => {\n    //setPending(true)\n    let options = {\n      method: \"GET\"\n    }\n    let result = await axios.callApi(\"/addProduct/chooseProductAttributes\", options);\n    if (result?.status == 200) {\n      //setPending(false)\n      setChooseAttribute(result?.data?.data.map((item) => {\n        return {\n          value: item.id,\n          label: item.attributeName\n        }\n      }))\n    }\n  }, [])\n\n  const handleProductMainImageChange = async (value, productVariantIndex) => {\n\n    let formData = new FormData();\n    formData.append(\"productImage\", value);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      body: formData,\n      onUploadProgress: (data) => {\n        formValues[productVariantIndex].productMainImageProgress = Math.round((100 * data.loaded) / data.total);\n        setFormValues([...formValues])\n      },\n    }\n    let result = await axios.callApi(\"/file/uploadFile\", options)\n\n    if (result.status == 200) {\n      formValues[productVariantIndex].pictureUrl = result?.data?.data\n      setFormValues([...formValues])\n    }\n    else {\n      formValues[productVariantIndex].productMainImageProgress = -1\n      setFormValues([...formValues])\n    }\n\n  };\n  const handleProductMainImageDelete = async (productVariantIndex) => {\n    setPending(true);\n    let selectedImage = formValues[productVariantIndex].pictureUrl\n    let splitImage = selectedImage.split(\"/\")\n    let imageName = splitImage[splitImage.length - 1]\n    const options = {\n      method: \"DELETE\",\n      body: {\n        name: imageName\n      }\n    }\n    let result = await axios.callApi(`/file/deleteFile`, options)\n    if (result?.status === 200) {\n      setPending(false);\n      formValues[productVariantIndex].pictureUrl = \"\"\n      formValues[productVariantIndex].productMainImageProgress = 0\n      setFormValues([...formValues])\n      return \"success\";\n    }\n    else {\n      setPending(false);\n      return \"failed\"\n    }\n  };\n\n  const submit = async (value) => {\n    setPending(true);\n    const {\n     minimumAmount\n    } = value;\n\n    const payload = {\n      minimumAmount,\n      image: {url: details.image.url}\n    }\n\n    let products = []\n\n    for (let i = 0; i < formValues.length; i++) {\n      let obj = {}\n      obj.refNumber = value[`refNumber${i}`]\n      obj.hsnNumber = value[`hsnNumber${i}`]\n      obj.productName = value[`productName${i}`]\n      obj.count = value[`count${i}`]\n      obj.pictureUrl = formValues[i].pictureUrl\n      obj[\"attributeCombination\"] = {}\n      obj[\"attributeCombination\"][value[`attribute${i}`]] = value[`attributeValue${i}`]\n      products.push(obj)\n    }\n\n    payload[\"products\"] = products\n\n    if(props.type == \"edit\"){\n      payload[\"id\"] = details.id\n    }\n\n    let options = {\n      method: (props.type == \"edit\") ? \"PUT\" : \"POST\",\n      body: payload\n    }\n\n    let url = (props.type == \"edit\") ? \"/popup/updatePopup\" : \"/popup/createPopup\"\n\n    let result = await axios.callApi(url, options);\n\n    if (result?.status === 200) {\n      let message = (props.type == \"edit\") ? \"Updated successfully\" : \"Popup successfully created\"\n      triggerSwalAlert(\"Success\", message, \"success\" )\n      setPending(false);\n    } else {\n      triggerSwalAlert(\"Error\", \"Something went wrong\", \"error\" )\n      setPending(false);\n    }\n\n    navigate(\"/manage-popups\")\n\n  };\n  return (\n    <>\n      {pending ? <Loader /> : null}\n      <div className=\"container-fluid addEditProductContainer my-lg-5\">\n        <Form onSubmit={submit} ref={formRef}>\n          <Row>\n            <Col md={12}>\n              <TextInput\n                name=\"minimumAmount\"\n                label=\"Minimum Amount\"\n                //imageSrc={Company}\n                required\n                isFormInputElement\n                value={details?.minimumAmount}\n              // maxLength={200}\n              />\n            </Col>\n            <Col md={12}>\n              <PicUpload\n                name={`image`}\n                label=\"Popup Image\"\n                //imageSrc={image}\n                isFormInputElement\n                required\n                acceptedFormat=\"image/png, image/jpeg, image/jpg\"\n                onChange={(value)=>handlePopupImageChange(value)}\n                value={details?.image?.url ? process.env.REACT_APP_BASE_URL + \"/\" + details?.image?.url : \"\"}\n                deleteFile={handlePopupImageDelete}\n                progress={details?.image?.progress}\n              />\n            </Col>\n            <Col md={12}>\n              <Title>Add Products</Title>\n\n              {formValues.map((element, index) => (\n                <div key={index}>\n                  <Col md={12}>\n                    <div className=\"form-title\">\n                      <p>Product {index + 1} Details</p>\n                      {index ? (\n                        <p onClick={() => removeFormFields(index)}>\n                          <AiOutlineCloseCircle />\n                          Delete Product {index + 1}\n                        </p>\n                      ) : null}\n                    </div>\n                  </Col>\n                  <Col md={6}>\n                    <TextInput\n                      name={`productName${index}`}\n                      label=\"Product Name\"\n                      //imageSrc={HA}\n                      value={element.productName}\n                      required\n                      isFormInputElement\n                    />\n                  </Col>\n                  <Col md={6}>\n                    <Select\n                      name={`attribute${index}`}\n                      label=\"Choose Attribute\"\n                      //imageSrc={Time}\n                      required\n                      isFormInputElement\n                      value={Object.keys(element?.attributeCombination || {})[0]}\n                      data={chooseAttribute}\n                    />\n                  </Col>\n                  <Col md={6}>\n                    <TextInput\n                      name={`attributeValue${index}`}\n                      label=\"Attribute Value\"\n                      //imageSrc={HC}\n                      value={element.attributeValue}\n                      required\n                      isFormInputElement\n                    />\n                  </Col>\n                  <Col md={6}>\n                    <TextInput\n                      name={`count${index}`}\n                      label=\"Product Count\"\n                      //imageSrc={HB}\n                      value={element.count}\n                      required\n                      isFormInputElement\n                    />\n                  </Col>\n                  <Col md={6}>\n                    <TextInput\n                      name={`refNumber${index}`}\n                      label=\"Reference Number\"\n                      //imageSrc={HC}\n                      value={element.refNumber}\n                      required\n                      isFormInputElement\n                    />\n                  </Col>\n                  <Col md={6}>\n                    <TextInput\n                      name={`hsnNumber${index}`}\n                      label=\"Hsn Number\"\n                      //imageSrc={HC}\n                      value={element.hsnNumber}\n                      required\n                      isFormInputElement\n                    />\n                  </Col>\n                  <Col md={12}>\n                    <PicUpload\n                      name={`productImage${index}`}\n                      label=\"Product Main Image(single pic)\"\n                      //imageSrc={image}\n                      isFormInputElement\n                      required\n                      productVariantIndex={index}\n                      acceptedFormat=\"image/png, image/jpeg, image/jpg\"\n                      onChange={handleProductMainImageChange}\n                      value={element.pictureUrl ? process.env.REACT_APP_BASE_URL + \"/\" + element.pictureUrl : \"\"}\n                      deleteFile={handleProductMainImageDelete}\n                      progress={element.productMainImageProgress}\n                    />\n                  </Col>\n                </div>\n              ))}\n            </Col>\n          </Row>\n          <p className=\"link-text\" onClick={() => addFormFields()}>\n            <IoMdAddCircleOutline /> Add Another Product\n          </p>\n          <BtnWrapper>\n            <div>\n              <BtnSecondary\n                style={{ marginRight: 12 }}\n              >\n                Cancel\n              </BtnSecondary>\n              <Btn\n                disabled={false}\n                onClick={() => formRef.current?.handleSubmit()}\n              >\n                {false ? <i className=\"fas fa-spinner fa-pulse\"></i> : \"Submit\"}\n              </Btn>\n            </div>\n          </BtnWrapper>\n        </Form>\n      </div>\n    </>\n  )\n}\n\nexport default AddEditPopup;"],"names":["axios","Axios","props","_details2","_details3","_details3$image","_details4","_details4$image","_details5","_details5$image","pending","setPending","useState","details","setDetails","image","navigate","useNavigate","id","useParams","chooseAttribute","setChooseAttribute","formRef","useRef","formValues","setFormValues","productName","attributeValue","count","pictureUrl","productMainImageProgress","refNumber","hsnNumber","multiplePicturesDeletion","splitImage","split","options","method","body","name","length","callApi","getPopupDetails","useCallback","async","result","concat","status","_result$data","_result$data$data","data","progress","tempFormValues","products","map","productVariant","Object","values","attributeCombination","useEffect","type","getAllProductAttributes","_result$data3","item","value","label","attributeName","handleProductMainImageChange","productVariantIndex","formData","FormData","append","headers","onUploadProgress","Math","round","loaded","total","_result$data4","handleProductMainImageDelete","_jsxs","_Fragment","children","_jsx","Loader","className","Form","onSubmit","minimumAmount","payload","url","i","obj","push","message","triggerSwalAlert","ref","Row","Col","md","TextInput","required","isFormInputElement","PicUpload","acceptedFormat","onChange","JSON","parse","stringify","_result$data2","handlePopupImageChange","process","deleteFile","_details","_details$image","Title","element","index","onClick","formValue","promiseArray","Promise","all","splice","removeFormFields","AiOutlineCloseCircle","Select","keys","IoMdAddCircleOutline","BtnWrapper","BtnSecondary","style","marginRight","Btn","disabled","_formRef$current","current","handleSubmit"],"sourceRoot":""}