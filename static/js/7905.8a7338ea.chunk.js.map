{"version":3,"file":"static/js/7905.8a7338ea.chunk.js","mappings":"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","sources":["screens/EmbarkAdmins/AddEditPopup/index.jsx"],"sourcesContent":["import Axios from \"../../../api/Axios\";\r\nimport Form from \"../../../components/Form/index.tsx\";\r\nimport PicUpload from \"../../../components/PicUpload/index.tsx\";\r\nimport { BtnWrapper, Btn, BtnSecondary, Column as Col, Row, Title } from \"../../../components/StyledComponent/index.tsx\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport TextInput from \"../../../components/TextInput/index.tsx\";\r\nimport { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Select from \"../../../components/Select/index.tsx\";\r\nimport triggerSwalAlert from \"../../../helpers/triggerSwalAlert\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst AddEditPopup = (props) => {\r\n\r\n  const [pending, setPending] = useState(false);\r\n  let [details, setDetails] = useState({ image: {}})\r\n  const navigate = useNavigate()\r\n  const { id } = useParams();\r\n  const [chooseAttribute, setChooseAttribute] = useState([])\r\n  const formRef = useRef();\r\n  let [formValues, setFormValues] = useState([\r\n    { productName: \"\", attributeValue: \"\", count: \"\" , pictureUrl: \"\", productMainImageProgress: 0, refNumber: \"\", hsnNumber: \"\" },\r\n  ]);\r\n  const addFormFields = () => {\r\n    setFormValues([\r\n      ...formValues,\r\n      { productName: \"\", attributeValue: \"\", count: \"\", pictureUrl: \"\", productMainImageProgress: 0, refNumber: \"\", hsnNumber: \"\" },\r\n    ]);\r\n  };\r\n\r\n  const removeFormFields = async (i) => {\r\n    let formValue = formValues[i]\r\n    let promiseArray = []\r\n    if (formValue.pictureUrl)\r\n    promiseArray.push(multiplePicturesDeletion(formValue.pictureUrl))\r\n    await Promise.all(promiseArray)\r\n    formValues.splice(i, 1);\r\n    setFormValues([...formValues]);\r\n  };\r\n\r\n  const multiplePicturesDeletion = (image) => {\r\n    let splitImage = image.split(\"/\")\r\n    let imageName = splitImage[splitImage.length - 1]\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: {\r\n        name: imageName\r\n      }\r\n    }\r\n    return axios.callApi(`/file/deleteFile`, options)\r\n  }\r\n\r\n  const getPopupDetails = useCallback(async () => {\r\n    setPending(true)\r\n    let options = {\r\n      method: \"GET\"\r\n    }\r\n    let result = await axios.callApi(`/popup/getPopupById/${id ? id : \"\"}`, options);\r\n    if (result?.status == 200) {\r\n      result.data.data.image.progress = 100\r\n      details = result.data.data\r\n      setDetails(result.data.data)\r\n      let tempFormValues = result?.data?.data?.products.map((productVariant)=> {\r\n        productVariant.productMainImageProgress = 100\r\n        productVariant.attributeValue = Object.values(productVariant.attributeCombination)[0]\r\n        return productVariant\r\n      })\r\n      setFormValues(tempFormValues)\r\n      setPending(false)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.type == \"edit\"){\r\n      getPopupDetails()\r\n    }\r\n    getAllProductAttributes()\r\n  }, [])\r\n\r\n  const handlePopupImageChange = async (value) => {\r\n    let formData = new FormData();\r\n    formData.append(\"productImage\", value);\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      },\r\n      body: formData,\r\n      onUploadProgress: (data) => {\r\n        details.image.progress = Math.round((100 * data.loaded) / data.total);\r\n        setDetails(JSON.parse(JSON.stringify(details)))\r\n      },\r\n    }\r\n    let result = await axios.callApi(\"/file/uploadFile\", options)\r\n\r\n    if (result.status == 200) {\r\n      details.image.url = result?.data?.data\r\n      setDetails(JSON.parse(JSON.stringify(details)))\r\n    }\r\n    else {\r\n      details.image.progress = -1\r\n      setDetails(JSON.parse(JSON.stringify(details)))\r\n    }\r\n  };\r\n  const handlePopupImageDelete = async () => {\r\n    setPending(true);\r\n    let selectedImage = details?.image?.url\r\n    let splitImage = selectedImage.split(\"/\")\r\n    let imageName = splitImage[splitImage.length - 1]\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: {\r\n        name: imageName\r\n      }\r\n    }\r\n    let result = await axios.callApi(`/file/deleteFile`, options)\r\n    if (result?.status === 200) {\r\n      setPending(false);\r\n      details.image.url = \"\"\r\n      details.image.progress = 0\r\n      setDetails(JSON.parse(JSON.stringify(details)))\r\n      return \"success\";\r\n    }\r\n    else {\r\n      setPending(false);\r\n      return \"failed\"\r\n    }\r\n  };\r\n\r\n  const getAllProductAttributes = useCallback(async () => {\r\n    //setPending(true)\r\n    let options = {\r\n      method: \"GET\"\r\n    }\r\n    let result = await axios.callApi(\"/addProduct/chooseProductAttributes\", options);\r\n    if (result?.status == 200) {\r\n      //setPending(false)\r\n      setChooseAttribute(result?.data?.data.map((item) => {\r\n        return {\r\n          value: item.id,\r\n          label: item.attributeName\r\n        }\r\n      }))\r\n    }\r\n  }, [])\r\n\r\n  const handleProductMainImageChange = async (value, productVariantIndex) => {\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"productImage\", value);\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      },\r\n      body: formData,\r\n      onUploadProgress: (data) => {\r\n        formValues[productVariantIndex].productMainImageProgress = Math.round((100 * data.loaded) / data.total);\r\n        setFormValues([...formValues])\r\n      },\r\n    }\r\n    let result = await axios.callApi(\"/file/uploadFile\", options)\r\n\r\n    if (result.status == 200) {\r\n      formValues[productVariantIndex].pictureUrl = result?.data?.data\r\n      setFormValues([...formValues])\r\n    }\r\n    else {\r\n      formValues[productVariantIndex].productMainImageProgress = -1\r\n      setFormValues([...formValues])\r\n    }\r\n\r\n  };\r\n  const handleProductMainImageDelete = async (productVariantIndex) => {\r\n    setPending(true);\r\n    let selectedImage = formValues[productVariantIndex].pictureUrl\r\n    let splitImage = selectedImage.split(\"/\")\r\n    let imageName = splitImage[splitImage.length - 1]\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: {\r\n        name: imageName\r\n      }\r\n    }\r\n    let result = await axios.callApi(`/file/deleteFile`, options)\r\n    if (result?.status === 200) {\r\n      setPending(false);\r\n      formValues[productVariantIndex].pictureUrl = \"\"\r\n      formValues[productVariantIndex].productMainImageProgress = 0\r\n      setFormValues([...formValues])\r\n      return \"success\";\r\n    }\r\n    else {\r\n      setPending(false);\r\n      return \"failed\"\r\n    }\r\n  };\r\n\r\n  const submit = async (value) => {\r\n    setPending(true);\r\n    const {\r\n     minimumAmount\r\n    } = value;\r\n\r\n    const payload = {\r\n      minimumAmount,\r\n      image: {url: details.image.url}\r\n    }\r\n\r\n    let products = []\r\n\r\n    for (let i = 0; i < formValues.length; i++) {\r\n      let obj = {}\r\n      obj.refNumber = value[`refNumber${i}`]\r\n      obj.hsnNumber = value[`hsnNumber${i}`]\r\n      obj.productName = value[`productName${i}`]\r\n      obj.count = value[`count${i}`]\r\n      obj.pictureUrl = formValues[i].pictureUrl\r\n      obj[\"attributeCombination\"] = {}\r\n      obj[\"attributeCombination\"][value[`attribute${i}`]] = value[`attributeValue${i}`]\r\n      products.push(obj)\r\n    }\r\n\r\n    payload[\"products\"] = products\r\n\r\n    if(props.type == \"edit\"){\r\n      payload[\"id\"] = details.id\r\n    }\r\n\r\n    let options = {\r\n      method: (props.type == \"edit\") ? \"PUT\" : \"POST\",\r\n      body: payload\r\n    }\r\n\r\n    let url = (props.type == \"edit\") ? \"/popup/updatePopup\" : \"/popup/createPopup\"\r\n\r\n    let result = await axios.callApi(url, options);\r\n\r\n    if (result?.status === 200) {\r\n      let message = (props.type == \"edit\") ? \"Updated successfully\" : \"Popup successfully created\"\r\n      triggerSwalAlert(\"Success\", message, \"success\" )\r\n      setPending(false);\r\n    } else {\r\n      triggerSwalAlert(\"Error\", \"Something went wrong\", \"error\" )\r\n      setPending(false);\r\n    }\r\n\r\n    navigate(\"/manage-popups\")\r\n\r\n  };\r\n  return (\r\n    <>\r\n      {pending ? <Loader /> : null}\r\n      <div className=\"container-fluid addEditProductContainer my-lg-5\">\r\n        <Form onSubmit={submit} ref={formRef}>\r\n          <Row>\r\n            <Col md={12}>\r\n              <TextInput\r\n                name=\"minimumAmount\"\r\n                label=\"Minimum Amount\"\r\n                //imageSrc={Company}\r\n                required\r\n                isFormInputElement\r\n                value={details?.minimumAmount}\r\n              // maxLength={200}\r\n              />\r\n            </Col>\r\n            <Col md={12}>\r\n              <PicUpload\r\n                name={`image`}\r\n                label=\"Popup Image\"\r\n                //imageSrc={image}\r\n                isFormInputElement\r\n                required\r\n                acceptedFormat=\"image/png, image/jpeg, image/jpg\"\r\n                onChange={(value)=>handlePopupImageChange(value)}\r\n                value={details?.image?.url ? process.env.REACT_APP_BASE_URL + \"/\" + details?.image?.url : \"\"}\r\n                deleteFile={handlePopupImageDelete}\r\n                progress={details?.image?.progress}\r\n              />\r\n            </Col>\r\n            <Col md={12}>\r\n              <Title>Add Products</Title>\r\n\r\n              {formValues.map((element, index) => (\r\n                <div key={index}>\r\n                  <Col md={12}>\r\n                    <div className=\"form-title\">\r\n                      <p>Product {index + 1} Details</p>\r\n                      {index ? (\r\n                        <p onClick={() => removeFormFields(index)}>\r\n                          <AiOutlineCloseCircle />\r\n                          Delete Product {index + 1}\r\n                        </p>\r\n                      ) : null}\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <TextInput\r\n                      name={`productName${index}`}\r\n                      label=\"Product Name\"\r\n                      //imageSrc={HA}\r\n                      value={element.productName}\r\n                      required\r\n                      isFormInputElement\r\n                    />\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Select\r\n                      name={`attribute${index}`}\r\n                      label=\"Choose Attribute\"\r\n                      //imageSrc={Time}\r\n                      required\r\n                      isFormInputElement\r\n                      value={Object.keys(element?.attributeCombination || {})[0]}\r\n                      data={chooseAttribute}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <TextInput\r\n                      name={`attributeValue${index}`}\r\n                      label=\"Attribute Value\"\r\n                      //imageSrc={HC}\r\n                      value={element.attributeValue}\r\n                      required\r\n                      isFormInputElement\r\n                    />\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <TextInput\r\n                      name={`count${index}`}\r\n                      label=\"Product Count\"\r\n                      //imageSrc={HB}\r\n                      value={element.count}\r\n                      required\r\n                      isFormInputElement\r\n                    />\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <TextInput\r\n                      name={`refNumber${index}`}\r\n                      label=\"Reference Number\"\r\n                      //imageSrc={HC}\r\n                      value={element.refNumber}\r\n                      required\r\n                      isFormInputElement\r\n                    />\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <TextInput\r\n                      name={`hsnNumber${index}`}\r\n                      label=\"Hsn Number\"\r\n                      //imageSrc={HC}\r\n                      value={element.hsnNumber}\r\n                      required\r\n                      isFormInputElement\r\n                    />\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <PicUpload\r\n                      name={`productImage${index}`}\r\n                      label=\"Product Main Image(single pic)\"\r\n                      //imageSrc={image}\r\n                      isFormInputElement\r\n                      required\r\n                      productVariantIndex={index}\r\n                      acceptedFormat=\"image/png, image/jpeg, image/jpg\"\r\n                      onChange={handleProductMainImageChange}\r\n                      value={element.pictureUrl ? process.env.REACT_APP_BASE_URL + \"/\" + element.pictureUrl : \"\"}\r\n                      deleteFile={handleProductMainImageDelete}\r\n                      progress={element.productMainImageProgress}\r\n                    />\r\n                  </Col>\r\n                </div>\r\n              ))}\r\n            </Col>\r\n          </Row>\r\n          <p className=\"link-text\" onClick={() => addFormFields()}>\r\n            <IoMdAddCircleOutline /> Add Another Product\r\n          </p>\r\n          <BtnWrapper>\r\n            <div>\r\n              <BtnSecondary\r\n                style={{ marginRight: 12 }}\r\n              >\r\n                Cancel\r\n              </BtnSecondary>\r\n              <Btn\r\n                disabled={false}\r\n                onClick={() => formRef.current?.handleSubmit()}\r\n              >\r\n                {false ? <i className=\"fas fa-spinner fa-pulse\"></i> : \"Submit\"}\r\n              </Btn>\r\n            </div>\r\n          </BtnWrapper>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddEditPopup;"],"names":["axios","Axios","props","_details2","_details3","_details3$image","_details4","_details4$image","_details5","_details5$image","_useState","useState","_useState2","_slicedToArray","pending","setPending","_useState3","image","_useState4","details","setDetails","navigate","useNavigate","id","useParams","_useState5","_useState6","chooseAttribute","setChooseAttribute","formRef","useRef","_useState7","productName","attributeValue","count","pictureUrl","productMainImageProgress","refNumber","hsnNumber","_useState8","formValues","setFormValues","removeFormFields","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","i","formValue","promiseArray","wrap","_context","prev","next","push","multiplePicturesDeletion","Promise","all","splice","_toConsumableArray","stop","_x","apply","arguments","splitImage","split","options","method","body","name","length","callApi","getPopupDetails","useCallback","_callee2","result","_result$data","_result$data$data","tempFormValues","_context2","concat","sent","status","data","progress","products","map","productVariant","Object","values","attributeCombination","useEffect","type","getAllProductAttributes","handlePopupImageChange","_ref3","_callee3","value","formData","_result$data2","_context3","FormData","append","headers","onUploadProgress","Math","round","loaded","total","JSON","parse","stringify","url","_x2","handlePopupImageDelete","_ref4","_callee4","_details","_details$image","selectedImage","imageName","_context4","abrupt","_callee5","_result$data3","_context5","item","label","attributeName","handleProductMainImageChange","_ref6","_callee6","productVariantIndex","_result$data4","_context6","_x3","_x4","handleProductMainImageDelete","_ref7","_callee7","_context7","_x5","submit","_ref8","_callee8","minimumAmount","payload","obj","message","_context8","triggerSwalAlert","_x6","_jsxs","_Fragment","children","_jsx","Loader","className","Form","onSubmit","ref","Row","Col","md","TextInput","required","isFormInputElement","PicUpload","acceptedFormat","onChange","process","deleteFile","Title","element","index","onClick","AiOutlineCloseCircle","Select","keys","IoMdAddCircleOutline","BtnWrapper","BtnSecondary","style","marginRight","Btn","disabled","_formRef$current","current","handleSubmit"],"sourceRoot":""}