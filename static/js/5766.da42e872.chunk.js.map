{"version":3,"file":"static/js/5766.da42e872.chunk.js","mappings":"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","sources":["helpers/trackUserEvent.js","helpers/triggerSwalAlert.js","screens/ForgetPassword/index.jsx","screens/ForgetPassword/validation.js"],"sourcesContent":["import Axios from \"../api/Axios\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst trackUserEvent = (event) => {\r\n    if (sessionStorage.getItem(\"session-id\") && isValidUUID(sessionStorage.getItem(\"session-id\"))) {\r\n        axios.callApi(\"/session/trackUserEvent\", {\r\n            method: \"POST\",\r\n            body: {\r\n                event\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        sessionStorage.removeItem('session-id');\r\n        const keyword = 'utm'; // The keyword you want to match\r\n        const matchingParams = getParamsMatchingKeyword(keyword);\r\n        let options = {\r\n            method: \"POST\",\r\n            body: {\r\n                additionalDetails: matchingParams,\r\n                event\r\n            }\r\n        }\r\n        axios.callApi(\"/session/createNewSession\", options).then((result) => {\r\n            sessionStorage.setItem('session-id', result.data.data)\r\n        })\r\n    }\r\n    if(event != \"Add To Cart\"){\r\n        axios.callApi(\"/session/sendFacebookConversionEvent\",{\r\n            method: \"POST\",\r\n            body: {\r\n                eventType: \"PageViewEvent\",\r\n                source_url: window.location.href\r\n            }\r\n        })\r\n    }\r\n    else{\r\n        axios.callApi(\"/session/sendFacebookConversionEvent\",{\r\n            method: \"POST\",\r\n            body: {\r\n                eventType: \"AddToCartEvent\",\r\n                source_url: window.location.href\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction getParamsMatchingKeyword(keyword) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const matchingParams = {};\r\n\r\n    for (const [key, value] of params) {\r\n        if (key.includes(keyword)) {\r\n            matchingParams[key] = value;\r\n        }\r\n    }\r\n\r\n    return matchingParams;\r\n}\r\n\r\nfunction isValidUUID(uuid) {\r\n    const uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\r\n    return uuidPattern.test(uuid);\r\n}\r\n\r\nexport default trackUserEvent","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\n\nconst triggerSwalAlert = async (title, message, type)=>{\n    return MySwal.fire({\n      title: <strong>{title}</strong>,\n      html: <p>{message}</p>,\n      icon: type\n    })\n}\n\nexport default triggerSwalAlert","import { useNavigate } from \"react-router-dom\";\nimport \"./index.css\"\nimport { validation } from \"./validation\"\nimport { useEffect, useState } from \"react\";\nimport Axios from '../../api/Axios';\nimport { Loader } from \"rsuite\";\nimport triggerSwalAlert from \"../../helpers/triggerSwalAlert\";\nimport trackUserEvent from \"../../helpers/trackUserEvent\";\n\nconst axios = new Axios();\n\nconst ForgetPassword = () => {\n\n    const navigate = useNavigate();\n    const [pending, setPending] = useState(false)\n\n    const [error, setError] = useState({\n        email: false,\n        message: \"\"\n    });\n\n    const [data, setData] = useState({\n        email: \"\",\n    });\n\n    const onChange = (value, target) => {\n        setData({\n            ...data,\n            [target]: value,\n        });\n\n        if (error.email === true) {\n            setError({\n                ...error,\n                [target]: false\n            })\n        }\n\n    };\n\n    const handleForgetPassword = async (e) => {\n        e.preventDefault()\n        const valid = validation(data)\n        setError(valid)\n        if (valid.email) {\n            return\n        }\n        const options = {\n            method: \"POST\",\n            body: data\n        }\n        setPending(true)\n        const result = await axios.callApi(`auth/forgetPassword`, options)\n        if(result.status == 200){\n            setPending(false)\n            triggerSwalAlert(\"Email Send\", \"Password reset email has been send to your registered email id\", \"success\")\n        }\n        else{\n            setPending(false)\n            triggerSwalAlert(\"Error\", \"Something went wrong while trying to send email to your registered id\", \"error\")\n        }\n    }\n\n    useEffect(() => {\n        trackUserEvent(\"Forget Password\")\n    },[])   \n\n    return (\n        <>\n        {pending ? <Loader/> : null}\n        <div className='forgetPassword-wrapper bg-dark d-flex align-item-center justify-content-center w-100'>\n            <div className='forgetPassword'>\n                <h2 className='mb-3'>Forget Password</h2>\n                <form>\n                    <div className='form-group mb-2'>\n                        <label htmlFor=\"email\" className='form-label'>Registered Email Address</label>\n                        <input id='email' className={`form-control ${error.email && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'email')} />\n                        {error.email && <div className='error'>\n                            {error.message ? \"Please enter a valid email\" : \"Please enter your email\"}\n                        </div>}\n                    </div>\n                    <div className=\"button-container\">\n                        <button className='btn btn-dark' onClick={() => { navigate(\"/sign-in\") }}>BACK</button>\n                        <button className='btn btn-dark' onClick={handleForgetPassword}>SUBMIT</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default ForgetPassword\n","export const validation = (data) => {\n  const { email } = data;\n  var errorVal = {\n    email: false,\n    message: \"\"\n  }\n  if (!email) {\n    errorVal[\"email\"] = true\n  }\n  if (email && !(/\\S+@\\S+\\.\\S+/.test(email))) {\n    errorVal[\"email\"] = true\n    errorVal[\"message\"] = \"invalid email\"\n  }\n  return errorVal\n};\n"],"names":["axios","Axios","event","sessionStorage","getItem","uuid","test","callApi","method","body","removeItem","matchingParams","keyword","params","URLSearchParams","window","location","search","key","value","includes","getParamsMatchingKeyword","options","additionalDetails","then","result","setItem","data","eventType","source_url","href","MySwal","withReactContent","Swal","async","title","message","type","fire","_jsx","children","html","icon","ForgetPassword","navigate","useNavigate","pending","setPending","useState","error","setError","email","setData","useEffect","trackUserEvent","_jsxs","_Fragment","Loader","className","htmlFor","id","concat","required","onChange","e","target","onClick","preventDefault","valid","errorVal","validation","status","triggerSwalAlert"],"sourceRoot":""}