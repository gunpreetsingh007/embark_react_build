{"version":3,"file":"static/js/5146.704f139f.chunk.js","mappings":"6OACMA,GAAUC,EAAAA,EAAAA,IAEd,SAAAD,EAAYE,GAAU,IAADC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAJ,GAAA,KAQrBK,+BAAiC,WAC/BF,EAAKG,SAASC,aAAaC,SAASC,IAClCN,EAAKO,gBACLP,EAAKQ,aAET,EAAE,KAEFD,gBAAkB,SAACE,GAAI,OAAKA,CAAK,EAAD,KAEhCD,aAAY,eAAAE,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAC,GAAA,IAAAV,EAAAW,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQb,OARsBf,EAAQU,EAARV,SAAUW,EAAMD,EAANC,OACRA,EAOxBE,EAAAG,OAAA,SACOC,QAAQC,QAAQlB,IAAS,wBAAAa,EAAAM,OAAA,GAAAV,EAAA,KACjC,gBAAAW,GAAA,OAAAf,EAAAgB,MAAA,KAAAC,UAAA,EAVW,GAhBVC,KAAKzB,SAAW0B,IAAAA,OAAa,CAC3B9B,QAAAA,IAGF6B,KAAK1B,gCACP,IAwBF,I,WC/BqB4B,EAAK,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GACxB,SAAAA,IAAe,IAAD9B,EAEyB,OAFzBC,EAAAA,EAAAA,GAAA,KAAA6B,IACZ9B,EAAAiC,EAAAE,KAAA,KAAMC,mCAKRC,8BAAgC,WAC9BrC,EAAKG,SAASC,aAAakC,QAAQhC,IAAIN,EAAKuC,eAC9C,EAACvC,EAEDuC,eAAc,eAAAxB,GAAAJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOE,GAAM,IAAAwB,EAAA,OAAA5B,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAI5B,OAHIoB,EAAQC,EAAAA,EAAAA,WAAiBC,KAAKC,YAAYC,eAE9C5B,EAAO6B,QAAQC,cAAgBN,GAC/BtB,EAAAG,OAAA,SACOL,GAAM,wBAAAE,EAAAM,OAAA,GAAAV,EAAA,KACd,gBAAAW,GAAA,OAAAV,EAAAW,MAAA,KAAAC,UAAA,EANa,GARZ3B,EAAKqC,gCAAgCrC,CACvC,CAuBC,OAvBAF,EAAAA,EAAAA,GAAAgC,EAAA,EAAAiB,IAAA,UAAAC,MAeD,SAAQC,EAAKC,GACX,OAAOtB,KAAKzB,SAAS,CACnBgD,OAAQD,EAAQC,OAChBF,IAAKA,EACLJ,QAAgB,OAAPK,QAAO,IAAPA,GAAAA,EAASE,OAAgB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASE,OAAS,CAAC,EAC9C3C,KAAa,OAAPyC,QAAO,IAAPA,GAAAA,EAASG,KAAc,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASG,UAAOC,EACtCC,iBAAyB,OAAPL,QAAO,IAAPA,GAAAA,EAASK,iBAA0B,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASK,sBAAmBD,GAE9E,KAACxB,CAAC,CA3BsB,CAASjC,E,qGCA7B2D,EAASC,IAAiBC,KAG1BC,EAAgB,eAAA5C,GAAAJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO8C,EAAOC,EAASC,GAAI,OAAAlD,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACzCmC,EAAOO,KAAK,CACjBH,OAAOI,EAAAA,EAAAA,KAAA,UAAAC,SAASL,IAChBM,MAAMF,EAAAA,EAAAA,KAAA,KAAAC,SAAIJ,IACVM,KAAML,KACN,wBAAA5C,EAAAM,OAAA,GAAAV,EAAA,KACL,gBANqBW,EAAA2C,EAAAC,GAAA,OAAAtD,EAAAW,MAAA,KAAAC,UAAA,KAQtB,K,wICba2C,EAAa,SAAC7D,GACzB,IAAQ8D,EAAuB9D,EAAvB8D,MAAOC,EAAgB/D,EAAhB+D,YACXC,EAAW,CACbF,OAAO,EACPC,aAAa,EACbX,QAAS,IAYX,OAVKU,IACHE,EAAgB,OAAI,GAElBF,IAAW,eAAeG,KAAKH,KACjCE,EAAgB,OAAI,EACpBA,EAAkB,QAAI,iBAEnBD,IACHC,EAAsB,aAAI,GAErBA,CACT,E,uDCVM5C,EAAQ,IAAIC,EAAAA,EA4HlB,EA1HsB,WAElB,IAAQU,GAAUmC,EAAAA,EAAAA,MAAVnC,MAERoC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAEpBI,GAAYC,EAAAA,EAAAA,MAElBC,GAA0BP,EAAAA,EAAAA,UAAS,CAC/BN,OAAO,EACPc,iBAAiB,EACjBxB,QAAS,KACXyB,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAJKG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAMtBG,GAAwBZ,EAAAA,EAAAA,UAAS,CAC7BN,MAAO,GACPC,YAAa,GACba,gBAAiB,KACnBK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAJKhF,EAAIiF,EAAA,GAAEC,EAAOD,EAAA,GAMdE,EAAW,SAAC5C,EAAO6C,GACrBF,GAAOG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACFrF,GAAI,IAAAsF,EAAAA,EAAAA,GAAA,GACNF,EAAS7C,MAEM,IAAhBuC,EAAMhB,QAA4C,IAA1BgB,EAAMF,kBAAkD,IAAtBE,EAAMf,aAChEgB,GAAQM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACHP,GAAK,IAAAQ,EAAAA,EAAAA,GAAA,GACPF,GAAS,IAGtB,EAEMG,EAAmB,eAAAjF,GAAAJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOmF,GAAC,IAAAC,EAAAhD,EAAA,OAAAtC,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMjB,GALf6E,EAAEE,iBACID,EAAQ5B,EAAW7D,GACnBA,EAAK+D,cAAgB/D,EAAK4E,kBAC5Ba,EAAuB,iBAAI,GAE/BV,EAASU,KACLA,EAAM3B,OAAS2B,EAAMb,iBAAmBa,EAAM1B,aAAW,CAAAtD,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAQzC,OARyCH,EAAAC,KAAA,EAInD+B,EAAU,CACZC,OAAQ,OACRE,MAAIyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOrF,GAAI,IAAE+B,MAAAA,KAErByC,GAAW,GAAK/D,EAAAE,KAAA,GACKS,EAAMuE,QAAQ,qBAAsBlD,GAAQ,QAC5C,KADThC,EAAAmF,KACDC,QACPrB,GAAW,GACXC,EAAU,aACVvB,EAAAA,EAAAA,GAAiB,UAAW,0BAA2B,aAGvDsB,GAAW,IACXtB,EAAAA,EAAAA,GAAiB,UAAW,6BAA8B,UAC7DzC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqF,GAAArF,EAAA,SAGDsF,QAAQjB,MAAM,wBAAuB,yBAAArE,EAAAM,OAAA,GAAAV,EAAA,mBAE5C,gBA9BwBW,GAAA,OAAAV,EAAAW,MAAA,KAAAC,UAAA,KAgCnB8E,EAAW,eAAA/F,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA6F,IAAA,IAAAxD,EAAAyD,EAAA,OAAA/F,EAAAA,EAAAA,KAAAK,MAAA,SAAA2F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,OAKX,OALWwF,EAAAzF,KAAA,EAEN+B,EAAU,CACZC,OAAQ,OACRE,KAAM,CAAEb,MAAAA,IACXoE,EAAAxF,KAAA,EACoBS,EAAMuE,QAAQ,yBAA0BlD,GAAQ,OAChD,MADfyD,EAAMC,EAAAP,MACDC,OACPX,GAAOG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIrF,GAAI,IAAE8D,MAAOoC,EAAOlG,KAAKA,KAAK8D,SAG3CW,EAAU,KAAI0B,EAAAxF,KAAA,gBAAAwF,EAAAzF,KAAA,EAAAyF,EAAAL,GAAAK,EAAA,SAGlBJ,QAAQjB,MAAM,wBAAuB,yBAAAqB,EAAApF,OAAA,GAAAkF,EAAA,kBAE5C,kBAhBgB,OAAAhG,EAAAgB,MAAA,KAAAC,UAAA,KAqBjB,OAJAkF,EAAAA,EAAAA,YAAU,WACNJ,GACJ,GAAG,KAGCK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9C,SAAA,CACCe,GAAUhB,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,IAAK,MACvBhD,EAAAA,EAAAA,KAAA,OAAKiD,UAAU,sFAAqFhD,UAChG6C,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAehD,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,MAAIiD,UAAU,OAAMhD,SAAC,oBACrB6C,EAAAA,EAAAA,MAAA,QAAA7C,SAAA,EACI6C,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBhD,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,SAAOkD,QAAQ,QAAQD,UAAU,aAAYhD,SAAC,mBAC9CD,EAAAA,EAAAA,KAAA,SAAOmD,UAAQ,EAACC,GAAG,QAAQH,UAAS,gBAAAI,OAAkB9B,EAAMhB,OAAS,mBAAqB+C,UAAQ,EAAC1B,SAAU,SAAAK,GAAC,OAAIL,EAASK,EAAEJ,OAAO7C,MAAO,QAAQ,EAAEA,MAAOvC,EAAK8D,QAChKgB,EAAMhB,QAASP,EAAAA,EAAAA,KAAA,OAAKiD,UAAU,QAAOhD,SACjCsB,EAAM1B,QAAU,6BAA+B,gCAGxDiD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBhD,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,SAAOkD,QAAQ,eAAeD,UAAU,aAAYhD,SAAC,kBACrDD,EAAAA,EAAAA,KAAA,SAAOF,KAAK,WAAWsD,GAAG,eAAeH,UAAS,gBAAAI,OAAkB9B,EAAMf,YAAc,kBAAoB,IAAM8C,UAAQ,EAAC1B,SAAU,SAAAK,GAAC,OAAIL,EAASK,EAAEJ,OAAO7C,MAAO,cAAc,IAChLuC,EAAMf,cAAeR,EAAAA,EAAAA,KAAA,OAAKiD,UAAU,QAAOhD,SAAC,gCAIjD6C,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBhD,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,SAAOkD,QAAQ,mBAAmBD,UAAU,aAAYhD,SAAC,0BACzDD,EAAAA,EAAAA,KAAA,SAAOF,KAAK,WAAWsD,GAAG,mBAAmBH,UAAS,gBAAAI,OAAkB9B,EAAMF,gBAAkB,kBAAoB,IAAMiC,UAAQ,EAAC1B,SAAU,SAAAK,GAAC,OAAIL,EAASK,EAAEJ,OAAO7C,MAAO,kBAAkB,IAC5LuC,EAAMF,kBAAmBrB,EAAAA,EAAAA,KAAA,OAAKiD,UAAU,QAAOhD,SAAC,+BAIrDD,EAAAA,EAAAA,KAAA,UAAQiD,UAAU,0BAA0BM,QAAS,SAAAtB,GAAC,OAAID,EAAoBC,EAAE,EAAChC,SAAC,6BAMtG,C","sources":["api/index.js","api/Axios.js","helpers/triggerSwalAlert.js","screens/ResetPassword/validation.js","screens/ResetPassword/index.jsx"],"sourcesContent":["import axios from 'axios';\r\nclass HttpClient {\r\n\r\n  constructor(baseURL) {\r\n    this.instance = axios.create({\r\n      baseURL,\r\n    });\r\n\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      this._handleResponse,\r\n      this._handleError,\r\n    );\r\n  };\r\n\r\n  _handleResponse = (data) => data;\r\n\r\n  _handleError = async ({ response, config }) => {\r\n    const originalRequest = config;\r\n    // if (response?.status === 401 && !originalRequest._retry) {\r\n    //   // call refresh token\r\n    //   localStorage.clear();\r\n    //   sessionStorage.clear()\r\n    //   store.dispatch(logout())\r\n    //   window.location.href = '/sign-in'\r\n    // }\r\n    return Promise.resolve(response);\r\n  };\r\n}\r\n\r\nexport default HttpClient;","import HttpClient from \"./index\";\r\nimport store from \"../store\";\r\nexport default class Axios extends HttpClient {\r\n  constructor() {\r\n    super(process.env.REACT_APP_BASE_URL);\r\n    this._initializeRequestInterceptor();\r\n  }\r\n\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use(this._handleRequest);\r\n  };\r\n\r\n  _handleRequest = async (config) => {\r\n    let token = store.getState().user.currentUser.accessToken\r\n    if (token)\r\n    config.headers.Authorization = token;\r\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\r\n    return config;\r\n  };\r\n\r\n  callApi(url, options) {\r\n    return this.instance({\r\n      method: options.method,\r\n      url: url,\r\n      headers: options?.header ? options?.header : {},\r\n      data: options?.body ? options?.body : undefined,\r\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\r\n    });\r\n  };\r\n}\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\n\r\n\r\nconst triggerSwalAlert = async (title, message, type)=>{\r\n    return MySwal.fire({\r\n      title: <strong>{title}</strong>,\r\n      html: <p>{message}</p>,\r\n      icon: type\r\n    })\r\n}\r\n\r\nexport default triggerSwalAlert","export const validation = (data) => {\r\n  const { email, newPassword } = data;\r\n  var errorVal = {\r\n    email: false,\r\n    newPassword: false,\r\n    message: \"\"\r\n  }\r\n  if (!email) {\r\n    errorVal[\"email\"] = true\r\n  }\r\n  if (email && !(/\\S+@\\S+\\.\\S+/.test(email))) {\r\n    errorVal[\"email\"] = true\r\n    errorVal[\"message\"] = \"invalid email\"\r\n  }\r\n  if (!newPassword) {\r\n    errorVal[\"newPassword\"] = true\r\n  }\r\n  return errorVal\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./index.css\"\r\nimport { validation } from \"./validation\"\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Axios from '../../api/Axios';\r\nimport triggerSwalAlert from \"../../helpers/triggerSwalAlert\";\r\nimport Loader from \"../../components/Loader\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const { token } = useParams()\r\n\r\n    const [pending, setPending] = useState(false)\r\n\r\n    const navigator = useNavigate()\r\n\r\n    const [error, setError] = useState({\r\n        email: false,\r\n        confirmPassword: false,\r\n        message: \"\"\r\n    });\r\n\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        newPassword: \"\",\r\n        confirmPassword: \"\"\r\n    });\r\n\r\n    const onChange = (value, target) => {\r\n        setData({\r\n            ...data,\r\n            [target]: value,\r\n        });\r\n        if (error.email === true || error.confirmPassword === true || error.newPassword === true) {\r\n            setError({\r\n                ...error,\r\n                [target]: false\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleResetPassword = async (e) => {\r\n        e.preventDefault()\r\n        const valid = validation(data)\r\n        if (!(data.newPassword === data.confirmPassword)) {\r\n            valid[\"confirmPassword\"] = true\r\n        }\r\n        setError(valid)\r\n        if (valid.email || valid.confirmPassword || valid.newPassword) {\r\n            return\r\n        }\r\n        try {\r\n            const options = {\r\n                method: \"POST\",\r\n                body: { ...data, token }\r\n            }\r\n            setPending(true)\r\n            const result = await axios.callApi(`auth/resetPassword`, options)\r\n            if (result.status == 200){\r\n                setPending(false)\r\n                navigator(\"/sign-in\")\r\n                triggerSwalAlert(\"Success\", \"Password has been reset\", \"success\")\r\n            }\r\n            else{\r\n                setPending(false)\r\n                triggerSwalAlert(\"Failure\", \"Error in changing password\", \"error\")\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Something went wrong\")\r\n        }\r\n    }\r\n\r\n    const verifyToken = async () => {\r\n        try {\r\n            const options = {\r\n                method: \"POST\",\r\n                body: { token }\r\n            }\r\n            const result = await axios.callApi(`auth/verifyForgetToken`, options)\r\n            if (result.status == 200) {\r\n                setData({ ...data, email: result.data.data.email })\r\n            }\r\n            else\r\n                navigator(\"*\")\r\n        }\r\n        catch (error) {\r\n            console.error(\"Something went wrong\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        verifyToken()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        {pending ? <Loader/> : null}\r\n        <div className='resetPassword-wrapper bg-dark d-flex align-item-center justify-content-center w-100'>\r\n            <div className='resetPassword'>\r\n                <h2 className='mb-3'>Reset Passowrd</h2>\r\n                <form>\r\n                    <div className='form-group mb-2'>\r\n                        <label htmlFor=\"email\" className='form-label'>Email Address</label>\r\n                        <input disabled id='email' className={`form-control ${error.email && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'email')} value={data.email} />\r\n                        {error.email && <div className='error'>\r\n                            {error.message ? \"Please enter a valid email\" : \"Please enter your email\"}\r\n                        </div>}\r\n                    </div>\r\n                    <div className='form-group mb-2'>\r\n                        <label htmlFor=\"new password\" className='form-label'>New password</label>\r\n                        <input type=\"password\" id='new password' className={`form-control ${error.newPassword ? \"errorInputField\" : \"\"}`} required onChange={e => onChange(e.target.value, 'newPassword')} />\r\n                        {error.newPassword && <div className='error'>\r\n                            Please enter a password\r\n                        </div>}\r\n                    </div>\r\n                    <div className='form-group mb-2'>\r\n                        <label htmlFor=\"confirm password\" className='form-label'>Confirm new password</label>\r\n                        <input type=\"password\" id='confirm password' className={`form-control ${error.confirmPassword ? \"errorInputField\" : \"\"}`} required onChange={e => onChange(e.target.value, 'confirmPassword')} />\r\n                        {error.confirmPassword && <div className='error'>\r\n                            Passwords do not match\r\n                        </div>}\r\n                    </div>\r\n                    <button className='btn btn-dark w-100 mt-2' onClick={e => handleResetPassword(e)}>RESET PASSWORD</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n"],"names":["HttpClient","_createClass","baseURL","_this","_classCallCheck","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","config","wrap","_context","prev","next","abrupt","Promise","resolve","stop","_x","apply","arguments","this","axios","Axios","_HttpClient","_inherits","_super","_createSuper","call","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","key","value","url","options","method","header","body","undefined","onUploadProgress","MySwal","withReactContent","Swal","triggerSwalAlert","title","message","type","fire","_jsx","children","html","icon","_x2","_x3","validation","email","newPassword","errorVal","test","useParams","_useState","useState","_useState2","_slicedToArray","pending","setPending","navigator","useNavigate","_useState3","confirmPassword","_useState4","error","setError","_useState5","_useState6","setData","onChange","target","_objectSpread","_defineProperty","handleResetPassword","e","valid","preventDefault","callApi","sent","status","t0","console","verifyToken","_callee2","result","_context2","useEffect","_jsxs","_Fragment","Loader","className","htmlFor","disabled","id","concat","required","onClick"],"sourceRoot":""}