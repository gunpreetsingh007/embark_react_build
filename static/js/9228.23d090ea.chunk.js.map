{"version":3,"file":"static/js/9228.23d090ea.chunk.js","mappings":"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","sources":["api/index.js","api/Axios.js","helpers/trackUserEvent.js","helpers/triggerSwalAlert.js","screens/SignUp/validation.js","screens/SignUp/index.jsx","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js"],"sourcesContent":["import axios from 'axios';\nclass HttpClient {\n\n  constructor(baseURL) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  _handleResponse = (data) => data;\n\n  _handleError = async ({ response, config }) => {\n    const originalRequest = config;\n    // if (response?.status === 401 && !originalRequest._retry) {\n    //   // call refresh token\n    //   localStorage.clear();\n    //   sessionStorage.clear()\n    //   store.dispatch(logout())\n    //   window.location.href = '/sign-in'\n    // }\n    return Promise.resolve(response);\n  };\n}\n\nexport default HttpClient;","import HttpClient from \"./index\";\nimport store from \"../store\";\nexport default class Axios extends HttpClient {\n  constructor() {\n    super(process.env.REACT_APP_BASE_URL);\n    this._initializeRequestInterceptor();\n  }\n\n\n  _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest);\n  };\n\n  _handleRequest = async (config) => {\n    let token = store.getState().user.currentUser.accessToken\n    if (token)\n    config.headers.Authorization = token;\n    if(sessionStorage.getItem('session-id'))\n    config.headers['session-id'] = sessionStorage.getItem('session-id');\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\n    return config;\n  };\n\n  callApi(url, options) {\n    return this.instance({\n      method: options.method,\n      url: url,\n      headers: options?.header ? options?.header : {},\n      data: options?.body ? options?.body : undefined,\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\n    });\n  };\n}\n","import Axios from \"../api/Axios\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst trackUserEvent = (event) => {\r\n    if (sessionStorage.getItem(\"session-id\") && isValidUUID(sessionStorage.getItem(\"session-id\"))) {\r\n        axios.callApi(\"/session/trackUserEvent\", {\r\n            method: \"POST\",\r\n            body: {\r\n                event\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        sessionStorage.removeItem('session-id');\r\n        const keyword = 'utm'; // The keyword you want to match\r\n        const matchingParams = getParamsMatchingKeyword(keyword);\r\n        let options = {\r\n            method: \"POST\",\r\n            body: {\r\n                additionalDetails: matchingParams,\r\n                event\r\n            }\r\n        }\r\n        axios.callApi(\"/session/createNewSession\", options).then((result) => {\r\n            sessionStorage.setItem('session-id', result.data.data)\r\n        })\r\n    }\r\n}\r\n\r\nfunction getParamsMatchingKeyword(keyword) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const matchingParams = {};\r\n\r\n    for (const [key, value] of params) {\r\n        if (key.includes(keyword)) {\r\n            matchingParams[key] = value;\r\n        }\r\n    }\r\n\r\n    return matchingParams;\r\n}\r\n\r\nfunction isValidUUID(uuid) {\r\n    const uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\r\n    return uuidPattern.test(uuid);\r\n}\r\n\r\nexport default trackUserEvent","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\n\nconst triggerSwalAlert = async (title, message, type)=>{\n    return MySwal.fire({\n      title: <strong>{title}</strong>,\n      html: <p>{message}</p>,\n      icon: type\n    })\n}\n\nexport default triggerSwalAlert","export const validation = (data) => {\n  const { firstName, lastName, email, phoneNumber, password } = data;\n  var errorVal = {\n    firstName: false,\n    lastName: false,\n    password: false,\n    email: false,\n    phoneNumber: false,\n    message: \"\"\n  }\n\n  if (!firstName) {\n    errorVal[\"firstName\"] = true\n  }\n  if (!lastName) {\n    errorVal[\"lastName\"] = true\n  }\n  if (!email) {\n    errorVal[\"email\"] = true\n  }\n  if (email && !(/\\S+@\\S+\\.\\S+/.test(email))) {\n    errorVal[\"email\"] = true\n    errorVal[\"message\"] = \"invalid email\"\n  }\n  if (!phoneNumber) {\n    errorVal[\"phoneNumber\"] = true\n  }\n  if (phoneNumber && phoneNumber.length != 10) {\n    errorVal[\"phoneNumber\"] = true\n  }\n  if (!password) {\n    errorVal[\"password\"] = true\n  }\n  return errorVal\n};","import { useEffect, useState } from 'react';\nimport \"./index.css\"\nimport { validation } from './validation'\nimport Axios from \"../../api/Axios\";\nimport { login } from '../../store/user';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport triggerSwalAlert from '../../helpers/triggerSwalAlert';\nimport Loader from '../../components/Loader';\nimport jwt_decode from 'jwt-decode'\nimport trackUserEvent from '../../helpers/trackUserEvent';\n\n\nconst axios = new Axios();\n\nfunction SignUp() {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [pending,setPending] = useState(false)\n  const google = window.google;\n\n\n  const [error, setError] = useState({\n    firstName: false,\n    lastName: false,\n    password: false,\n    email: false,\n    // username: false,\n    phoneNumber: false,\n    message: \"\"\n  });\n\n  const [data, setData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    // username: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  // const [isUsernameTaken, setIsUsernameTaken] = useState(false)\n\n  const onChange = (value, target) => {\n    setData({\n      ...data,\n      [target]: value,\n    });\n    if (error.email === true || error.password === true || error.firstName === true || error.lastName === true || error.phoneNumber === true) {\n      setError({\n        ...error,\n        [target]: false\n      })\n    }\n  };\n\n  useEffect(() => {\n    trackUserEvent('Sign Up')\n  },[])\n\n\n  // const checkUsername = async () => {\n  //   const options = {\n  //     method: \"GET\",\n  //   }\n  //   if (data.username) {\n  //     const result = await axios.callApi(`auth/checkByUsername/${data.username}`, options)\n  //     if (result.data.usernameExists) {\n  //       setError({ ...error, username: true })\n  //       setIsUsernameTaken(true)\n  //     }\n  //     else {\n  //       setError({ ...error, username: false })\n  //       setIsUsernameTaken(false)\n  //     }\n  //   }\n  //   else {\n  //     setError({ ...error, username: false })\n  //     setIsUsernameTaken(false)\n  //   }\n\n  // }\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      const valid = validation(data)\n      // data.username && !isUsernameTaken ? setError(valid) : setError({ ...valid, username: true })\n      setError(valid)\n      if (valid.phoneNumber || valid.firstName || valid.lastName || valid.email || valid.password) {\n        return\n      }\n      const options = {\n        method: \"POST\",\n        body: data\n      }\n      setPending(true)\n      const result = await axios.callApi(`auth/createUser`, options)\n\n      if (result.status == 200) {\n        setPending(false)\n        dispatch(login({\n          userId: result.data.id,\n          accessToken: result.data.accessToken,\n          // username: result.data.username,\n          role: result.data.role,\n          firstName: result.data.firstName,\n          lastName: result.data.lastName,\n          email: result.data.email,\n          contact: result.data.phoneNumber\n        }))\n\n        navigate(\"/\")\n      }\n      else{\n        setPending(false)\n        triggerSwalAlert(\"Error\", result.data.errorMessage || \"Something went wrong\", \"error\")\n      }\n\n    }\n    catch (error) {\n      console.error(\"Something went wrong\")\n    }\n  }\n\n  const handleGoogleSignIn = async (res) => {\n    const googleSignInCredential = jwt_decode(res.credential)\n\n    const options = {\n      method: \"POST\",\n      body: googleSignInCredential\n    }\n    try {\n      setPending(true)\n      const result = await axios.callApi(`auth/loginWithGoogle`, options)\n\n      if (result.status == 200) {\n        setPending(false)\n        dispatch(login({\n          userId: result.data.id,\n          accessToken: result.data.accessToken,\n          role: result.data.role,\n          firstName: result.data.firstName,\n          lastName: result.data.lastName,\n          email: result.data.email,\n          contact: result.data.phoneNumber\n        }))\n\n      }\n      else {\n        setPending(false)\n        triggerSwalAlert(\"Error\", result.data.errorMessage || \"Something went wrong\", \"error\")\n      }\n    }\n    catch (error) {\n      console.error(\"Something went wrong\")\n    }\n  }\n\n  useEffect(() => {\n\n    google.accounts.id.initialize({\n      client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n      callback: handleGoogleSignIn\n    });\n\n    google.accounts.id.renderButton(\n      document.getElementById(\"SignInWithGoogle\"),\n      { theme: \"outline\", size: 'large' }\n    )\n  }, [])\n\n  // useEffect(() => {\n  //   const typingTimer = setTimeout(() => {\n  //     checkUsername(data.username)\n  //   }, 1000);\n\n  //   return () => {\n  //     clearTimeout(typingTimer)\n  //   }\n  // }, [data.username])\n\n\n  return (\n    <>\n    {pending ? <Loader/> : null}\n    <div className='signUp-wrapper bg-dark d-flex align-item-center justify-content-center w-100'>\n      <div className='signUp'>\n        <h2 className='mb-3'>Sign Up</h2>\n        <form>\n          <div className='form-group mb-2'>\n            <label htmlFor=\"firstName\" className='form-label'>First Name</label>\n            <input type=\"text\" id='firstName' className={`form-control ${error.firstName && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'firstName')} />\n            {error.firstName && <div className='error'>\n              Please enter your first name\n            </div>}\n          </div>\n          <div className='form-group mb-2'>\n            <label htmlFor=\"lastName\" className='form-label'>Last Name</label>\n            <input type=\"text\" id='lastName' className={`form-control ${error.lastName && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'lastName')} />\n            {error.lastName && <div className='error'>\n              Please enter your last name\n            </div>}\n          </div>\n          {/* <div className='form-group mb-2'>\n            <label htmlFor=\"username\" className='form-label'>Username</label>\n            <input type=\"text\" id='username' className={`form-control ${error.username && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'username')} />\n            {error.username && <div className='error'>\n              {isUsernameTaken ? \"Username already use\" : \"Please enter your username\"}\n            </div>}\n          </div> */}\n          <div className='form-group mb-2'>\n            <label htmlFor=\"email\" className='form-label'>Email Address</label>\n            <input type=\"email\" id='email' className={`form-control ${error.email && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'email')} />\n            {error.email && <div className='error'>\n              {error.message ? \"Please enter a valid email\" : \"Please enter your email\"}\n            </div>}\n          </div>\n          <div className='form-group mb-2'>\n            <label htmlFor=\"phoneNumber\" className='form-label'>Phone Number</label>\n            <input type=\"number\" id='phoneNumber' className={`form-control ${error.phoneNumber && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'phoneNumber')} />\n            {error.phoneNumber && <div className='error'>\n              Please enter valid phoneNumber number\n            </div>}\n          </div>\n          <div className='form-group mb-2'>\n            <label htmlFor=\"password\" className='form-label'>Password</label>\n            <input type=\"password\" id='password' className={`form-control ${error.password && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'password')} />\n            {error.password && <div className='error'>\n              Please enter your password\n            </div>}\n          </div>\n          <button className='btn btn-dark w-100 mt-2' onClick={e => handleSubmit(e)}>SIGN UP</button>\n          <div className=\"text-center mt-2\">\n            <p>Already a member? <Link to={\"/sign-in\"}>Sign In</Link></p>\n          </div>\n          <span style={{ display: 'block', textAlign: \"center\", margin:'0.7rem 0' }}> OR  </span>\n          <div id=\"SignInWithGoogle\" style={{display:'flex',justifyContent:\"center\"}}></div>\n        </form>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default SignUp;","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"],"names":["HttpClient","_createClass","baseURL","_this","_classCallCheck","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","config","wrap","_context","prev","next","abrupt","Promise","resolve","stop","_x","apply","arguments","this","axios","Axios","_HttpClient","_inherits","_super","_createSuper","call","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","sessionStorage","getItem","key","value","url","options","method","header","body","undefined","onUploadProgress","event","uuid","test","callApi","removeItem","matchingParams","keyword","_step","params","URLSearchParams","window","location","search","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","includes","err","e","f","getParamsMatchingKeyword","additionalDetails","then","result","setItem","MySwal","withReactContent","Swal","triggerSwalAlert","title","message","type","fire","_jsx","children","html","icon","_x2","_x3","validation","firstName","lastName","email","phoneNumber","password","errorVal","length","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","pending","setPending","google","_useState3","_useState4","error","setError","_useState5","_useState6","setData","onChange","target","_objectSpread","_defineProperty","useEffect","trackUserEvent","handleSubmit","valid","preventDefault","sent","status","login","userId","id","role","contact","errorMessage","t0","console","handleGoogleSignIn","_callee2","res","googleSignInCredential","_context2","jwt_decode","credential","accounts","initialize","client_id","callback","renderButton","document","getElementById","theme","size","_jsxs","_Fragment","Loader","className","htmlFor","concat","required","onClick","Link","to","style","display","textAlign","margin","justifyContent","prototype","Error","name","r","atob","bind","t","String","replace","o","a","i","c","charAt","fromCharCode","indexOf","decodeURIComponent","charCodeAt","toString","toUpperCase","JSON","parse","split"],"sourceRoot":""}