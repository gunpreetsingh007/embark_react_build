{"version":3,"file":"static/js/366.97a9ed57.chunk.js","mappings":"4OACMA,GAAUC,EAAAA,EAAAA,IAEd,SAAAD,EAAYE,GAAU,IAADC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAJ,GAAA,KAQrBK,+BAAiC,WAC/BF,EAAKG,SAASC,aAAaC,SAASC,IAClCN,EAAKO,gBACLP,EAAKQ,aAET,EAAE,KAEFD,gBAAkB,SAACE,GAAI,OAAKA,CAAK,EAAD,KAEhCD,aAAY,eAAAE,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAC,GAAA,IAAAV,EAAAW,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQb,OARsBf,EAAQU,EAARV,SAAUW,EAAMD,EAANC,OACRA,EAOxBE,EAAAG,OAAA,SACOC,QAAQC,QAAQlB,IAAS,wBAAAa,EAAAM,OAAA,GAAAV,EAAA,KACjC,gBAAAW,GAAA,OAAAf,EAAAgB,MAAA,KAAAC,UAAA,EAVW,GAhBVC,KAAKzB,SAAW0B,IAAAA,OAAa,CAC3B9B,QAAAA,IAGF6B,KAAK1B,gCACP,IAwBF,I,WC/BqB4B,EAAK,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GACxB,SAAAA,IAAe,IAAD9B,EAEyB,OAFzBC,EAAAA,EAAAA,GAAA,KAAA6B,IACZ9B,EAAAiC,EAAAE,KAAA,KAAMC,mCAKRC,8BAAgC,WAC9BrC,EAAKG,SAASC,aAAakC,QAAQhC,IAAIN,EAAKuC,eAC9C,EAACvC,EAEDuC,eAAc,eAAAxB,GAAAJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOE,GAAM,IAAAwB,EAAA,OAAA5B,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAM5B,OALIoB,EAAQC,EAAAA,EAAAA,WAAiBC,KAAKC,YAAYC,eAE9C5B,EAAO6B,QAAQC,cAAgBN,GAC5BO,eAAeC,QAAQ,gBAC1BhC,EAAO6B,QAAQ,cAAgBE,eAAeC,QAAQ,eACtD9B,EAAAG,OAAA,SACOL,GAAM,wBAAAE,EAAAM,OAAA,GAAAV,EAAA,KACd,gBAAAW,GAAA,OAAAV,EAAAW,MAAA,KAAAC,UAAA,EARa,GARZ3B,EAAKqC,gCAAgCrC,CACvC,CAyBC,OAzBAF,EAAAA,EAAAA,GAAAgC,EAAA,EAAAmB,IAAA,UAAAC,MAiBD,SAAQC,EAAKC,GACX,OAAOxB,KAAKzB,SAAS,CACnBkD,OAAQD,EAAQC,OAChBF,IAAKA,EACLN,QAAgB,OAAPO,QAAO,IAAPA,GAAAA,EAASE,OAAgB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASE,OAAS,CAAC,EAC9C7C,KAAa,OAAP2C,QAAO,IAAPA,GAAAA,EAASG,KAAc,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASG,UAAOC,EACtCC,iBAAyB,OAAPL,QAAO,IAAPA,GAAAA,EAASK,iBAA0B,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASK,sBAAmBD,GAE9E,KAAC1B,CAAC,CA7BsB,CAASjC,E,kDCA7BgC,EAAQ,I,SAAIC,GA8ClB,IA5CuB,SAAC4B,GACpB,GAAIX,eAAeC,QAAQ,gBAsCVW,EAtCuCZ,eAAeC,QAAQ,cAuC3D,2FACDY,KAAKD,IAvCpB9B,EAAMgC,QAAQ,0BAA2B,CACrCR,OAAQ,OACRE,KAAM,CACFG,MAAAA,SAIP,CACDX,eAAee,WAAW,cAC1B,IACMC,EAcd,SAAkCC,GAC9B,IAGiCC,EAH3BC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7CP,EAAiB,CAAC,EAAEQ,GAAAC,EAAAA,EAAAA,GAECN,GAAM,IAAjC,IAAAK,EAAAE,MAAAR,EAAAM,EAAAG,KAAAC,MAAmC,CAAC,IAADC,GAAAC,EAAAA,EAAAA,GAAAZ,EAAAf,MAAA,GAAvBD,EAAG2B,EAAA,GAAE1B,EAAK0B,EAAA,GACd3B,EAAI6B,SAASd,KACbD,EAAed,GAAOC,EAE9B,CAAC,OAAA6B,GAAAR,EAAAS,EAAAD,EAAA,SAAAR,EAAAU,GAAA,CAED,OAAOlB,CACX,CAzB+BmB,CADP,OAEZ9B,EAAU,CACVC,OAAQ,OACRE,KAAM,CACF4B,kBAAmBpB,EACnBL,MAAAA,IAGR7B,EAAMgC,QAAQ,4BAA6BT,GAASgC,MAAK,SAACC,GACtDtC,eAAeuC,QAAQ,aAAcD,EAAO5E,KAAKA,KACrD,GACJ,CAgBJ,IAAqBkD,CAfrB,C,iKC1Ba4B,EAAkB,SAACC,GAC9B,IAAQC,EAA6ED,EAA7EC,SAAUC,EAAmEF,EAAnEE,YAAaC,EAAsDH,EAAtDG,iBAAkBC,EAAoCJ,EAApCI,MAAOC,EAA6BL,EAA7BK,UAAWC,EAAkBN,EAAlBM,cACnE,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAAA,OAAKC,IAAK/D,kCAAuCqD,EAAUW,IAAI,qBAEjEL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,QAAAD,SAAOP,KACPQ,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAOK,MAAO,CAAEC,UAAW,UAAWL,SAAEN,KACxDI,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,gBACNC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,YAAYK,MAAO,CAAEE,MAAO,OAAQC,OAAQ,SAAUF,UAAW,UAAWL,SAAEL,WAGlGG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,UAASJ,MACdE,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,UAASH,UAIvB,E,WChBMjE,EAAQ,IAAIC,EAAAA,EAmFlB,EAjFoB,WAEhB,IAAQ2E,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAYC,EAAAA,EAAAA,MAClBC,GAA8CC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAlC,EAAAA,EAAAA,GAAAgC,EAAA,GAAnDG,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAA4CJ,EAAAA,EAAAA,UAAS,CAAC,GAAEK,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GAAjCE,GAAFD,EAAA,GAAmBA,EAAA,IACxCE,GAAwCP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAzC,EAAAA,EAAAA,GAAAwC,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAsCX,EAAAA,EAAAA,YAAUY,GAAA7C,EAAAA,EAAAA,GAAA4C,EAAA,GAAzCE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAwCf,EAAAA,EAAAA,UAAS,CAAC,GAAEgB,GAAAjD,EAAAA,EAAAA,GAAAgD,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,EAAgB,eAAAlH,GAAAJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAsC,EAAAiC,EAAA,OAAAzE,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGpB,OAFKgC,EAAU,CACZC,OAAQ,OACXnC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwBS,EAAMgC,QAAQ,sBAADqE,OACRzB,GACtBrD,GACF,KAAD,EACoB,MAJfiC,EAAMnE,EAAAiH,MAIDC,QACPnB,EAAmB5B,EAAO5E,KAAKA,KAAK4H,eAAerB,iBACnDI,EAAkB/B,EAAO5E,KAAKA,KAAK4H,eAAeC,gBAClDV,EAAevC,EAAO5E,KAAKA,KAAKkH,aAChCH,EAAgBnC,EAAO5E,KAAKA,KAAK8G,cACjCS,EAAgB,CACZO,YAAalD,EAAO5E,KAAKA,KAAK+H,iBAC9BC,gBAAiBpD,EAAO5E,KAAKA,KAAKgI,gBAClCC,YAAarD,EAAO5E,KAAKA,KAAKiI,YAC9BC,2BAA4BtD,EAAO5E,KAAKA,KAAKkI,8BAIjDhC,EAAU,KACbzF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0H,GAAA1H,EAAA,SAGD2H,QAAQC,MAAM,wBAAuB,yBAAA5H,EAAAM,OAAA,GAAAV,EAAA,kBAE5C,kBA5BqB,OAAAC,EAAAW,MAAA,KAAAC,UAAA,KAuCtB,OATAoH,EAAAA,EAAAA,YAAU,WACFtC,GACAwB,GACR,GAAG,KAEHc,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAe,oBACnB,GAAE,KAGEjD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,QAAAD,SAAOe,EAAgBiC,UAAY,IAAMjC,EAAgBkC,YAAgBhD,EAAAA,EAAAA,KAAA,UACzEA,EAAAA,EAAAA,KAAA,QAAAD,SAAOe,EAAgBmC,cAAgB,KAAOnC,EAAgBoC,KAAO,IAAMpC,EAAgBqC,QAAU,KAAOrC,EAAgBsC,MAAQ,KAAOtC,EAAgBuC,WAAerD,EAAAA,EAAAA,KAAA,UAC1KH,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,kBAAgBe,EAAgBwC,eAE1CzD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAE0B,KAAmBzB,EAAAA,EAAAA,KAAA,gBAInDH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACHsB,EAAakC,KAAI,SAACzE,GAAC,OAAKkB,EAAAA,EAAAA,KAACX,EAAe,CAACE,SAAUT,EAAE0E,aAAchE,YAAaV,EAAEU,YAAaC,iBAAkBgE,OAAOC,OAAO5E,EAAE6E,sBAAsB,GAAIjE,MAAOZ,EAAEY,MAAOC,UAAWb,EAAE+C,aAAcjC,cAAed,EAAE8E,sBAAwB,QAEpP/D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,uBAAsB8B,EAAaY,+BACzC5C,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,0BAAyB8B,EAAaW,gBAC5C3C,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,yBAAwB8B,EAAaU,oBAC3C1C,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,yBAAwB8B,EAAaQ,uBAK/D,C","sources":["api/index.js","api/Axios.js","helpers/trackUserEvent.js","components/SingleOrderCart/index.jsx","screens/MyAccount/singleOrder.jsx"],"sourcesContent":["import axios from 'axios';\nclass HttpClient {\n\n  constructor(baseURL) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  _handleResponse = (data) => data;\n\n  _handleError = async ({ response, config }) => {\n    const originalRequest = config;\n    // if (response?.status === 401 && !originalRequest._retry) {\n    //   // call refresh token\n    //   localStorage.clear();\n    //   sessionStorage.clear()\n    //   store.dispatch(logout())\n    //   window.location.href = '/sign-in'\n    // }\n    return Promise.resolve(response);\n  };\n}\n\nexport default HttpClient;","import HttpClient from \"./index\";\nimport store from \"../store\";\nexport default class Axios extends HttpClient {\n  constructor() {\n    super(process.env.REACT_APP_BASE_URL);\n    this._initializeRequestInterceptor();\n  }\n\n\n  _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest);\n  };\n\n  _handleRequest = async (config) => {\n    let token = store.getState().user.currentUser.accessToken\n    if (token)\n    config.headers.Authorization = token;\n    if(sessionStorage.getItem('session-id'))\n    config.headers['session-id'] = sessionStorage.getItem('session-id');\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\n    return config;\n  };\n\n  callApi(url, options) {\n    return this.instance({\n      method: options.method,\n      url: url,\n      headers: options?.header ? options?.header : {},\n      data: options?.body ? options?.body : undefined,\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\n    });\n  };\n}\n","import Axios from \"../api/Axios\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst trackUserEvent = (event) => {\r\n    if (sessionStorage.getItem(\"session-id\") && isValidUUID(sessionStorage.getItem(\"session-id\"))) {\r\n        axios.callApi(\"/session/trackUserEvent\", {\r\n            method: \"POST\",\r\n            body: {\r\n                event\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        sessionStorage.removeItem('session-id');\r\n        const keyword = 'utm'; // The keyword you want to match\r\n        const matchingParams = getParamsMatchingKeyword(keyword);\r\n        let options = {\r\n            method: \"POST\",\r\n            body: {\r\n                additionalDetails: matchingParams,\r\n                event\r\n            }\r\n        }\r\n        axios.callApi(\"/session/createNewSession\", options).then((result) => {\r\n            sessionStorage.setItem('session-id', result.data.data)\r\n        })\r\n    }\r\n}\r\n\r\nfunction getParamsMatchingKeyword(keyword) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const matchingParams = {};\r\n\r\n    for (const [key, value] of params) {\r\n        if (key.includes(keyword)) {\r\n            matchingParams[key] = value;\r\n        }\r\n    }\r\n\r\n    return matchingParams;\r\n}\r\n\r\nfunction isValidUUID(uuid) {\r\n    const uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\r\n    return uuidPattern.test(uuid);\r\n}\r\n\r\nexport default trackUserEvent","import \"./index.css\"\r\n\r\nexport const SingleOrderCart = (props) => {\r\n  const { photoURL, productName, productAttribute, count, realPrice, discountPrice } = props\r\n  return (\r\n    <div className='singleOrderCart-container card mt-2 mb-2'>\r\n      <div className='product-image'>\r\n        <img src={process.env.REACT_APP_BASE_URL + \"/\" + photoURL} alt=\"product-image\" />\r\n      </div>\r\n      <div className='product-details'>\r\n        <span>{productName}</span>\r\n        <span className=\"mb-4\" style={{ textAlign: \"center\" }}>{productAttribute}</span>\r\n        <div>\r\n          <span>Quantity :</span>\r\n          <span className='card ms-2' style={{ width: \"2rem\", height: \"1.4rem\", textAlign: \"center\" }}>{count}</span>\r\n        </div>\r\n      </div>\r\n      <div className='price'>\r\n        <del>&#8377; {realPrice}</del>\r\n        <span>&#8377; {discountPrice}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import \"./index.css\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport Axios from \"../../api/Axios\"\nimport { SingleOrderCart } from \"../../components/SingleOrderCart\"\nimport trackUserEvent from \"../../helpers/trackUserEvent\"\n\nconst axios = new Axios();\n\nconst SingleOrder = () => {\n\n    const { id } = useParams()\n    const navigator = useNavigate()\n    const [shippingAddress, setShippingAddress] = useState({})\n    const [billingAddress, setBillingAddress] = useState({})\n    const [orderDetails, setOrderDetails] = useState([])\n    const [orderStatus, setOrderStatus] = useState()\n    const [productPrice, setProductPrice] = useState({})\n\n    const getUserOrderById = async () => {\n        const options = {\n            method: \"GET\"\n        };\n        try {\n            const result = await axios.callApi(\n                `/user/getOrderById/${id}`,\n                options\n            );\n            if (result.status == 200) {\n                setShippingAddress(result.data.data.addressDetails.shippingAddress)\n                setBillingAddress(result.data.data.addressDetails.billingAddress)\n                setOrderStatus(result.data.data.orderStatus)\n                setOrderDetails(result.data.data.orderDetails)\n                setProductPrice({\n                    totalAmount: result.data.data.orderTotalAmount,\n                    deliveryCharges: result.data.data.deliveryCharges,\n                    orderAmount: result.data.data.orderAmount,\n                    orderAmountWithoutDiscount: result.data.data.orderAmountWithoutDiscount\n                })\n            }\n            else {\n                navigator(\"*\")\n            }\n        }\n        catch (error) {\n            console.error(\"Something went wrong\")\n        }\n    }\n\n    useEffect(() => {\n        if (id)\n            getUserOrderById()\n    }, [])\n\n    useEffect(() => {\n        trackUserEvent(\"View Single Order\")\n    },[])\n\n    return (\n        <div className=\"single-order-container\">\n            <div className=\"first-section\">\n                <div>\n                    <h3>Delivery Address</h3>\n                    <span>{shippingAddress.firstName + \" \" + shippingAddress.lastName}</span><br />\n                    <span>{shippingAddress.streetAddress + \", \" + shippingAddress.city + \"-\" + shippingAddress.pincode + \", \" + shippingAddress.state + \", \" + shippingAddress.country}</span><br />\n                    <span>Phone number : {shippingAddress.contact}</span>\n                </div>\n                <div className=\"order-status\">\n                    <h3>Order Status</h3>\n                    <span className=\"mt-2\">{orderStatus}</span><br />\n                    {/* <button className='btn btn-dark mt-2'>Download Invoice</button> */}\n                </div>\n            </div>\n            <div className=\"second-section mt-5\">\n                <h4>Product Details</h4>\n                {orderDetails.map((e) => <SingleOrderCart photoURL={e.productImage} productName={e.productName} productAttribute={Object.values(e.attributeCombination)[0]} count={e.count} realPrice={e.productPrice} discountPrice={e.productDiscountPrice} />)}\n            </div>\n            <div className=\"third-section mt-5\">\n                <h4>Price Details</h4>\n                <div className=\"price-details ms-3\">\n                    <span>List price : &#8377; {productPrice.orderAmountWithoutDiscount}</span>\n                    <span>Selling price : &#8377; {productPrice.orderAmount}</span>\n                    <span>Shipping fee : &#8377; {productPrice.deliveryCharges}</span>\n                    <span>Total Amount : &#8377; {productPrice.totalAmount}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SingleOrder\n"],"names":["HttpClient","_createClass","baseURL","_this","_classCallCheck","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","config","wrap","_context","prev","next","abrupt","Promise","resolve","stop","_x","apply","arguments","this","axios","Axios","_HttpClient","_inherits","_super","_createSuper","call","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","sessionStorage","getItem","key","value","url","options","method","header","body","undefined","onUploadProgress","event","uuid","test","callApi","removeItem","matchingParams","keyword","_step","params","URLSearchParams","window","location","search","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","includes","err","e","f","getParamsMatchingKeyword","additionalDetails","then","result","setItem","SingleOrderCart","props","photoURL","productName","productAttribute","count","realPrice","discountPrice","_jsxs","className","children","_jsx","src","alt","style","textAlign","width","height","id","useParams","navigator","useNavigate","_useState","useState","_useState2","shippingAddress","setShippingAddress","_useState3","_useState4","setBillingAddress","_useState5","_useState6","orderDetails","setOrderDetails","_useState7","_useState8","orderStatus","setOrderStatus","_useState9","_useState10","productPrice","setProductPrice","getUserOrderById","concat","sent","status","addressDetails","billingAddress","totalAmount","orderTotalAmount","deliveryCharges","orderAmount","orderAmountWithoutDiscount","t0","console","error","useEffect","trackUserEvent","firstName","lastName","streetAddress","city","pincode","state","country","contact","map","productImage","Object","values","attributeCombination","productDiscountPrice"],"sourceRoot":""}