{"version":3,"file":"static/js/2669.17792c4e.chunk.js","mappings":"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","sources":["api/index.js","api/Axios.js","helpers/trackUserEvent.js","components/OrderCart/index.jsx","screens/MyAccount/orders.jsx"],"sourcesContent":["import axios from 'axios';\nclass HttpClient {\n\n  constructor(baseURL) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  _handleResponse = (data) => data;\n\n  _handleError = async ({ response, config }) => {\n    const originalRequest = config;\n    // if (response?.status === 401 && !originalRequest._retry) {\n    //   // call refresh token\n    //   localStorage.clear();\n    //   sessionStorage.clear()\n    //   store.dispatch(logout())\n    //   window.location.href = '/sign-in'\n    // }\n    return Promise.resolve(response);\n  };\n}\n\nexport default HttpClient;","import HttpClient from \"./index\";\nimport store from \"../store\";\nexport default class Axios extends HttpClient {\n  constructor() {\n    super(process.env.REACT_APP_BASE_URL);\n    this._initializeRequestInterceptor();\n  }\n\n\n  _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest);\n  };\n\n  _handleRequest = async (config) => {\n    let token = store.getState().user.currentUser.accessToken\n    if (token)\n    config.headers.Authorization = token;\n    if(sessionStorage.getItem('session-id'))\n    config.headers['session-id'] = sessionStorage.getItem('session-id');\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\n    return config;\n  };\n\n  callApi(url, options) {\n    return this.instance({\n      method: options.method,\n      url: url,\n      headers: options?.header ? options?.header : {},\n      data: options?.body ? options?.body : undefined,\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\n    });\n  };\n}\n","import Axios from \"../api/Axios\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst trackUserEvent = (event) => {\r\n    if (sessionStorage.getItem(\"session-id\") && isValidUUID(sessionStorage.getItem(\"session-id\"))) {\r\n        axios.callApi(\"/session/trackUserEvent\", {\r\n            method: \"POST\",\r\n            body: {\r\n                event\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        sessionStorage.removeItem('session-id');\r\n        const keyword = 'utm'; // The keyword you want to match\r\n        const matchingParams = getParamsMatchingKeyword(keyword);\r\n        let options = {\r\n            method: \"POST\",\r\n            body: {\r\n                additionalDetails: matchingParams,\r\n                event\r\n            }\r\n        }\r\n        axios.callApi(\"/session/createNewSession\", options).then((result) => {\r\n            sessionStorage.setItem('session-id', result.data.data)\r\n        })\r\n    }\r\n}\r\n\r\nfunction getParamsMatchingKeyword(keyword) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const matchingParams = {};\r\n\r\n    for (const [key, value] of params) {\r\n        if (key.includes(keyword)) {\r\n            matchingParams[key] = value;\r\n        }\r\n    }\r\n\r\n    return matchingParams;\r\n}\r\n\r\nfunction isValidUUID(uuid) {\r\n    const uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\r\n    return uuidPattern.test(uuid);\r\n}\r\n\r\nexport default trackUserEvent","import \"./index.css\"\nimport moment from 'moment';\nimport { useNavigate } from \"react-router-dom\";\nexport const OrderCart = (props) => {\n\n    const navigator = useNavigate()\n    const { id, totalPrice, orderStatus, orderDetails, date } = props\n\n    return (\n        <div key={id} className=\"order-container-wrapper card p-3\" onClick={() => { navigator(`/my-account/orders/${id}`) }}>\n            <div>\n                {moment(date).format('MMMM Do YYYY')}\n            </div>\n            <div className=\"row order-cart-container\">\n                <div className=\"col-sm-12 col-lg-4 product-details-section\">\n                    {orderDetails.map((e) =>\n                    (<>\n                        <span>{e.productName}{e.count != 1 ? <>&times;{e.count}</> : \"\"}</span>\n                    </>)\n                    )}\n                </div>\n\n                <div className=\"col-sm-12 col-lg-4 product-price-section\">\n                    <div className=\"product-price\">\n                        <div>\n                            <span className=\"amount\"><span className=\"Price-currencySymbol\">â‚¹</span>{totalPrice}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-sm-12 col-lg-4 product-status-section\">\n                    <div className=\"product-status\">\n                        <span>{orderStatus}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import \"./index.css\"\nimport { OrderCart } from \"../../components/OrderCart\"\nimport { useEffect, useState } from \"react\"\nimport Axios from \"../../api/Axios\"\nimport trackUserEvent from \"../../helpers/trackUserEvent\";\n\nconst axios = new Axios();\n\nconst Orders = () => {\n\n  const [userOrders, setUserOrders] = useState([])\n\n  const getAllUserOrders = async () => {\n    const options = {\n      method: \"GET\"\n    };\n    try {\n      const result = await axios.callApi(\n        `/user/getAllOrders`,\n        options\n      );\n      if (result.status == 200) {\n        setUserOrders(result.data.data)\n      }\n    }\n    catch (error) {\n      console.error(\"Something went wrong\")\n    }\n  }\n\n  useEffect(() => {\n    getAllUserOrders()\n  }, [])\n\n  useEffect(() => {\n    trackUserEvent(\"My Orders\")\n  },[])\n\n  return (\n    <div className=\".container-fluid\" style={{ backgroundColor: \"white\" }}>\n      {userOrders.length == 0 ? <span className=\"text-style order-msg\">\n        No order has been made yet.\n      </span> : userOrders.map((e) => <OrderCart id={e.id} totalPrice={e.orderTotalAmount} orderStatus={e.orderStatus} orderDetails={e.orderDetails} date={e.placedAt} />)}\n    </div>\n  )\n}\n\nexport default Orders\n"],"names":["constructor","baseURL","_initializeResponseInterceptor","this","instance","interceptors","response","use","_handleResponse","_handleError","data","async","config","_ref","Promise","resolve","axios","Axios","HttpClient","super","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","sessionStorage","getItem","callApi","url","options","method","header","body","undefined","onUploadProgress","event","uuid","test","removeItem","matchingParams","keyword","params","URLSearchParams","window","location","search","key","value","includes","getParamsMatchingKeyword","additionalDetails","then","result","setItem","OrderCart","props","navigator","useNavigate","id","totalPrice","orderStatus","orderDetails","date","_jsxs","className","onClick","concat","children","_jsx","moment","format","map","e","_Fragment","productName","count","Orders","userOrders","setUserOrders","useState","useEffect","status","error","console","getAllUserOrders","trackUserEvent","style","backgroundColor","length","orderTotalAmount","placedAt"],"sourceRoot":""}