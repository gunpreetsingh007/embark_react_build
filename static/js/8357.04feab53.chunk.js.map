{"version":3,"file":"static/js/8357.04feab53.chunk.js","mappings":"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","sources":["api/index.js","api/Axios.js","helpers/triggerSwalAlert.js","components/RsuiteTable/index.jsx","components/DateRangePicker/Style.jsx","components/DateRangePicker/index.jsx","screens/EmbarkAdmins/Orders/index.jsx"],"sourcesContent":["import axios from 'axios';\nclass HttpClient {\n\n  constructor(baseURL) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  _handleResponse = (data) => data;\n\n  _handleError = async ({ response, config }) => {\n    const originalRequest = config;\n    // if (response?.status === 401 && !originalRequest._retry) {\n    //   // call refresh token\n    //   localStorage.clear();\n    //   sessionStorage.clear()\n    //   store.dispatch(logout())\n    //   window.location.href = '/sign-in'\n    // }\n    return Promise.resolve(response);\n  };\n}\n\nexport default HttpClient;","import HttpClient from \"./index\";\nimport store from \"../store\";\nexport default class Axios extends HttpClient {\n  constructor() {\n    super(process.env.REACT_APP_BASE_URL);\n    this._initializeRequestInterceptor();\n  }\n\n\n  _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest);\n  };\n\n  _handleRequest = async (config) => {\n    let token = store.getState().user.currentUser.accessToken\n    if (token)\n    config.headers.Authorization = token;\n    if(sessionStorage.getItem('session-id'))\n    config.headers['session-id'] = sessionStorage.getItem('session-id');\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\n    return config;\n  };\n\n  callApi(url, options) {\n    return this.instance({\n      method: options.method,\n      url: url,\n      headers: options?.header ? options?.header : {},\n      data: options?.body ? options?.body : undefined,\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\n    });\n  };\n}\n","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\n\nconst triggerSwalAlert = async (title, message, type)=>{\n    return MySwal.fire({\n      title: <strong>{title}</strong>,\n      html: <p>{message}</p>,\n      icon: type\n    })\n}\n\nexport default triggerSwalAlert","import { useState } from 'react';\nimport { Table, Pagination,SelectPicker } from 'rsuite';\nimport 'rsuite/dist/rsuite.min.css';\nconst { Column, ColumnGroup, HeaderCell, Cell } = Table;\n\nconst TableComponent = (columns,data) => {\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const limitOptions = [10, 50, 100];\n  const columnData = columns.columns;\n\n  const handleChangeLimit = (dataKey) => {\n    setPage(1);\n    setLimit(dataKey);\n  };\n\n//   const paginationData = data?.filter((v, i) => {\n//     const start = limit * (page - 1);\n//     const end = start + limit;\n//     return i >= start && i < end;\n//   });\n\n\n  return (\n    <div className='datarstable'>\n      <Table className='rstable' id=\"dataTable\" fillHeight={true} bordered cellBordered headerHeight={60} data={data}>\n        {columnData?.map((item,index) => {\n        return ( \n          <>\n          { !item?.children ? (\n            <>\n              <Column key={index} width={item.width} align=\"center\" resizable>\n              <HeaderCell key={index} style={{background:\"#fff\",textTransform:\"none\"}}>{item?.displayName}\n              { item?.headerElement && item?.headerElement}\n              </HeaderCell>\n              {item?.cell \n              ? \n              (<Cell key={index} style={index == \"0\" ? {textTransform:\"none\",background:\"#F1F3F5\"} : {textTransform:\"none\"}} dataKey={item?.accessor}>\n              {item.cell}\n              </Cell>)\n              : \n              (<Cell key={index} style={{textTransform:\"none\"}} dataKey={item?.accessor} />)}\n              </Column>\n            </>\n          ):(\n            <>\n              <ColumnGroup key={index} align=\"center\" header={item?.displayName} style={{background:\"#fff\"}}  >\n                {item.children.map((child)=>{\n                  return (\n                    <Column key={index} width={child.width} align={item.align ? item.align : \"center\"} resizable >\n                  <HeaderCell key={index} style={{background:\"#fff\"}}>{child?.childName}</HeaderCell>\n                  {child?.cell\n                  ? \n                  <Cell key={index} dataKey={child?.accessor}>{child?.cell}</Cell>\n                  : \n                  <Cell key={index}  dataKey={child?.accessor} />\n                }\n                </Column>\n                  )\n                })}\n                \n              </ColumnGroup>\n            </>\n          )}\n\n          </>\n        )\n        })} \n      </Table>\n      <div style={{ padding: 15, display:\"flex\",alignItems:\"center\",justifyContent:\"center\" }}>\n          <Pagination\n            prev\n            next\n            first\n            last\n            ellipsis\n            boundaryLinks\n            maxButtons={5}\n            size=\"md\"\n            total={data.length}\n            limit={limit}\n            limitOptions={limitOptions}\n            activePage={page}\n            onChangePage={setPage}\n            onChangeLimit={handleChangeLimit}\n            />\n            <span style={{ marginLeft: 20, fontSize:\"12px\" }}>\n            Results per page\n            <SelectPicker\n              value={limit}\n              onChange={handleChangeLimit}\n              cleanable={false}\n              searchable={false}\n              placement=\"topStart\"\n              style={{marginLeft:\"10px\",border: \"1px solid #E3E7EB\",color:\"#4A4E52\"}}\n              data={limitOptions.map((key) => ({ value: key, label: key }))}\n            />\n            </span>\n      </div>\n    </div>\n\n  );\n};\n\nexport default TableComponent;\n","import styled from \"styled-components\";\n\nexport const DatePicker = styled.input`\nwidth: 236px;\nheight: 40px;\nborder: 1px solid #A6B0B9;\nborder-radius: 4px;\ncolor: #A6B0B9;\n  padding: 0.56rem 0.25rem 0.56rem 1.875rem;  \nbackground: transparent url(\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20height%3D%220.875rem%22%20width%3D%220.75rem%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22%23A6B0B9%22%20d%3D%22M0%20464c0%2026.5%2021.5%2048%2048%2048h352c26.5%200%2048-21.5%2048-48V192H0v272zm320-196c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zm0%20128c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zM192%20268c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zm0%20128c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zM64%20268c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012H76c-6.6%200-12-5.4-12-12v-40zm0%20128c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012H76c-6.6%200-12-5.4-12-12v-40zM400%2064h-48V16c0-8.8-7.2-16-16-16h-32c-8.8%200-16%207.2-16%2016v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8%200-16%207.2-16%2016v48H48C21.5%2064%200%2085.5%200%20112v48h448v-48c0-26.5-21.5-48-48-48z%22%2F%3E%3C%2Fsvg%3E\") no-repeat 10px center;\n::placeholder {\n    font: normal normal normal 16px/19px \"Proxima Nova Rg\", sans-serif;\n    letter-spacing: 0px;\n    color: #00000099;\n  }\n`","import React, { useRef, useEffect } from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport './index.css';\nimport { DatePicker } from './Style';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nconst DatePickerElement = (props) => {\n  const { onChangeDateRange } = props\n  const todaySampleDate = [new Date().setHours(0, 0, 0, 0), new Date().setHours(0, 0, 0, 0)]\n  const [startDate, endDate] = [new Date().setHours(0, 0, 0, 0), new Date().setHours(0, 0, 0, 0)]\n  const pickerRef = useRef()\n\n  useEffect(() => {\n    pickerRef.current.setStartDate(startDate ?? todaySampleDate[0])\n    pickerRef.current.setEndDate(endDate ?? todaySampleDate[1])\n\n  }, [startDate, endDate])\n\n  const applyDateRangeHandler = (event) => {\n    let selectedDateRangeArr = event.target.value.split(\" - \")\n    selectedDateRangeArr = selectedDateRangeArr.map(date => new Date(date))\n    onChangeDateRange && onChangeDateRange(selectedDateRangeArr)\n  }\n\n  return (\n    <form className=\"dateRange\">\n      <DateRangePicker\n        ref={pickerRef} initialSettings={{ locale: { format: 'MMM DD YYYY' }, showDropdowns: true, opens: 'left' }}\n        onApply={applyDateRangeHandler}>\n        <DatePicker readOnly={true} />\n      </DateRangePicker>\n\n    </form>\n  )\n\n}\n\nexport default DatePickerElement;","import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport { Table, Popover, Whisper, Checkbox, Dropdown, IconButton, Progress, Pagination } from 'rsuite';\r\nimport MoreIcon from '@rsuite/icons/legacy/More';\r\nimport \"./index.css\";\r\nimport TableComponent from '../../../components/RsuiteTable/index.jsx';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport DatePickerElement from '../../../components/DateRangePicker';\r\nimport Axios from '../../../api/Axios';\r\nimport Loader from '../../../components/Loader';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport triggerSwalAlert from '../../../helpers/triggerSwalAlert';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\n\r\nconst axios = new Axios();\r\n\r\nconst ProductOrders = () => {\r\n  const navigate = useNavigate();\r\n  const { Column, HeaderCell, Cell } = Table;\r\n  const [checkedKeys, setCheckedKeys] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [action, setAction] = useState(\"\");\r\n  const [selectedOrderStatus, setSelectedOrderStatus] = useState(\"ALL\");\r\n  const [copyData, setCopyData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sortColumn, setSortColumn] = useState();\r\n  const [sortType, setSortType] = useState();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [csvData, setCSVData] = useState([]);\r\n  const [originalOrdersData, setOriginalOrdersData] = useState([]);\r\n  const [todayStats, setTodayStats] = useState({totalOrders: 0, value: 0})\r\n  const [currentMonthStats, setCurrentMonthStats] = useState({totalOrders: 0, value: 0})\r\n  const [lastMonthStats, setLastMonthStats] = useState({totalOrders: 0, value: 0})\r\n  const [currentYearStats, setCurrentYearStats] = useState({totalOrders: 0, value: 0})\r\n  const [customStats, setCustomStats] = useState({totalOrders: 0, value: 0})\r\n  let [customerCount, setCustomerCount] = useState(0)\r\n  let [newCustomer, setNewCustomer] = useState(0)\r\n  let [existingCustomer, setExistingCustomer] = useState(0)\r\n  // const [searchKey, setSearchKey] = useState('');\r\n  const orderStatusFilters = [\r\n      {\r\n          \"id\": \"all\",\r\n          \"value\": \"ALL\"\r\n      },\r\n      {\r\n          \"id\": \"processing\",\r\n          \"value\": \"PROCESSING\"\r\n      },\r\n      {\r\n        \"id\": \"onhold\",\r\n        \"value\": \"ON HOLD\"\r\n      },\r\n      {\r\n          \"id\": \"completed\",\r\n          \"value\": \"COMPLETED\"\r\n      },\r\n      {\r\n          \"id\": \"cancelled\",\r\n          \"value\": \"CANCELLED\"\r\n      },\r\n      {\r\n          \"id\": \"refunded\",\r\n          \"value\": \"REFUNDED\"\r\n      },\r\n      {\r\n          \"id\": \"failed\",\r\n          \"value\": \"FAILED\"\r\n      }\r\n  ]\r\n  const [pending, setPending] = useState(false)\r\n  const [finalDate, setFinalDate] = useState([new Date(), new Date()])\r\n\r\n\r\n  let checked = false;\r\n  let indeterminate = false;\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (checkedKeys.length === data.length) {\r\n    checked = true;\r\n  } else if (checkedKeys.length === 0) {\r\n    checked = false;\r\n  } else if (checkedKeys.length > 0 && checkedKeys.length < data.length) {\r\n    indeterminate = true;\r\n  }\r\n\r\n  const handleCheckAll = (value, checked) => {\r\n    const keys = checked ? data.map(item => item.id) : [];\r\n    setCheckedKeys(keys);\r\n  };\r\n  const handleCheck = (value, checked) => {\r\n    const keys = checked ? [...checkedKeys, value] : checkedKeys.filter(item => item !== value);\r\n    setCheckedKeys(keys);\r\n  };\r\n\r\n  const CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\r\n    <Cell {...props} style={{ padding: 0 }}>\r\n      <div style={{ lineHeight: '46px' }}>\r\n        <Checkbox\r\n          value={rowData[dataKey]}\r\n          inline\r\n          onChange={onChange}\r\n          checked={checkedKeys.some(item => item === rowData[dataKey])}\r\n        />\r\n      </div>\r\n    </Cell>\r\n  );\r\n\r\n  const StatusCell = ({ rowData, dataKey, ...props }) => (\r\n    <Cell {...props} style={{ padding: 0 }}>\r\n      <div\r\n        style={{\r\n          background: `${rowData.status == 'COMPLETED' ? '#00ff00' : rowData.status == 'PROCESSING' ? '#FFA500' : rowData.status == 'CANCELLED' ? '#e0e0e0' : 'transparent'}`,\r\n          borderRadius: 6,\r\n          padding: \"5px 10px\",\r\n          marginTop: \"8px\",\r\n          overflow: 'hidden',\r\n          display: 'inline-block'\r\n        }}\r\n      >\r\n        <div>{rowData.status}</div>\r\n      </div>\r\n    </Cell>\r\n  );\r\n\r\n  const handleData = useCallback(async () => {\r\n    setPending(true)\r\n    const options = {\r\n      method: \"GET\"\r\n    }\r\n    const result = await axios.callApi(`order/getOrders?start=${moment(finalDate[0]).startOf(\"day\").valueOf()}&end=${moment(finalDate[1]).endOf(\"day\").valueOf()}&type=${(selectedOrderStatus != \"ALL\") ? selectedOrderStatus : \"\"}`, options)\r\n    if (result.status == 200) {\r\n      setPending(false)\r\n      let ordersArr = []\r\n      let newCustomersArr = []\r\n      let existingCustomersArr = []\r\n      result?.data?.data.forEach((order) => {\r\n        if(order.purchaseCount == 1) newCustomersArr.push(order.userId)\r\n        else existingCustomersArr.push(order.userId)\r\n        ordersArr.push({\r\n          id: order.id,\r\n          orderNo: `${order.orderToken}`,\r\n          shiprocketOrderNo: `${order.id}`,\r\n          name: `${order.addressDetails.shippingAddress.firstName} ${order.addressDetails.shippingAddress.lastName}`,\r\n          date: moment(order.placedAt).format(\"YYYY-MM-DD h:m a\"),\r\n          status: order.orderStatus,\r\n          city: order.addressDetails.shippingAddress.city,\r\n          purchaseNo: order.purchaseCount,\r\n          total: parseInt(order.orderTotalAmount),\r\n          additionalDetails: order.additionalDetails\r\n        })\r\n      })\r\n      customerCount = result?.data?.customerCount\r\n      setData(ordersArr);\r\n      setCopyData(ordersArr);\r\n      setOriginalOrdersData(result?.data?.data)\r\n      setTodayStats(result?.data?.todayStats)\r\n      setCurrentMonthStats(result?.data?.currentMonthStats)\r\n      setLastMonthStats(result?.data?.lastMonthStats)\r\n      setCurrentYearStats(result?.data?.thisYearStats)\r\n      setCustomStats(result?.data?.customStats)\r\n      setCustomerCount(result?.data?.customerCount)\r\n      newCustomer = new Set(newCustomersArr).size\r\n      existingCustomer = new Set(existingCustomersArr).size\r\n      setNewCustomer(newCustomer)\r\n      setExistingCustomer(existingCustomer)\r\n    }\r\n    else {\r\n      setPending(false)\r\n    }\r\n  }, [finalDate, selectedOrderStatus])\r\n\r\n  // const setFiltersArray = (orders)=>{\r\n  //   let filtersValuesCount = [{all: 0}, {processing: 0}, {completed: 0}, {cancelled: 0}, {refunded: 0}, {failed: 0}]\r\n\r\n  //   orders.forEach(order=>{\r\n  //     filtersValuesCount[0].all += 1\r\n  //     switch(order.orderStatus){\r\n  //       case \"PROCESSING\":\r\n  //         filtersValuesCount[1].processing += 1\r\n  //         break \r\n  //       case \"COMPLETED\":\r\n  //         filtersValuesCount[2].completed += 1\r\n  //         break \r\n  //       case \"CANCELLED\":\r\n  //         filtersValuesCount[3].cancelled += 1\r\n  //         break \r\n  //       case \"REFUNDED\":\r\n  //         filtersValuesCount[4].refunded += 1\r\n  //         break \r\n  //       case \"FAILED\":\r\n  //         filtersValuesCount[5].failed += 1\r\n  //         break\r\n  //       default:\r\n  //         break\r\n  //     }\r\n  //   })\r\n  //   let filtersArr = filtersValuesCount.map(item => {\r\n  //     return {\r\n  //       \"id\": Object.keys(item)[0],\r\n  //       \"value\": `${Object.keys(item)[0].toUpperCase()} (${Object.values(item)[0]})`\r\n  //     }\r\n  //   })\r\n  //   setOrderStatusFilters(filtersArr)\r\n  //   return filtersArr\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleData()\r\n  }, [finalDate, selectedOrderStatus])\r\n\r\n  const handleBulkStatusChange = async (event) => {\r\n    if(checkedKeys.length == 0) return\r\n    const { target: { value } } = event;\r\n    setPending(true)\r\n    setAction(value);\r\n    let options = {\r\n        method: \"POST\",\r\n        body: {\r\n            status: value,\r\n            ids: checkedKeys\r\n        }\r\n    }\r\n    let result = await axios.callApi(\"/order/bulkUpdateOrderStatus\", options);\r\n    if(result.status == 200){\r\n        setPending(false)\r\n        let temp = JSON.parse(JSON.stringify(copyData))\r\n        temp.map(item=> {\r\n          if(checkedKeys.includes(item.id)){\r\n            item.status = value\r\n          }\r\n        })\r\n        setData(temp);\r\n        setCopyData(temp);\r\n        triggerSwalAlert(\"Success\", \"Status Updated Successfully\", \"success\")\r\n    }\r\n    else{\r\n        setPending(false)\r\n        triggerSwalAlert(\"Error\", \"Error while updating the status of order\", \"error\")\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    const {target: { value }} = event;\r\n    setSelectedOrderStatus(value)\r\n  //   let selectedFilter = selectedOrderStatus.split(' ')[0];\r\n  //  let filteredData = copyData.filter((item)=> item.status == selectedFilter)\r\n  //  if(searchKey.length !== 0 && selectedFilter.toLowerCase() !== 'all'){\r\n  //   let newFilteredData = filteredData.filter(\r\n  //       (e) =>\r\n  //         e?.name\r\n  //           ?.toLocaleLowerCase()\r\n  //           .includes(searchKey.trim().toLocaleLowerCase())\r\n  //     );\r\n  //     setData(newFilteredData)\r\n  //     setBackup(filteredData)\r\n  //  }else{\r\n  //   setData(filteredData)\r\n  //   setBackup(filteredData)\r\n  //  }\r\n  //  if(selectedFilter.toLowerCase() == 'all'){\r\n  //      if(searchKey.length !== 0){\r\n  //   let newFilteredData = copyData.filter(\r\n  //       (e) =>\r\n  //         e?.name\r\n  //           ?.toLocaleLowerCase()\r\n  //           .includes(searchKey.trim().toLocaleLowerCase())\r\n  //     );\r\n  //     setData(newFilteredData)\r\n  //     setBackup(newFilteredData)\r\n  //  }else{\r\n  //   setData(copyData)\r\n  //   setBackup(copyData)\r\n  //  }\r\n  //  }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      id: 2,\r\n      value: \"PROCESSING\",\r\n      label: 'Change status to processing'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: \"ON HOLD\",\r\n      label: 'Change status to on-hold'\r\n    },\r\n    {\r\n      id: 4,\r\n      value: \"COMPLETED\",\r\n      label: 'Change status to completed'\r\n    },\r\n    {\r\n      id: 5,\r\n      value: \"CANCELLED\",\r\n      label: 'Change status to cancelled'\r\n    }\r\n  ];\r\n\r\n  const onSearch = useCallback((key) => {\r\n    // setSearchKey(key)\r\n    const temp = copyData.filter(\r\n      (e) =>\r\n        e?.name\r\n          ?.toLocaleLowerCase()\r\n          .includes(key.trim().toLocaleLowerCase())\r\n    );\r\n    setData(temp);\r\n  }, [copyData]);\r\n\r\n  const getData = () => {\r\n    if (sortColumn && sortType) {\r\n      return data.sort((a, b) => {\r\n        let x = a[sortColumn];\r\n        let y = b[sortColumn];\r\n        if (typeof x === 'string') {\r\n          x = x.charCodeAt();\r\n        }\r\n        if (typeof y === 'string') {\r\n          y = y.charCodeAt();\r\n        }\r\n        if (sortType === 'asc') {\r\n          return x - y;\r\n        } else {\r\n          return y - x;\r\n        }\r\n      });\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const handleSortColumn = (sortColumn, sortType) => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setSortColumn(sortColumn);\r\n      setSortType(sortType);\r\n    }, 500);\r\n  };\r\n\r\n  const handleChangeLimit = dataKey => {\r\n    setPage(1);\r\n    setLimit(dataKey);\r\n  };\r\n\r\n  const tableData = getData().filter((v, i) => {\r\n    const start = limit * (page - 1);\r\n    const end = start + limit;\r\n    return i >= start && i < end;\r\n  });\r\n\r\n  const onChangeDateRange = (value) => {\r\n    setFinalDate(value)\r\n  }\r\n\r\n  //   let windowWidth = document.documentElement.clientWidth;\r\n  //   let w = (20 * windowWidth ) / 100;\r\n  //   let w = (20 * 16 ) / 100;\r\n\r\n  const headers = [\r\n    \"PARTNER\",\r\n    \"DATE\",\r\n    \"EAN CODE\",\r\n    \"PRODUCT NAME\",\r\n    \"QTY\",\r\n    \"MRP SALES\",\r\n    \"NET(DISCOUNTED SALES)\",\r\n    \"LOCATION\"\r\n  ]\r\n\r\n  const downloadFile = () => {\r\n    let dataVal = []\r\n    originalOrdersData.forEach((order) => {\r\n      if([\"CANCELLED\", \"REFUNDED\", \"FAILED\"].includes(order.orderStatus)){\r\n        return\r\n      }\r\n      order.orderDetails.forEach(product => {\r\n         dataVal.push({\r\n          \"PARTNER\": \"WEBSITE\",\r\n          \"DATE\": moment(order.placedAt).format(\"DD/MM/YYYY\"),\r\n          \"EAN CODE\": product.hsnNumber,\r\n          \"PRODUCT NAME\": product.productName + \" \" + Object.values(product.attributeCombination),\r\n          \"QTY\": product.count,\r\n          \"MRP SALES\": product.productPrice * product.count,\r\n          \"NET(DISCOUNTED SALES)\": product.productDiscountPrice * product.count,\r\n          \"LOCATION\": order.addressDetails.shippingAddress.city\r\n         })\r\n      })\r\n    })\r\n    setCSVData(dataVal)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {pending ? <Loader /> : null}\r\n      <div className=\"container ordersContainer\">\r\n        <div className=\"header my-4 title fs-3\">Orders</div>\r\n        <div className=\"row mb-5 gy-5\">\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>TODAY'S</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{todayStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{todayStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CURRENT MONTH</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{currentMonthStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{currentMonthStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>LAST MONTH</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{lastMonthStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{lastMonthStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>THIS YEAR</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{currentYearStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{currentYearStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CUSTOM</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{customStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{customStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CUSTOMER</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>NEW</td>\r\n                  <td className='w-50'>EXISTING</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{newCustomer}</td>\r\n                  <td className='w-50'>{existingCustomer}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{Math.round(newCustomer / customerCount * 100) || 0}%</td>\r\n                  <td className='w-50'>{Math.round(existingCustomer / customerCount * 100) || 0}%</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CUSTOMER COUNT</th>\r\n              </tr>\r\n                <tr>\r\n                  <td colSpan={2} style={{width:\"100%\",textAlign:\"center\"}}>{customerCount}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className='d-flex align-items-center justify-content-between'>\r\n          <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\r\n            <Select\r\n              displayEmpty\r\n              value={action}\r\n              onChange={handleBulkStatusChange}\r\n              input={<OutlinedInput />}\r\n              renderValue={(selected) => {\r\n                if (!selected) {\r\n                  return <em>Bulk actions</em>;\r\n                }\r\n                return selected;\r\n              }}\r\n              MenuProps={MenuProps}\r\n              inputProps={{ 'aria-label': 'Without label' }}\r\n            >\r\n              {actions.map((item) => (\r\n                <MenuItem\r\n                  key={item.id}\r\n                  value={item.value}\r\n                >\r\n                  {item.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <div className='d-flex align-items-center' style={{gap:\"0 0.75rem\"}}>\r\n            <DatePickerElement onChangeDateRange={onChangeDateRange} />\r\n            <FormControl sx={{ width: 300, mt: 3 }}>\r\n              <Select\r\n                displayEmpty\r\n                value={selectedOrderStatus}\r\n                onChange={handleFilterChange}\r\n                input={<OutlinedInput />}\r\n                renderValue={(selected) => {\r\n                  if (!selected) {\r\n                    return <em>Filters</em>;\r\n                  }\r\n                  return selected;\r\n                }}\r\n                MenuProps={MenuProps}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n              >\r\n                {orderStatusFilters.map((item) => (\r\n                  <MenuItem\r\n                    key={item.id}\r\n                    value={item.value}\r\n                  >\r\n                    {item.value}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <form className={`nosubmit`} onSubmit={(e) => { e.preventDefault(); }}>\r\n              <input className=\"nosubmit\" type=\"search\" placeholder=\"Search\" onChange={(e) => onSearch(e.target.value)} />\r\n            </form>\r\n            <CSVLink\r\n            data={csvData}\r\n            filename=\"orders.csv\"\r\n            headers={headers}\r\n            onClick={downloadFile}\r\n            asyncOnClick={true}\r\n            style={{\r\n              display: \"inline\",\r\n              // height: \"fit-content\",\r\n              // marginRight: \"8px\",\r\n              marginTop: \"0px\",\r\n              textDecoration:\"none\"\r\n            }}\r\n            >\r\n            <button className=\"btn ordersDownload\">Download</button>\r\n            </CSVLink>\r\n          </div>\r\n        </div>\r\n        <Table className='my-4'\r\n          height={300}\r\n          id=\"table\"\r\n          bordered\r\n          loading={loading}\r\n          data={tableData}\r\n          sortColumn={sortColumn}\r\n          sortType={sortType}\r\n          onSortColumn={handleSortColumn}>\r\n          <Column width={100} align=\"center\">\r\n            <HeaderCell style={{ padding: 0 }}>\r\n              <div style={{ lineHeight: '40px' }}>\r\n                <Checkbox\r\n                  inline\r\n                  checked={checked}\r\n                  indeterminate={indeterminate}\r\n                  onChange={handleCheckAll}\r\n                />\r\n              </div>\r\n            </HeaderCell>\r\n            <CheckCell dataKey=\"id\" checkedKeys={checkedKeys} onChange={handleCheck} />\r\n          </Column>\r\n          <Column align=\"center\" sortable resizable>\r\n            <HeaderCell>Order No.</HeaderCell>\r\n            <Cell dataKey=\"orderNo\" />\r\n          </Column>\r\n          <Column align=\"center\" sortable resizable>\r\n            <HeaderCell>Shiprocket Order No.</HeaderCell>\r\n            <Cell dataKey=\"shiprocketOrderNo\" />\r\n          </Column>\r\n          <Column align=\"center\" sortable resizable>\r\n            <HeaderCell>Name</HeaderCell>\r\n            <Cell dataKey=\"name\" />\r\n          </Column>\r\n          <Column align=\"center\" resizable>\r\n            <HeaderCell></HeaderCell>\r\n            <Cell dataKey=\"id\">\r\n              {rowData =>\r\n                <svg onClick={()=>navigate(`/view-order/${rowData.id}`)} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-eye-fill\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z\" />\r\n                  <path d=\"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z\" />\r\n                </svg>}\r\n            </Cell>\r\n          </Column>\r\n          <Column width={100} sortable resizable>\r\n            <HeaderCell>Purchase No.</HeaderCell>\r\n            <Cell dataKey=\"purchaseNo\" />\r\n          </Column>\r\n          <Column width={100} sortable resizable>\r\n            <HeaderCell>City</HeaderCell>\r\n            <Cell dataKey=\"city\" />\r\n          </Column>\r\n          <Column width={300} sortable resizable>\r\n            <HeaderCell>Date</HeaderCell>\r\n            <Cell dataKey=\"date\" />\r\n          </Column>\r\n          <Column width={235} sortable resizable>\r\n            <HeaderCell>Status</HeaderCell>\r\n            <StatusCell style={{ padding: '10px 0' }} dataKey=\"status\">\r\n              {/* {rowData => <Progress percent={rowData.progress} showInfo={false} />} */}\r\n            </StatusCell>\r\n          </Column>\r\n          <Column width={300} sortable resizable>\r\n            <HeaderCell>Additional Details</HeaderCell>\r\n            <Cell style={{ padding: '10px 0' }} dataKey=\"additionalDetails\">\r\n              {rowData => Object.entries(rowData.additionalDetails || {}).map(([key, value], index) => (\r\n                <li key={index}>\r\n                  <strong>{key}:</strong> {value.toString()}\r\n                </li>\r\n              ))}\r\n            </Cell>\r\n          </Column>\r\n          <Column width={300} sortable resizable>\r\n            <HeaderCell>Total</HeaderCell>\r\n            <Cell style={{ padding: '10px 0' }} dataKey=\"total\">\r\n              {rowData => <div>&#8377; {rowData.total}</div>}\r\n            </Cell>\r\n          </Column>\r\n        </Table>\r\n        <div style={{ padding: 20 }}>\r\n          <Pagination\r\n            prev\r\n            next\r\n            first\r\n            last\r\n            ellipsis\r\n            boundaryLinks\r\n            maxButtons={5}\r\n            size=\"xs\"\r\n            layout={['total', '-', 'limit', '|', 'pager', 'skip']}\r\n            total={getData().length}\r\n            limitOptions={[10, 30, 50]}\r\n            limit={limit}\r\n            activePage={page}\r\n            onChangePage={setPage}\r\n            onChangeLimit={handleChangeLimit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductOrders;"],"names":["constructor","baseURL","_initializeResponseInterceptor","this","instance","interceptors","response","use","_handleResponse","_handleError","data","async","config","_ref","Promise","resolve","axios","Axios","HttpClient","super","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","sessionStorage","getItem","callApi","url","options","method","header","body","undefined","onUploadProgress","MySwal","withReactContent","Swal","title","message","type","fire","_jsx","children","html","icon","Column","ColumnGroup","HeaderCell","Cell","Table","DatePicker","styled","_templateObject","_taggedTemplateLiteral","props","onChangeDateRange","todaySampleDate","Date","setHours","startDate","endDate","pickerRef","useRef","useEffect","current","setStartDate","setEndDate","className","DateRangePicker","ref","initialSettings","locale","format","showDropdowns","opens","onApply","event","selectedDateRangeArr","target","value","split","map","date","readOnly","ProductOrders","navigate","useNavigate","checkedKeys","setCheckedKeys","useState","setData","action","setAction","selectedOrderStatus","setSelectedOrderStatus","copyData","setCopyData","loading","setLoading","sortColumn","setSortColumn","sortType","setSortType","limit","setLimit","page","setPage","csvData","setCSVData","originalOrdersData","setOriginalOrdersData","todayStats","setTodayStats","totalOrders","currentMonthStats","setCurrentMonthStats","lastMonthStats","setLastMonthStats","currentYearStats","setCurrentYearStats","customStats","setCustomStats","customerCount","setCustomerCount","newCustomer","setNewCustomer","existingCustomer","setExistingCustomer","pending","setPending","finalDate","setFinalDate","checked","indeterminate","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","length","CheckCell","rowData","onChange","dataKey","padding","lineHeight","Checkbox","inline","some","item","StatusCell","_ref2","background","concat","status","borderRadius","marginTop","overflow","display","handleData","useCallback","result","moment","startOf","valueOf","endOf","_result$data","_result$data2","_result$data3","_result$data4","_result$data5","_result$data6","_result$data7","_result$data8","_result$data9","ordersArr","newCustomersArr","existingCustomersArr","forEach","order","purchaseCount","push","userId","id","orderNo","orderToken","shiprocketOrderNo","name","addressDetails","shippingAddress","firstName","lastName","placedAt","orderStatus","city","purchaseNo","total","parseInt","orderTotalAmount","additionalDetails","thisYearStats","Set","size","onSearch","key","temp","filter","e","_e$name","toLocaleLowerCase","includes","trim","getData","sort","a","b","x","y","charCodeAt","tableData","v","i","start","_jsxs","_Fragment","Loader","colSpan","Math","round","textAlign","FormControl","sx","m","mt","Select","displayEmpty","ids","JSON","parse","stringify","triggerSwalAlert","input","OutlinedInput","renderValue","selected","inputProps","label","MenuItem","gap","DatePickerElement","onSubmit","preventDefault","placeholder","CSVLink","filename","onClick","downloadFile","dataVal","orderDetails","product","hsnNumber","productName","Object","values","attributeCombination","count","productPrice","productDiscountPrice","asyncOnClick","textDecoration","height","bordered","onSortColumn","handleSortColumn","setTimeout","align","handleCheckAll","keys","handleCheck","sortable","resizable","xmlns","fill","viewBox","d","entries","_ref3","index","toString","Pagination","prev","next","first","last","ellipsis","boundaryLinks","maxButtons","layout","limitOptions","activePage","onChangePage","onChangeLimit"],"sourceRoot":""}