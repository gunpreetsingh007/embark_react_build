{"version":3,"file":"static/js/9228.87675977.chunk.js","mappings":"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","sources":["api/index.js","api/Axios.js","helpers/trackUserEvent.js","helpers/triggerSwalAlert.js","screens/SignUp/validation.js","screens/SignUp/index.jsx","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js"],"sourcesContent":["import axios from 'axios';\nclass HttpClient {\n\n  constructor(baseURL) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  _handleResponse = (data) => data;\n\n  _handleError = async ({ response, config }) => {\n    const originalRequest = config;\n    // if (response?.status === 401 && !originalRequest._retry) {\n    //   // call refresh token\n    //   localStorage.clear();\n    //   sessionStorage.clear()\n    //   store.dispatch(logout())\n    //   window.location.href = '/sign-in'\n    // }\n    return Promise.resolve(response);\n  };\n}\n\nexport default HttpClient;","import HttpClient from \"./index\";\nimport store from \"../store\";\nexport default class Axios extends HttpClient {\n  constructor() {\n    super(process.env.REACT_APP_BASE_URL);\n    this._initializeRequestInterceptor();\n  }\n\n\n  _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest);\n  };\n\n  _handleRequest = async (config) => {\n    let token = store.getState().user.currentUser.accessToken\n    if (token)\n    config.headers.Authorization = token;\n    if(sessionStorage.getItem('session-id'))\n    config.headers['session-id'] = sessionStorage.getItem('session-id');\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\n    return config;\n  };\n\n  callApi(url, options) {\n    return this.instance({\n      method: options.method,\n      url: url,\n      headers: options?.header ? options?.header : {},\n      data: options?.body ? options?.body : undefined,\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\n    });\n  };\n}\n","import Axios from \"../api/Axios\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst trackUserEvent = (event) => {\r\n    if (sessionStorage.getItem(\"session-id\") && isValidUUID(sessionStorage.getItem(\"session-id\"))) {\r\n        axios.callApi(\"/session/trackUserEvent\", {\r\n            method: \"POST\",\r\n            body: {\r\n                event\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        sessionStorage.removeItem('session-id');\r\n        const keyword = 'utm'; // The keyword you want to match\r\n        const matchingParams = getParamsMatchingKeyword(keyword);\r\n        let options = {\r\n            method: \"POST\",\r\n            body: {\r\n                additionalDetails: matchingParams,\r\n                event\r\n            }\r\n        }\r\n        axios.callApi(\"/session/createNewSession\", options).then((result) => {\r\n            sessionStorage.setItem('session-id', result.data.data)\r\n        })\r\n    }\r\n}\r\n\r\nfunction getParamsMatchingKeyword(keyword) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const matchingParams = {};\r\n\r\n    for (const [key, value] of params) {\r\n        if (key.includes(keyword)) {\r\n            matchingParams[key] = value;\r\n        }\r\n    }\r\n\r\n    return matchingParams;\r\n}\r\n\r\nfunction isValidUUID(uuid) {\r\n    const uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\r\n    return uuidPattern.test(uuid);\r\n}\r\n\r\nexport default trackUserEvent","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\n\nconst triggerSwalAlert = async (title, message, type)=>{\n    return MySwal.fire({\n      title: <strong>{title}</strong>,\n      html: <p>{message}</p>,\n      icon: type\n    })\n}\n\nexport default triggerSwalAlert","export const validation = (data) => {\n  const { firstName, lastName, email, phoneNumber, password } = data;\n  var errorVal = {\n    firstName: false,\n    lastName: false,\n    password: false,\n    email: false,\n    phoneNumber: false,\n    message: \"\"\n  }\n\n  if (!firstName) {\n    errorVal[\"firstName\"] = true\n  }\n  if (!lastName) {\n    errorVal[\"lastName\"] = true\n  }\n  if (!email) {\n    errorVal[\"email\"] = true\n  }\n  if (email && !(/\\S+@\\S+\\.\\S+/.test(email))) {\n    errorVal[\"email\"] = true\n    errorVal[\"message\"] = \"invalid email\"\n  }\n  if (!phoneNumber) {\n    errorVal[\"phoneNumber\"] = true\n  }\n  if (phoneNumber && phoneNumber.length != 10) {\n    errorVal[\"phoneNumber\"] = true\n  }\n  if (!password) {\n    errorVal[\"password\"] = true\n  }\n  return errorVal\n};","import { useEffect, useState } from 'react';\nimport \"./index.css\"\nimport { validation } from './validation'\nimport Axios from \"../../api/Axios\";\nimport { login } from '../../store/user';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport triggerSwalAlert from '../../helpers/triggerSwalAlert';\nimport Loader from '../../components/Loader';\nimport jwt_decode from 'jwt-decode'\nimport trackUserEvent from '../../helpers/trackUserEvent';\n\n\nconst axios = new Axios();\n\nfunction SignUp() {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [pending,setPending] = useState(false)\n  const google = window.google;\n\n\n  const [error, setError] = useState({\n    firstName: false,\n    lastName: false,\n    password: false,\n    email: false,\n    // username: false,\n    phoneNumber: false,\n    message: \"\"\n  });\n\n  const [data, setData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    // username: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  // const [isUsernameTaken, setIsUsernameTaken] = useState(false)\n\n  const onChange = (value, target) => {\n    setData({\n      ...data,\n      [target]: value,\n    });\n    if (error.email === true || error.password === true || error.firstName === true || error.lastName === true || error.phoneNumber === true) {\n      setError({\n        ...error,\n        [target]: false\n      })\n    }\n  };\n\n  useEffect(() => {\n    trackUserEvent('Sign Up')\n  },[])\n\n\n  // const checkUsername = async () => {\n  //   const options = {\n  //     method: \"GET\",\n  //   }\n  //   if (data.username) {\n  //     const result = await axios.callApi(`auth/checkByUsername/${data.username}`, options)\n  //     if (result.data.usernameExists) {\n  //       setError({ ...error, username: true })\n  //       setIsUsernameTaken(true)\n  //     }\n  //     else {\n  //       setError({ ...error, username: false })\n  //       setIsUsernameTaken(false)\n  //     }\n  //   }\n  //   else {\n  //     setError({ ...error, username: false })\n  //     setIsUsernameTaken(false)\n  //   }\n\n  // }\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      const valid = validation(data)\n      // data.username && !isUsernameTaken ? setError(valid) : setError({ ...valid, username: true })\n      setError(valid)\n      if (valid.phoneNumber || valid.firstName || valid.lastName || valid.email || valid.password) {\n        return\n      }\n      const options = {\n        method: \"POST\",\n        body: data\n      }\n      setPending(true)\n      const result = await axios.callApi(`auth/createUser`, options)\n\n      if (result.status == 200) {\n        setPending(false)\n        dispatch(login({\n          userId: result.data.id,\n          accessToken: result.data.accessToken,\n          // username: result.data.username,\n          role: result.data.role,\n          firstName: result.data.firstName,\n          lastName: result.data.lastName,\n          email: result.data.email,\n          contact: result.data.phoneNumber\n        }))\n\n        navigate(\"/\")\n      }\n      else{\n        setPending(false)\n        triggerSwalAlert(\"Error\", result.data.errorMessage || \"Something went wrong\", \"error\")\n      }\n\n    }\n    catch (error) {\n      console.error(\"Something went wrong\")\n    }\n  }\n\n  const handleGoogleSignIn = async (res) => {\n    const googleSignInCredential = jwt_decode(res.credential)\n\n    const options = {\n      method: \"POST\",\n      body: googleSignInCredential\n    }\n    try {\n      setPending(true)\n      const result = await axios.callApi(`auth/loginWithGoogle`, options)\n\n      if (result.status == 200) {\n        setPending(false)\n        dispatch(login({\n          userId: result.data.id,\n          accessToken: result.data.accessToken,\n          role: result.data.role,\n          firstName: result.data.firstName,\n          lastName: result.data.lastName,\n          email: result.data.email,\n          contact: result.data.phoneNumber\n        }))\n\n      }\n      else {\n        setPending(false)\n        triggerSwalAlert(\"Error\", result.data.errorMessage || \"Something went wrong\", \"error\")\n      }\n    }\n    catch (error) {\n      console.error(\"Something went wrong\")\n    }\n  }\n\n  useEffect(() => {\n\n    google.accounts.id.initialize({\n      client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n      callback: handleGoogleSignIn\n    });\n\n    google.accounts.id.renderButton(\n      document.getElementById(\"SignInWithGoogle\"),\n      { theme: \"outline\", size: 'large' }\n    )\n  }, [])\n\n  // useEffect(() => {\n  //   const typingTimer = setTimeout(() => {\n  //     checkUsername(data.username)\n  //   }, 1000);\n\n  //   return () => {\n  //     clearTimeout(typingTimer)\n  //   }\n  // }, [data.username])\n\n\n  return (\n    <>\n    {pending ? <Loader/> : null}\n    <div className='signUp-wrapper bg-dark d-flex align-item-center justify-content-center w-100'>\n      <div className='signUp'>\n        <h2 className='mb-3'>Sign Up</h2>\n        <form>\n          <div className='form-group mb-2'>\n            <label htmlFor=\"firstName\" className='form-label'>First Name</label>\n            <input type=\"text\" id='firstName' className={`form-control ${error.firstName && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'firstName')} />\n            {error.firstName && <div className='error'>\n              Please enter your first name\n            </div>}\n          </div>\n          <div className='form-group mb-2'>\n            <label htmlFor=\"lastName\" className='form-label'>Last Name</label>\n            <input type=\"text\" id='lastName' className={`form-control ${error.lastName && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'lastName')} />\n            {error.lastName && <div className='error'>\n              Please enter your last name\n            </div>}\n          </div>\n          {/* <div className='form-group mb-2'>\n            <label htmlFor=\"username\" className='form-label'>Username</label>\n            <input type=\"text\" id='username' className={`form-control ${error.username && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'username')} />\n            {error.username && <div className='error'>\n              {isUsernameTaken ? \"Username already use\" : \"Please enter your username\"}\n            </div>}\n          </div> */}\n          <div className='form-group mb-2'>\n            <label htmlFor=\"email\" className='form-label'>Email Address</label>\n            <input type=\"email\" id='email' className={`form-control ${error.email && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'email')} />\n            {error.email && <div className='error'>\n              {error.message ? \"Please enter a valid email\" : \"Please enter your email\"}\n            </div>}\n          </div>\n          <div className='form-group mb-2'>\n            <label htmlFor=\"phoneNumber\" className='form-label'>Phone Number</label>\n            <input type=\"number\" id='phoneNumber' className={`form-control ${error.phoneNumber && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'phoneNumber')} />\n            {error.phoneNumber && <div className='error'>\n              Please enter valid phoneNumber number\n            </div>}\n          </div>\n          <div className='form-group mb-2'>\n            <label htmlFor=\"password\" className='form-label'>Password</label>\n            <input type=\"password\" id='password' className={`form-control ${error.password && \"errorInputField\"}`} required onChange={e => onChange(e.target.value, 'password')} />\n            {error.password && <div className='error'>\n              Please enter your password\n            </div>}\n          </div>\n          <button className='btn btn-dark w-100 mt-2' onClick={e => handleSubmit(e)}>SIGN UP</button>\n          <div className=\"text-center mt-2\">\n            <p>Already a member? <Link to={\"/sign-in\"}>Sign In</Link></p>\n          </div>\n          <span style={{ display: 'block', textAlign: \"center\", margin:'0.7rem 0' }}> OR  </span>\n          <div id=\"SignInWithGoogle\" style={{display:'flex',justifyContent:\"center\"}}></div>\n        </form>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default SignUp;","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"],"names":["constructor","baseURL","_initializeResponseInterceptor","this","instance","interceptors","response","use","_handleResponse","_handleError","data","async","config","_ref","Promise","resolve","axios","Axios","HttpClient","super","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","sessionStorage","getItem","callApi","url","options","method","header","body","undefined","onUploadProgress","event","uuid","test","removeItem","matchingParams","keyword","params","URLSearchParams","window","location","search","key","value","includes","getParamsMatchingKeyword","additionalDetails","then","result","setItem","MySwal","withReactContent","Swal","title","message","type","fire","_jsx","children","html","icon","validation","firstName","lastName","email","phoneNumber","password","errorVal","length","navigate","useNavigate","dispatch","useDispatch","pending","setPending","useState","google","error","setError","setData","onChange","target","useEffect","trackUserEvent","handleGoogleSignIn","jwt_decode","res","credential","status","login","userId","id","role","contact","triggerSwalAlert","errorMessage","console","accounts","initialize","client_id","callback","renderButton","document","getElementById","theme","size","_jsxs","_Fragment","Loader","className","htmlFor","concat","required","e","onClick","preventDefault","valid","handleSubmit","Link","to","style","display","textAlign","margin","justifyContent","prototype","Error","name","r","atob","bind","t","String","replace","n","o","a","i","c","charAt","fromCharCode","indexOf","decodeURIComponent","charCodeAt","toString","toUpperCase","JSON","parse","split"],"sourceRoot":""}