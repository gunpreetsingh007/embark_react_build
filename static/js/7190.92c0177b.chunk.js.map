{"version":3,"file":"static/js/7190.92c0177b.chunk.js","mappings":"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","sources":["api/index.js","api/Axios.js","helpers/trackUserEvent.js","screens/MyAccount/editAccount.jsx","screens/MyAccount/validation.js"],"sourcesContent":["import axios from 'axios';\nclass HttpClient {\n\n  constructor(baseURL) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  _handleResponse = (data) => data;\n\n  _handleError = async ({ response, config }) => {\n    const originalRequest = config;\n    // if (response?.status === 401 && !originalRequest._retry) {\n    //   // call refresh token\n    //   localStorage.clear();\n    //   sessionStorage.clear()\n    //   store.dispatch(logout())\n    //   window.location.href = '/sign-in'\n    // }\n    return Promise.resolve(response);\n  };\n}\n\nexport default HttpClient;","import HttpClient from \"./index\";\nimport store from \"../store\";\nexport default class Axios extends HttpClient {\n  constructor() {\n    super(process.env.REACT_APP_BASE_URL);\n    this._initializeRequestInterceptor();\n  }\n\n\n  _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest);\n  };\n\n  _handleRequest = async (config) => {\n    let token = store.getState().user.currentUser.accessToken\n    if (token)\n    config.headers.Authorization = token;\n    if(sessionStorage.getItem('session-id'))\n    config.headers['session-id'] = sessionStorage.getItem('session-id');\n    // config.headers['CSRF-TOKEN'] = Cookies.get('v2');\n    return config;\n  };\n\n  callApi(url, options) {\n    return this.instance({\n      method: options.method,\n      url: url,\n      headers: options?.header ? options?.header : {},\n      data: options?.body ? options?.body : undefined,\n      onUploadProgress: options?.onUploadProgress ? options?.onUploadProgress : undefined\n    });\n  };\n}\n","import Axios from \"../api/Axios\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst trackUserEvent = (event) => {\r\n    if (sessionStorage.getItem(\"session-id\") && isValidUUID(sessionStorage.getItem(\"session-id\"))) {\r\n        axios.callApi(\"/session/trackUserEvent\", {\r\n            method: \"POST\",\r\n            body: {\r\n                event\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        sessionStorage.removeItem('session-id');\r\n        const keyword = 'utm'; // The keyword you want to match\r\n        const matchingParams = getParamsMatchingKeyword(keyword);\r\n        let options = {\r\n            method: \"POST\",\r\n            body: {\r\n                additionalDetails: matchingParams,\r\n                event\r\n            }\r\n        }\r\n        axios.callApi(\"/session/createNewSession\", options).then((result) => {\r\n            sessionStorage.setItem('session-id', result.data.data)\r\n        })\r\n    }\r\n}\r\n\r\nfunction getParamsMatchingKeyword(keyword) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const matchingParams = {};\r\n\r\n    for (const [key, value] of params) {\r\n        if (key.includes(keyword)) {\r\n            matchingParams[key] = value;\r\n        }\r\n    }\r\n\r\n    return matchingParams;\r\n}\r\n\r\nfunction isValidUUID(uuid) {\r\n    const uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\r\n    return uuidPattern.test(uuid);\r\n}\r\n\r\nexport default trackUserEvent","import { useEffect, useState } from \"react\";\nimport { editAccountValidation } from './validation'\nimport Axios from \"../../api/Axios\";\nimport { useNavigate, useOutletContext } from 'react-router-dom';\nimport trackUserEvent from \"../../helpers/trackUserEvent\";\n\nconst axios = new Axios();\n\nconst EditAccount = () => {\n\n  const navigate = useNavigate();\n  const userData = useOutletContext()\n  const [error, setError] = useState({\n    firstName: false,\n    lastName: false,\n    email: false,\n    // username: false,\n    confirmPassword: false,\n    message: \"\"\n  });\n\n  const [data, setData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    // username: \"\",\n    email: \"\",\n    currentPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n\n  // const [isUsernameTaken, setIsUsernameTaken] = useState(false)\n  // const [actualUsername, setActualUsername] = useState(\"\")\n  const onChange = (value, target) => {\n    setData({\n      ...data,\n      [target]: value,\n    });\n    if (error.email === true || error.confirmPassword === true || error.firstName === true || error.lastName === true) {\n      setError({\n        ...error,\n        [target]: false\n      })\n    }\n  };\n\n  // const checkUsername = async () => {\n  //   const options = {\n  //     method: \"GET\",\n  //   }\n  //   if (data.username) {\n  //     const result = await axios.callApi(`auth/checkByUsername/${data.username}`, options)\n  //     if (result.data.usernameExists) {\n  //       setError({ ...error, username: true })\n  //       setIsUsernameTaken(true)\n  //     }\n  //     else {\n  //       setError({ ...error, username: false })\n  //       setIsUsernameTaken(false)\n  //     }\n  //   }\n  //   else {\n  //     setError({ ...error, username: false })\n  //     setIsUsernameTaken(false)\n  //   }\n\n  // }\n\n  const getUserAccountDetails = () => {\n    setData({ ...data, ...userData })\n    // setActualUsername(userData.username)\n  }\n  \n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      const valid = editAccountValidation(data)\n      if (!(data.newPassword === data.confirmPassword)) {\n        valid[\"confirmPassword\"] = true\n      }\n      // data.username && !isUsernameTaken ? setError(valid) : setError({ ...valid, username: true })\n      setError(valid)\n      if (valid.firstName || valid.lastName || valid.email || valid.confirmPassword) {\n        return\n      }\n      const options = {\n        method: \"POST\",\n        body: data\n      }\n      const result = await axios.callApi(`user/updateUser`, options)\n      if (result.status == 200) {\n        navigate(\"/\")\n      }\n    }\n    catch (error) {\n      console.error(\"Something went wrong\")\n    }\n  }\n\n  // useEffect(() => {\n  //   const typingTimer = setTimeout(() => {\n  //     if (actualUsername != data.username.trim())\n  //       checkUsername(data.username)\n  //   }, 1000);\n\n  //   return () => {\n  //     clearTimeout(typingTimer)\n  //   }\n  // }, [data.username])\n\n  useEffect(() => {\n    getUserAccountDetails()\n  }, [userData])\n\n  useEffect(() => {\n    trackUserEvent(\"Edit Account\")\n  },[])\n\n  return (\n    <div className=\"edit-account-container container-fluid\" style={{ backgroundColor: \"white\" }}>\n      <form>\n        <div className=\"row\" style={{ marginTop: \"25px\" }}>\n          <div className='col-lg-6 col-sm-12 form-group mb-2'>\n            <label htmlFor=\"firstName\" className='form-label'>First Name</label>\n            <input type=\"text\" id='firstName' className={`form-control ${error.firstName ? \"errorInputField\" : \"\"}`} required onChange={e => onChange(e.target.value, 'firstName')} value={data.firstName} />\n            {error.firstName && <div className='error'>\n              Please enter your first name\n            </div>}\n          </div>\n          <div className='col-lg-6 col-sm-12 form-group mb-2'>\n            <label htmlFor=\"lastName\" className='form-label'>Last Name</label>\n            <input type=\"text\" id='lastName' className={`form-control ${error.lastName ? \"errorInputField\" : \"\"}`} required onChange={e => onChange(e.target.value, 'lastName')} value={data.lastName} />\n            {error.lastName && <div className='error'>\n              Please enter your last name\n            </div>}\n          </div>\n        </div>\n        {/* <div className='form-group mb-2'>\n          <label htmlFor=\"username\" className='form-label'>Username</label>\n          <input type=\"text\" id='username' className={`form-control ${error.username ? \"errorInputField\" : \"\"}`} required onChange={e => onChange(e.target.value, 'username')} value={data.username} />\n          {error.username && <div className='error'>\n            {isUsernameTaken ? \"Username already use\" : \"Please enter your username\"}\n          </div>}\n        </div>\n        <i className=\"text-style\">This will be how your name will be displayed in the account section and in reviews</i> */}\n        <div className='form-group mb-2'>\n          <label htmlFor=\"email\" className='form-label'>Email Address</label>\n          <input type=\"email\" id='email' className={`form-control ${error.email ? \"errorInputField\" : \"\"}`} required onChange={e => onChange(e.target.value, 'email')} value={data.email} />\n          {error.email && <div className='error'>\n            {error.message ? \"Please enter a valid email\" : \"Please enter your email\"}\n          </div>}\n        </div>\n        <span className=\"text-style\" style={{ margin: \"15px 0px\", display: \"inline-block\" }}>PASSWORD CHANGE</span>\n        <div className='form-group mb-2'>\n          <label htmlFor=\"current password\" className='form-label'>Current password (leave blank to leave unchanged)</label>\n          <input type=\"password\" id='current password' className={`form-control`} required onChange={e => onChange(e.target.value, 'currentPassword')} />\n          {/* {error.password && <div className='error'>\n            Please enter your password\n          </div>} */}\n        </div>\n        <div className='form-group mb-2'>\n          <label htmlFor=\"new password\" className='form-label'>New password (leave blank to leave unchanged) </label>\n          <input type=\"password\" id='new password' className={`form-control`} required onChange={e => onChange(e.target.value, 'newPassword')} />\n          {/* {error.password && <div className='error'>\n            Please enter your password\n          </div>} */}\n        </div>\n        <div className='form-group mb-2'>\n          <label htmlFor=\"confirm password\" className='form-label'>Confirm new password</label>\n          <input type=\"password\" id='confirm password' className={`form-control ${error.confirmPassword ? \"errorInputField\" : \"\"}`} required onChange={e => onChange(e.target.value, 'confirmPassword')} />\n          {error.confirmPassword && <div className='error'>\n            Passwords do not match\n          </div>}\n        </div>\n        <button className='btn btn-dark mt-5 mb-2' onClick={e => handleSubmit(e)}>SAVE CHANGES</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditAccount\n","export const editAccountValidation = (data) => {\n  const { firstName, lastName, email } = data;\n  var errorVal = {\n    firstName: false,\n    lastName: false,\n    email: false,\n    message: \"\"\n  }\n\n  if (!firstName) {\n    errorVal[\"firstName\"] = true\n  }\n  if (!lastName) {\n    errorVal[\"lastName\"] = true\n  }\n  if (!email) {\n    errorVal[\"email\"] = true\n  }\n  if (email && !(/\\S+@\\S+\\.\\S+/.test(email))) {\n    errorVal[\"email\"] = true\n    errorVal[\"message\"] = \"invalid email\"\n  }\n  return errorVal\n};\n\nexport const editAddressValidation = (data) => {\n  const { firstName, lastName, email, state, streetAddress, city, postcode, phone } = data;\n  var errorVal = {\n    firstName: false,\n    lastName: false,\n    email: false,\n    state: false,\n    streetAddress: false,\n    city: false,\n    postcode: false,\n    phone: false,\n    message: \"\"\n  }\n\n  if (!firstName) {\n    errorVal[\"firstName\"] = true\n  }\n  if (!lastName) {\n    errorVal[\"lastName\"] = true\n  }\n  if (!email) {\n    errorVal[\"email\"] = true\n  }\n  if (email && !(/\\S+@\\S+\\.\\S+/.test(email))) {\n    errorVal[\"email\"] = true\n    errorVal[\"message\"] = \"invalid email\"\n  }\n  // if (!country) {\n  //   errorVal[\"country\"] = true\n  // }\n  if (!state) {\n    errorVal[\"state\"] = true\n  }\n  if (!streetAddress) {\n    errorVal[\"streetAddress\"] = true\n  }\n  if (!city) {\n    errorVal[\"city\"] = true\n  }\n  if (!postcode) {\n    errorVal[\"postcode\"] = true\n  }\n  if (!phone) {\n    errorVal[\"phone\"] = true\n  }\n  if (phone && phone.length != 10) {\n    errorVal[\"phone\"] = true\n  }\n  return errorVal\n};"],"names":["HttpClient","_createClass","baseURL","_this","_classCallCheck","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","config","wrap","_context","prev","next","abrupt","Promise","resolve","stop","_x","apply","arguments","this","axios","Axios","_HttpClient","_inherits","_super","_createSuper","call","process","_initializeRequestInterceptor","request","_handleRequest","token","store","user","currentUser","accessToken","headers","Authorization","sessionStorage","getItem","key","value","url","options","method","header","body","undefined","onUploadProgress","event","uuid","test","callApi","removeItem","matchingParams","keyword","_step","params","URLSearchParams","window","location","search","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","includes","err","e","f","getParamsMatchingKeyword","additionalDetails","then","result","setItem","navigate","useNavigate","userData","useOutletContext","_useState","useState","firstName","lastName","email","confirmPassword","message","_useState2","error","setError","_useState3","currentPassword","newPassword","_useState4","setData","onChange","target","_objectSpread","_defineProperty","handleSubmit","valid","preventDefault","editAccountValidation","sent","status","t0","console","useEffect","trackUserEvent","_jsx","className","style","backgroundColor","children","_jsxs","marginTop","htmlFor","type","id","concat","required","margin","display","onClick","errorVal","editAddressValidation","state","streetAddress","city","postcode","phone","length"],"sourceRoot":""}