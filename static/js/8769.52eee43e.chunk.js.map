{"version":3,"file":"static/js/8769.52eee43e.chunk.js","mappings":"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","sources":["helpers/trackUserEvent.js","screens/MyAccount/addresses.jsx"],"sourcesContent":["import Axios from \"../api/Axios\";\r\n\r\nconst axios = new Axios();\r\n\r\nconst trackUserEvent = (event) => {\r\n    if (sessionStorage.getItem(\"session-id\") && isValidUUID(sessionStorage.getItem(\"session-id\"))) {\r\n        axios.callApi(\"/session/trackUserEvent\", {\r\n            method: \"POST\",\r\n            body: {\r\n                event\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        sessionStorage.removeItem('session-id');\r\n        const keyword = 'utm'; // The keyword you want to match\r\n        const matchingParams = getParamsMatchingKeyword(keyword);\r\n        let options = {\r\n            method: \"POST\",\r\n            body: {\r\n                additionalDetails: matchingParams,\r\n                event\r\n            }\r\n        }\r\n        axios.callApi(\"/session/createNewSession\", options).then((result) => {\r\n            sessionStorage.setItem('session-id', result.data.data)\r\n        })\r\n    }\r\n}\r\n\r\nfunction getParamsMatchingKeyword(keyword) {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const matchingParams = {};\r\n\r\n    for (const [key, value] of params) {\r\n        if (key.includes(keyword)) {\r\n            matchingParams[key] = value;\r\n        }\r\n    }\r\n\r\n    return matchingParams;\r\n}\r\n\r\nfunction isValidUUID(uuid) {\r\n    const uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\r\n    return uuidPattern.test(uuid);\r\n}\r\n\r\nexport default trackUserEvent","import \"./index.css\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport Axios from \"../../api/Axios\";\nimport trackUserEvent from \"../../helpers/trackUserEvent\";\n\nconst axios = new Axios();\n\nconst Addresses = () => {\n\n  const [billingAddress, setBillingAddress] = useState([])\n  const [shippingAddress, setShippingAddress] = useState([])\n  const [noAddressAvailable, setNoAddressAvailable] = useState(false)\n  const navigate = useNavigate();\n\n  const getUserAddressDetails = async () => {\n    const options = {\n      method: \"GET\"\n    }\n    const result = await axios.callApi(`user/getAddresses`, options)\n    if (result.status == 200) {\n      setBillingAddress(result?.data?.data?.filter(address => address.addressType == \"billing\"))\n      setShippingAddress(result?.data?.data?.filter(address => address.addressType == \"shipping\"))\n      if(result?.data?.data.length == 0){\n        setNoAddressAvailable(true)\n      }\n    }\n  }\n\n  const handleAddAddressClick = (data) => {\n    navigate(`/my-account/addresses/${data}-address${noAddressAvailable ? \"?firstAddress=true\" : \"\"}`)\n  }\n\n  useEffect(() => {\n    getUserAddressDetails()\n  }, [])\n\n  useEffect(() => {\n    trackUserEvent(\"View Addresses\")\n  },[])\n\n  return (\n    <div style={{ backgroundColor: \"white\" }}>\n      <span className=\"text-style\">\n        The following addresses will be used on the checkout page by default.\n      </span>\n      <div className=\"container-fluid\" style={{ backgroundColor: \"white\" }}>\n        <div className=\"row\" style={{ marginTop: \"25px\" }}>\n\n          <div className=\"col-sm-12 col-lg-6 text-style\" >\n            <span style={{ fontSize: \"30px\" }}>Billing address</span><br />\n           {billingAddress.map((item)=>{\n            return (\n              <div className=\"card p-2 mt-2\">\n              <div className=\"text-bold-md\">\n                <i className=\"fw-bold\">{`${item?.firstName} ${item?.lastName}`}</i><br />\n                <i>{`${item?.streetAddress}`}</i><br />\n                {item?.landmark && <><i>{`${item?.landmark}`}</i><br /></>}\n                <i>{`${item?.city} ${item?.pincode}`}</i><br />\n                <i>{`${item?.state}`}</i>\n                </div>\n                <br />\n               <Link className=\"inline-block\" to={`/my-account/addresses/billing-address?id=${item.id}`} style={{ textDecoration: \"none\", color: \"#777777\" }}>{\"Edit\"}</Link>\n              </div>\n            )\n            })}\n          <button className=\"btn btn-dark mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#addAddress\" onClick={()=>handleAddAddressClick('billing')}>Add New Address</button>\n          </div>\n\n          <div className=\"col text-style\"  >\n            <span style={{ fontSize: \"30px\" }}>Shipping address</span><br />\n            {shippingAddress.map((item)=>{\n            return (\n              <div className=\"card p-2 mt-2\">\n              <div className=\"text-bold-md\">\n                <i className=\"fw-bold\">{`${item?.firstName} ${item?.lastName}`}</i><br />\n                <i>{`${item?.streetAddress}`}</i><br />\n                {item?.landmark && <><i>{`${item?.landmark}`}</i><br /></>}\n                <i>{`${item?.city} ${item?.pincode}`}</i><br />\n                <i>{`${item?.state}`}</i>\n                </div>\n                <br />\n               <Link className=\"d-inline\" to={`/my-account/addresses/shipping-address?id=${item.id}`} style={{ textDecoration: \"none\", color: \"#777777\" }}>{\"Edit\"}</Link>\n              </div>\n            )\n            })}\n            <button className=\"btn btn-dark mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#addAddress\" onClick={()=>handleAddAddressClick('shipping')}>Add New Address</button>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Addresses\n"],"names":["axios","Axios","event","sessionStorage","getItem","uuid","test","callApi","method","body","removeItem","matchingParams","keyword","params","URLSearchParams","window","location","search","key","value","includes","getParamsMatchingKeyword","options","additionalDetails","then","result","setItem","data","Addresses","billingAddress","setBillingAddress","useState","shippingAddress","setShippingAddress","noAddressAvailable","setNoAddressAvailable","navigate","useNavigate","handleAddAddressClick","concat","useEffect","async","_result$data","_result$data$data","_result$data2","_result$data2$data","_result$data3","status","filter","address","addressType","length","getUserAddressDetails","trackUserEvent","_jsxs","style","backgroundColor","children","_jsx","className","marginTop","fontSize","map","item","firstName","lastName","streetAddress","landmark","_Fragment","city","pincode","state","Link","to","id","textDecoration","color","onClick"],"sourceRoot":""}