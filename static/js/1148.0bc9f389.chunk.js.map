{"version":3,"file":"static/js/1148.0bc9f389.chunk.js","mappings":"mPAaA,MAAMA,EAAQ,IAAIC,EAAAA,EACZC,EAASC,IAAiBC,KAEhC,UAAgBC,IACd,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,EAAU,UAAEC,GAAcN,GAC3BO,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,MACnCC,GAAiBC,EAAAA,EAAAA,cAAYC,UACjC,IAGIC,QAAelB,EAAMmB,QAAQ,WAHnB,CACZC,OAAQ,QAGa,OAAb,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQG,SACVf,GAASgB,EAAAA,EAAAA,IAAW,CAClBC,KAAML,EAAOM,KAAKA,KAAKD,KACvBE,OAAQP,EAAOM,KAAKA,KAAKE,GACzBC,UAAWT,EAAOM,KAAKA,KAAKG,UAC5BC,SAAUV,EAAOM,KAAKA,KAAKI,SAC3BC,MAAOX,EAAOM,KAAKA,KAAKK,MACxBC,QAASZ,EAAOM,KAAKA,KAAKO,eAE5BlB,EAAYK,EAAOM,KAAKA,KAAKD,OAG7BV,EAAY,mBACd,GACA,IAMF,IAJAmB,EAAAA,EAAAA,kBAAgB,KACdjB,GAAgB,GAChB,KAEEH,EACF,OAAQqB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAEZ,GAAe,oBAAZtB,EACNV,EAAOiC,KAAK,CACVC,KAAM,kCACNC,QAAS,CACPC,GAAI,CACFF,KAAM,KACNG,MAAO,SAIVC,MAAMD,IACL,GAAS,OAALA,QAAK,IAALA,GAAAA,EAAOE,YACT,OAAOjC,EAAS,WAClB,QAGD,IAAIE,EAAWgC,SAAS9B,GAiB3B,OAAOD,EAhBPT,EAAOiC,KAAK,CACVC,KAAM,yBACNC,QAAS,CACPC,GAAI,CACFF,KAAM,KACNG,MAAO,SAIVC,MAAMD,IACL,GAAS,OAALA,QAAK,IAALA,GAAAA,EAAOE,YACT,OAAOjC,GAAU,EACnB,GAKN,CACD,C","sources":["routes/ProtectedComponent.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  useNavigate\n} from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Axios from \"../api/Axios\";\nimport {  updateUser } from \"../store/user\";\nimport { useCallback } from \"react\";\nimport { useLayoutEffect } from \"react\";\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport Loader from \"../components/Loader\";\nimport { useState } from \"react\";\nconst axios = new Axios();\nconst MySwal = withReactContent(Swal)\n\nexport default (props) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { accessCode, Component } = props;\n  const [userRole, setUserRole] = useState(null);\n  const getCurrentUser = useCallback(async ()=>{\n    let options = {\n      method: \"GET\"\n    }\n    let result = await axios.callApi(\"/user/me\", options)\n    if (result?.status === 200) {\n      dispatch(updateUser({\n        role: result.data.data.role,\n        userId: result.data.data.id,\n        firstName: result.data.data.firstName,\n        lastName: result.data.data.lastName,\n        email: result.data.data.email,\n        contact: result.data.data.phoneNumber\n      }))\n      setUserRole(result.data.data.role)\n    }\n    else{\n      setUserRole(\"sign-in-required\")\n    }\n  },[])\n  \n  useLayoutEffect(()=>{\n    getCurrentUser()\n  },[])\n\n  if(!userRole){\n    return (<Loader/>)\n  }\n  else if(userRole == \"sign-in-required\"){\n    MySwal.fire({\n      text: \"You need to sign in to continue\",\n      buttons: {\n        OK: {\n          text: \"OK\",\n          value: \"OK\",\n        }\n      },\n    })\n      .then((value) => {\n        if (value?.isConfirmed) {\n          return navigate(\"/sign-in\")\n        }\n      });\n  }\n  else if(!accessCode.includes(userRole)){\n    MySwal.fire({\n      text: \"You are not authorized\",\n      buttons: {\n        OK: {\n          text: \"OK\",\n          value: \"OK\",\n        }\n      },\n    })\n      .then((value) => {\n        if (value?.isConfirmed) {\n          return navigate(-1)\n        }\n      });\n  }\n  else {\n    return Component\n  }\n};\n"],"names":["axios","Axios","MySwal","withReactContent","Swal","props","dispatch","useDispatch","navigate","useNavigate","accessCode","Component","userRole","setUserRole","useState","getCurrentUser","useCallback","async","result","callApi","method","status","updateUser","role","data","userId","id","firstName","lastName","email","contact","phoneNumber","useLayoutEffect","_jsx","Loader","fire","text","buttons","OK","value","then","isConfirmed","includes"],"sourceRoot":""}