{"version":3,"file":"static/js/6717.4b12ca59.chunk.js","mappings":"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","sources":["helpers/triggerSwalAlert.js","components/DateRangePicker/Style.jsx","components/DateRangePicker/index.jsx","screens/EmbarkAdmins/Orders/index.jsx"],"sourcesContent":["import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\n\nconst triggerSwalAlert = async (title, message, type)=>{\n    return MySwal.fire({\n      title: <strong>{title}</strong>,\n      html: <p>{message}</p>,\n      icon: type\n    })\n}\n\nexport default triggerSwalAlert","import styled from \"styled-components\";\n\nexport const DatePicker = styled.input`\nwidth: 236px;\nheight: 40px;\nborder: 1px solid #A6B0B9;\nborder-radius: 4px;\ncolor: #A6B0B9;\n  padding: 0.56rem 0.25rem 0.56rem 1.875rem;  \nbackground: transparent url(\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20height%3D%220.875rem%22%20width%3D%220.75rem%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22%23A6B0B9%22%20d%3D%22M0%20464c0%2026.5%2021.5%2048%2048%2048h352c26.5%200%2048-21.5%2048-48V192H0v272zm320-196c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zm0%20128c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zM192%20268c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zm0%20128c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012h-40c-6.6%200-12-5.4-12-12v-40zM64%20268c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012H76c-6.6%200-12-5.4-12-12v-40zm0%20128c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012H76c-6.6%200-12-5.4-12-12v-40zM400%2064h-48V16c0-8.8-7.2-16-16-16h-32c-8.8%200-16%207.2-16%2016v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8%200-16%207.2-16%2016v48H48C21.5%2064%200%2085.5%200%20112v48h448v-48c0-26.5-21.5-48-48-48z%22%2F%3E%3C%2Fsvg%3E\") no-repeat 10px center;\n::placeholder {\n    font: normal normal normal 16px/19px \"Proxima Nova Rg\", sans-serif;\n    letter-spacing: 0px;\n    color: #00000099;\n  }\n`","import React, { useRef, useEffect } from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport './index.css';\nimport { DatePicker } from './Style';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nconst DatePickerElement = (props) => {\n  const { onChangeDateRange } = props\n  const todaySampleDate = [new Date().setHours(0, 0, 0, 0), new Date().setHours(0, 0, 0, 0)]\n  const [startDate, endDate] = [new Date().setHours(0, 0, 0, 0), new Date().setHours(0, 0, 0, 0)]\n  const pickerRef = useRef()\n\n  useEffect(() => {\n    pickerRef.current.setStartDate(startDate ?? todaySampleDate[0])\n    pickerRef.current.setEndDate(endDate ?? todaySampleDate[1])\n\n  }, [startDate, endDate])\n\n  const applyDateRangeHandler = (event) => {\n    let selectedDateRangeArr = event.target.value.split(\" - \")\n    selectedDateRangeArr = selectedDateRangeArr.map(date => new Date(date))\n    onChangeDateRange && onChangeDateRange(selectedDateRangeArr)\n  }\n\n  return (\n    <form className=\"dateRange\">\n      <DateRangePicker\n        ref={pickerRef} initialSettings={{ locale: { format: 'MMM DD YYYY' }, showDropdowns: true, opens: 'left' }}\n        onApply={applyDateRangeHandler}>\n        <DatePicker readOnly={true} />\n      </DateRangePicker>\n\n    </form>\n  )\n\n}\n\nexport default DatePickerElement;","import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport { Table, Popover, Whisper, Checkbox, Dropdown, IconButton, Progress, Pagination } from 'rsuite';\r\nimport MoreIcon from '@rsuite/icons/legacy/More';\r\nimport \"./index.css\";\r\nimport TableComponent from '../../../components/RsuiteTable/index.jsx';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport DatePickerElement from '../../../components/DateRangePicker';\r\nimport Axios from '../../../api/Axios';\r\nimport Loader from '../../../components/Loader';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport triggerSwalAlert from '../../../helpers/triggerSwalAlert';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\n\r\nconst axios = new Axios();\r\n\r\nconst ProductOrders = () => {\r\n  const navigate = useNavigate();\r\n  const { Column, HeaderCell, Cell } = Table;\r\n  const [checkedKeys, setCheckedKeys] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [action, setAction] = useState(\"\");\r\n  const [selectedOrderStatus, setSelectedOrderStatus] = useState(\"ALL\");\r\n  const [copyData, setCopyData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sortColumn, setSortColumn] = useState();\r\n  const [sortType, setSortType] = useState();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [csvData, setCSVData] = useState([]);\r\n  const [originalOrdersData, setOriginalOrdersData] = useState([]);\r\n  const [todayStats, setTodayStats] = useState({totalOrders: 0, value: 0})\r\n  const [currentMonthStats, setCurrentMonthStats] = useState({totalOrders: 0, value: 0})\r\n  const [lastMonthStats, setLastMonthStats] = useState({totalOrders: 0, value: 0})\r\n  const [currentYearStats, setCurrentYearStats] = useState({totalOrders: 0, value: 0})\r\n  const [customStats, setCustomStats] = useState({totalOrders: 0, value: 0})\r\n  let [customerCount, setCustomerCount] = useState(0)\r\n  let [newCustomer, setNewCustomer] = useState(0)\r\n  let [existingCustomer, setExistingCustomer] = useState(0)\r\n  // const [searchKey, setSearchKey] = useState('');\r\n  const orderStatusFilters = [\r\n      {\r\n          \"id\": \"all\",\r\n          \"value\": \"ALL\"\r\n      },\r\n      {\r\n          \"id\": \"processing\",\r\n          \"value\": \"PROCESSING\"\r\n      },\r\n      {\r\n        \"id\": \"onhold\",\r\n        \"value\": \"ON HOLD\"\r\n      },\r\n      {\r\n          \"id\": \"completed\",\r\n          \"value\": \"COMPLETED\"\r\n      },\r\n      {\r\n          \"id\": \"cancelled\",\r\n          \"value\": \"CANCELLED\"\r\n      },\r\n      {\r\n          \"id\": \"refunded\",\r\n          \"value\": \"REFUNDED\"\r\n      },\r\n      {\r\n          \"id\": \"failed\",\r\n          \"value\": \"FAILED\"\r\n      }\r\n  ]\r\n  const [pending, setPending] = useState(false)\r\n  const [finalDate, setFinalDate] = useState([new Date(), new Date()])\r\n\r\n\r\n  let checked = false;\r\n  let indeterminate = false;\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (checkedKeys.length === data.length) {\r\n    checked = true;\r\n  } else if (checkedKeys.length === 0) {\r\n    checked = false;\r\n  } else if (checkedKeys.length > 0 && checkedKeys.length < data.length) {\r\n    indeterminate = true;\r\n  }\r\n\r\n  const handleCheckAll = (value, checked) => {\r\n    const keys = checked ? data.map(item => item.id) : [];\r\n    setCheckedKeys(keys);\r\n  };\r\n  const handleCheck = (value, checked) => {\r\n    const keys = checked ? [...checkedKeys, value] : checkedKeys.filter(item => item !== value);\r\n    setCheckedKeys(keys);\r\n  };\r\n\r\n  const CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\r\n    <Cell {...props} style={{ padding: 0 }}>\r\n      <div style={{ lineHeight: '46px' }}>\r\n        <Checkbox\r\n          value={rowData[dataKey]}\r\n          inline\r\n          onChange={onChange}\r\n          checked={checkedKeys.some(item => item === rowData[dataKey])}\r\n        />\r\n      </div>\r\n    </Cell>\r\n  );\r\n\r\n  const StatusCell = ({ rowData, dataKey, ...props }) => (\r\n    <Cell {...props} style={{ padding: 0 }}>\r\n      <div\r\n        style={{\r\n          background: `${rowData.status == 'COMPLETED' ? '#00ff00' : rowData.status == 'PROCESSING' ? '#FFA500' : rowData.status == 'CANCELLED' ? '#e0e0e0' : 'transparent'}`,\r\n          borderRadius: 6,\r\n          padding: \"5px 10px\",\r\n          marginTop: \"8px\",\r\n          overflow: 'hidden',\r\n          display: 'inline-block'\r\n        }}\r\n      >\r\n        <div>{rowData.status}</div>\r\n      </div>\r\n    </Cell>\r\n  );\r\n\r\n  const handleData = useCallback(async () => {\r\n    setPending(true)\r\n    const options = {\r\n      method: \"GET\"\r\n    }\r\n    const result = await axios.callApi(`order/getOrders?start=${moment(finalDate[0]).startOf(\"day\").valueOf()}&end=${moment(finalDate[1]).endOf(\"day\").valueOf()}&type=${(selectedOrderStatus != \"ALL\") ? selectedOrderStatus : \"\"}`, options)\r\n    if (result.status == 200) {\r\n      setPending(false)\r\n      let ordersArr = []\r\n      let newCustomersArr = []\r\n      let existingCustomersArr = []\r\n      result?.data?.data.forEach((order) => {\r\n        if(order.purchaseCount == 1) newCustomersArr.push(order.userId)\r\n        else existingCustomersArr.push(order.userId)\r\n        ordersArr.push({\r\n          id: order.id,\r\n          orderNo: `${order.orderToken}`,\r\n          shiprocketOrderNo: `${order.id}`,\r\n          name: `${order.addressDetails.shippingAddress.firstName} ${order.addressDetails.shippingAddress.lastName}`,\r\n          date: moment(order.placedAt).format(\"YYYY-MM-DD h:m a\"),\r\n          status: order.orderStatus,\r\n          city: order.addressDetails.shippingAddress.city,\r\n          purchaseNo: order.purchaseCount,\r\n          total: parseInt(order.orderTotalAmount),\r\n          additionalDetails: order.additionalDetails\r\n        })\r\n      })\r\n      customerCount = result?.data?.customerCount\r\n      setData(ordersArr);\r\n      setCopyData(ordersArr);\r\n      setOriginalOrdersData(result?.data?.data)\r\n      setTodayStats(result?.data?.todayStats)\r\n      setCurrentMonthStats(result?.data?.currentMonthStats)\r\n      setLastMonthStats(result?.data?.lastMonthStats)\r\n      setCurrentYearStats(result?.data?.thisYearStats)\r\n      setCustomStats(result?.data?.customStats)\r\n      setCustomerCount(result?.data?.customerCount)\r\n      newCustomer = new Set(newCustomersArr).size\r\n      existingCustomer = new Set(existingCustomersArr).size\r\n      setNewCustomer(newCustomer)\r\n      setExistingCustomer(existingCustomer)\r\n    }\r\n    else {\r\n      setPending(false)\r\n    }\r\n  }, [finalDate, selectedOrderStatus])\r\n\r\n  // const setFiltersArray = (orders)=>{\r\n  //   let filtersValuesCount = [{all: 0}, {processing: 0}, {completed: 0}, {cancelled: 0}, {refunded: 0}, {failed: 0}]\r\n\r\n  //   orders.forEach(order=>{\r\n  //     filtersValuesCount[0].all += 1\r\n  //     switch(order.orderStatus){\r\n  //       case \"PROCESSING\":\r\n  //         filtersValuesCount[1].processing += 1\r\n  //         break \r\n  //       case \"COMPLETED\":\r\n  //         filtersValuesCount[2].completed += 1\r\n  //         break \r\n  //       case \"CANCELLED\":\r\n  //         filtersValuesCount[3].cancelled += 1\r\n  //         break \r\n  //       case \"REFUNDED\":\r\n  //         filtersValuesCount[4].refunded += 1\r\n  //         break \r\n  //       case \"FAILED\":\r\n  //         filtersValuesCount[5].failed += 1\r\n  //         break\r\n  //       default:\r\n  //         break\r\n  //     }\r\n  //   })\r\n  //   let filtersArr = filtersValuesCount.map(item => {\r\n  //     return {\r\n  //       \"id\": Object.keys(item)[0],\r\n  //       \"value\": `${Object.keys(item)[0].toUpperCase()} (${Object.values(item)[0]})`\r\n  //     }\r\n  //   })\r\n  //   setOrderStatusFilters(filtersArr)\r\n  //   return filtersArr\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleData()\r\n  }, [finalDate, selectedOrderStatus])\r\n\r\n  const handleBulkStatusChange = async (event) => {\r\n    if(checkedKeys.length == 0) return\r\n    const { target: { value } } = event;\r\n    setPending(true)\r\n    setAction(value);\r\n    let options = {\r\n        method: \"POST\",\r\n        body: {\r\n            status: value,\r\n            ids: checkedKeys\r\n        }\r\n    }\r\n    let result = await axios.callApi(\"/order/bulkUpdateOrderStatus\", options);\r\n    if(result.status == 200){\r\n        setPending(false)\r\n        let temp = JSON.parse(JSON.stringify(copyData))\r\n        temp.map(item=> {\r\n          if(checkedKeys.includes(item.id)){\r\n            item.status = value\r\n          }\r\n        })\r\n        setData(temp);\r\n        setCopyData(temp);\r\n        triggerSwalAlert(\"Success\", \"Status Updated Successfully\", \"success\")\r\n    }\r\n    else{\r\n        setPending(false)\r\n        triggerSwalAlert(\"Error\", \"Error while updating the status of order\", \"error\")\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    const {target: { value }} = event;\r\n    setSelectedOrderStatus(value)\r\n  //   let selectedFilter = selectedOrderStatus.split(' ')[0];\r\n  //  let filteredData = copyData.filter((item)=> item.status == selectedFilter)\r\n  //  if(searchKey.length !== 0 && selectedFilter.toLowerCase() !== 'all'){\r\n  //   let newFilteredData = filteredData.filter(\r\n  //       (e) =>\r\n  //         e?.name\r\n  //           ?.toLocaleLowerCase()\r\n  //           .includes(searchKey.trim().toLocaleLowerCase())\r\n  //     );\r\n  //     setData(newFilteredData)\r\n  //     setBackup(filteredData)\r\n  //  }else{\r\n  //   setData(filteredData)\r\n  //   setBackup(filteredData)\r\n  //  }\r\n  //  if(selectedFilter.toLowerCase() == 'all'){\r\n  //      if(searchKey.length !== 0){\r\n  //   let newFilteredData = copyData.filter(\r\n  //       (e) =>\r\n  //         e?.name\r\n  //           ?.toLocaleLowerCase()\r\n  //           .includes(searchKey.trim().toLocaleLowerCase())\r\n  //     );\r\n  //     setData(newFilteredData)\r\n  //     setBackup(newFilteredData)\r\n  //  }else{\r\n  //   setData(copyData)\r\n  //   setBackup(copyData)\r\n  //  }\r\n  //  }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      id: 2,\r\n      value: \"PROCESSING\",\r\n      label: 'Change status to processing'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: \"ON HOLD\",\r\n      label: 'Change status to on-hold'\r\n    },\r\n    {\r\n      id: 4,\r\n      value: \"COMPLETED\",\r\n      label: 'Change status to completed'\r\n    },\r\n    {\r\n      id: 5,\r\n      value: \"CANCELLED\",\r\n      label: 'Change status to cancelled'\r\n    }\r\n  ];\r\n\r\n  const onSearch = useCallback((key) => {\r\n    // setSearchKey(key)\r\n    const temp = copyData.filter(\r\n      (e) =>\r\n        e?.name\r\n          ?.toLocaleLowerCase()\r\n          .includes(key.trim().toLocaleLowerCase())\r\n    );\r\n    setData(temp);\r\n  }, [copyData]);\r\n\r\n  const getData = () => {\r\n    if (sortColumn && sortType) {\r\n      return data.sort((a, b) => {\r\n        let x = a[sortColumn];\r\n        let y = b[sortColumn];\r\n        if (typeof x === 'string') {\r\n          x = x.charCodeAt();\r\n        }\r\n        if (typeof y === 'string') {\r\n          y = y.charCodeAt();\r\n        }\r\n        if (sortType === 'asc') {\r\n          return x - y;\r\n        } else {\r\n          return y - x;\r\n        }\r\n      });\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const handleSortColumn = (sortColumn, sortType) => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setSortColumn(sortColumn);\r\n      setSortType(sortType);\r\n    }, 500);\r\n  };\r\n\r\n  const handleChangeLimit = dataKey => {\r\n    setPage(1);\r\n    setLimit(dataKey);\r\n  };\r\n\r\n  const tableData = getData().filter((v, i) => {\r\n    const start = limit * (page - 1);\r\n    const end = start + limit;\r\n    return i >= start && i < end;\r\n  });\r\n\r\n  const onChangeDateRange = (value) => {\r\n    setFinalDate(value)\r\n  }\r\n\r\n  //   let windowWidth = document.documentElement.clientWidth;\r\n  //   let w = (20 * windowWidth ) / 100;\r\n  //   let w = (20 * 16 ) / 100;\r\n\r\n  const headers = [\r\n    \"PARTNER\",\r\n    \"DATE\",\r\n    \"EAN CODE\",\r\n    \"PRODUCT NAME\",\r\n    \"QTY\",\r\n    \"MRP SALES\",\r\n    \"NET(DISCOUNTED SALES)\",\r\n    \"LOCATION\"\r\n  ]\r\n\r\n  const downloadFile = () => {\r\n    let dataVal = []\r\n    originalOrdersData.forEach((order) => {\r\n      if([\"CANCELLED\", \"REFUNDED\", \"FAILED\"].includes(order.orderStatus)){\r\n        return\r\n      }\r\n      order.orderDetails.forEach(product => {\r\n         dataVal.push({\r\n          \"PARTNER\": \"WEBSITE\",\r\n          \"DATE\": moment(order.placedAt).format(\"DD/MM/YYYY\"),\r\n          \"EAN CODE\": product.hsnNumber,\r\n          \"PRODUCT NAME\": product.productName + \" \" + Object.values(product.attributeCombination),\r\n          \"QTY\": product.count,\r\n          \"MRP SALES\": product.productPrice * product.count,\r\n          \"NET(DISCOUNTED SALES)\": product.productDiscountPrice * product.count,\r\n          \"LOCATION\": order.addressDetails.shippingAddress.city\r\n         })\r\n      })\r\n    })\r\n    setCSVData(dataVal)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {pending ? <Loader /> : null}\r\n      <div className=\"container ordersContainer\">\r\n        <div className=\"header my-4 title fs-3\">Orders</div>\r\n        <div className=\"row mb-5 gy-5\">\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>TODAY'S</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{todayStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{todayStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CURRENT MONTH</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{currentMonthStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{currentMonthStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>LAST MONTH</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{lastMonthStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{lastMonthStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>THIS YEAR</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{currentYearStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{currentYearStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CUSTOM</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>ORDERS</td>\r\n                  <td className='w-50'>VALUE</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{customStats?.totalOrders || 0}</td>\r\n                  <td className='w-50'>{customStats?.value || 0}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CUSTOMER</th>\r\n              </tr>\r\n                <tr>\r\n                  <td className='w-50'>NEW</td>\r\n                  <td className='w-50'>EXISTING</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{newCustomer}</td>\r\n                  <td className='w-50'>{existingCustomer}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='w-50'>{Math.round(newCustomer / customerCount * 100) || 0}%</td>\r\n                  <td className='w-50'>{Math.round(existingCustomer / customerCount * 100) || 0}%</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-3 valueTable\">\r\n            <table className='w-100'>\r\n              <tr>\r\n              <th colSpan={2}>CUSTOMER COUNT</th>\r\n              </tr>\r\n                <tr>\r\n                  <td colSpan={2} style={{width:\"100%\",textAlign:\"center\"}}>{customerCount}</td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className='d-flex align-items-center justify-content-between'>\r\n          <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\r\n            <Select\r\n              displayEmpty\r\n              value={action}\r\n              onChange={handleBulkStatusChange}\r\n              input={<OutlinedInput />}\r\n              renderValue={(selected) => {\r\n                if (!selected) {\r\n                  return <em>Bulk actions</em>;\r\n                }\r\n                return selected;\r\n              }}\r\n              MenuProps={MenuProps}\r\n              inputProps={{ 'aria-label': 'Without label' }}\r\n            >\r\n              {actions.map((item) => (\r\n                <MenuItem\r\n                  key={item.id}\r\n                  value={item.value}\r\n                >\r\n                  {item.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <div className='d-flex align-items-center' style={{gap:\"0 0.75rem\"}}>\r\n            <DatePickerElement onChangeDateRange={onChangeDateRange} />\r\n            <FormControl sx={{ width: 300, mt: 3 }}>\r\n              <Select\r\n                displayEmpty\r\n                value={selectedOrderStatus}\r\n                onChange={handleFilterChange}\r\n                input={<OutlinedInput />}\r\n                renderValue={(selected) => {\r\n                  if (!selected) {\r\n                    return <em>Filters</em>;\r\n                  }\r\n                  return selected;\r\n                }}\r\n                MenuProps={MenuProps}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n              >\r\n                {orderStatusFilters.map((item) => (\r\n                  <MenuItem\r\n                    key={item.id}\r\n                    value={item.value}\r\n                  >\r\n                    {item.value}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <form className={`nosubmit`} onSubmit={(e) => { e.preventDefault(); }}>\r\n              <input className=\"nosubmit\" type=\"search\" placeholder=\"Search\" onChange={(e) => onSearch(e.target.value)} />\r\n            </form>\r\n            <CSVLink\r\n            data={csvData}\r\n            filename=\"orders.csv\"\r\n            headers={headers}\r\n            onClick={downloadFile}\r\n            asyncOnClick={true}\r\n            style={{\r\n              display: \"inline\",\r\n              // height: \"fit-content\",\r\n              // marginRight: \"8px\",\r\n              marginTop: \"0px\",\r\n              textDecoration:\"none\"\r\n            }}\r\n            >\r\n            <button className=\"btn ordersDownload\">Download</button>\r\n            </CSVLink>\r\n          </div>\r\n        </div>\r\n        <Table className='my-4'\r\n          height={300}\r\n          id=\"table\"\r\n          bordered\r\n          loading={loading}\r\n          data={tableData}\r\n          sortColumn={sortColumn}\r\n          sortType={sortType}\r\n          onSortColumn={handleSortColumn}>\r\n          <Column width={100} align=\"center\">\r\n            <HeaderCell style={{ padding: 0 }}>\r\n              <div style={{ lineHeight: '40px' }}>\r\n                <Checkbox\r\n                  inline\r\n                  checked={checked}\r\n                  indeterminate={indeterminate}\r\n                  onChange={handleCheckAll}\r\n                />\r\n              </div>\r\n            </HeaderCell>\r\n            <CheckCell dataKey=\"id\" checkedKeys={checkedKeys} onChange={handleCheck} />\r\n          </Column>\r\n          <Column align=\"center\" sortable resizable>\r\n            <HeaderCell>Order No.</HeaderCell>\r\n            <Cell dataKey=\"orderNo\" />\r\n          </Column>\r\n          <Column align=\"center\" sortable resizable>\r\n            <HeaderCell>Shiprocket Order No.</HeaderCell>\r\n            <Cell dataKey=\"shiprocketOrderNo\" />\r\n          </Column>\r\n          <Column align=\"center\" sortable resizable>\r\n            <HeaderCell>Name</HeaderCell>\r\n            <Cell dataKey=\"name\" />\r\n          </Column>\r\n          <Column align=\"center\" resizable>\r\n            <HeaderCell></HeaderCell>\r\n            <Cell dataKey=\"id\">\r\n              {rowData =>\r\n                <svg onClick={()=>navigate(`/view-order/${rowData.id}`)} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-eye-fill\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z\" />\r\n                  <path d=\"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z\" />\r\n                </svg>}\r\n            </Cell>\r\n          </Column>\r\n          <Column width={100} sortable resizable>\r\n            <HeaderCell>Purchase No.</HeaderCell>\r\n            <Cell dataKey=\"purchaseNo\" />\r\n          </Column>\r\n          <Column width={100} sortable resizable>\r\n            <HeaderCell>City</HeaderCell>\r\n            <Cell dataKey=\"city\" />\r\n          </Column>\r\n          <Column width={300} sortable resizable>\r\n            <HeaderCell>Date</HeaderCell>\r\n            <Cell dataKey=\"date\" />\r\n          </Column>\r\n          <Column width={235} sortable resizable>\r\n            <HeaderCell>Status</HeaderCell>\r\n            <StatusCell style={{ padding: '10px 0' }} dataKey=\"status\">\r\n              {/* {rowData => <Progress percent={rowData.progress} showInfo={false} />} */}\r\n            </StatusCell>\r\n          </Column>\r\n          <Column width={300} sortable resizable>\r\n            <HeaderCell>Additional Details</HeaderCell>\r\n            <Cell style={{ padding: '10px 0' }} dataKey=\"additionalDetails\">\r\n              {rowData => Object.entries(rowData.additionalDetails || {}).map(([key, value], index) => (\r\n                <li key={index}>\r\n                  <strong>{key}:</strong> {value.toString()}\r\n                </li>\r\n              ))}\r\n            </Cell>\r\n          </Column>\r\n          <Column width={300} sortable resizable>\r\n            <HeaderCell>Total</HeaderCell>\r\n            <Cell style={{ padding: '10px 0' }} dataKey=\"total\">\r\n              {rowData => <div>&#8377; {rowData.total}</div>}\r\n            </Cell>\r\n          </Column>\r\n        </Table>\r\n        <div style={{ padding: 20 }}>\r\n          <Pagination\r\n            prev\r\n            next\r\n            first\r\n            last\r\n            ellipsis\r\n            boundaryLinks\r\n            maxButtons={5}\r\n            size=\"xs\"\r\n            layout={['total', '-', 'limit', '|', 'pager', 'skip']}\r\n            total={getData().length}\r\n            limitOptions={[10, 30, 50]}\r\n            limit={limit}\r\n            activePage={page}\r\n            onChangePage={setPage}\r\n            onChangeLimit={handleChangeLimit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductOrders;"],"names":["MySwal","withReactContent","Swal","async","title","message","type","fire","_jsx","children","html","icon","DatePicker","styled","_templateObject","_taggedTemplateLiteral","props","onChangeDateRange","todaySampleDate","Date","setHours","startDate","endDate","pickerRef","useRef","useEffect","current","setStartDate","setEndDate","className","DateRangePicker","ref","initialSettings","locale","format","showDropdowns","opens","onApply","event","selectedDateRangeArr","target","value","split","map","date","readOnly","axios","Axios","ProductOrders","navigate","useNavigate","Column","HeaderCell","Cell","Table","checkedKeys","setCheckedKeys","useState","data","setData","action","setAction","selectedOrderStatus","setSelectedOrderStatus","copyData","setCopyData","loading","setLoading","sortColumn","setSortColumn","sortType","setSortType","limit","setLimit","page","setPage","csvData","setCSVData","originalOrdersData","setOriginalOrdersData","todayStats","setTodayStats","totalOrders","currentMonthStats","setCurrentMonthStats","lastMonthStats","setLastMonthStats","currentYearStats","setCurrentYearStats","customStats","setCustomStats","customerCount","setCustomerCount","newCustomer","setNewCustomer","existingCustomer","setExistingCustomer","pending","setPending","finalDate","setFinalDate","checked","indeterminate","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","length","CheckCell","_ref","rowData","onChange","dataKey","padding","lineHeight","Checkbox","inline","some","item","StatusCell","_ref2","background","concat","status","borderRadius","marginTop","overflow","display","handleData","useCallback","result","callApi","moment","startOf","valueOf","endOf","method","_result$data","_result$data2","_result$data3","_result$data4","_result$data5","_result$data6","_result$data7","_result$data8","_result$data9","ordersArr","newCustomersArr","existingCustomersArr","forEach","order","purchaseCount","push","userId","id","orderNo","orderToken","shiprocketOrderNo","name","addressDetails","shippingAddress","firstName","lastName","placedAt","orderStatus","city","purchaseNo","total","parseInt","orderTotalAmount","additionalDetails","thisYearStats","Set","size","onSearch","key","temp","filter","e","_e$name","toLocaleLowerCase","includes","trim","getData","sort","a","b","x","y","charCodeAt","tableData","v","i","start","_jsxs","_Fragment","Loader","colSpan","Math","round","textAlign","FormControl","sx","m","mt","Select","displayEmpty","options","body","ids","JSON","parse","stringify","triggerSwalAlert","input","OutlinedInput","renderValue","selected","inputProps","label","MenuItem","gap","DatePickerElement","onSubmit","preventDefault","placeholder","CSVLink","filename","headers","onClick","downloadFile","dataVal","orderDetails","product","hsnNumber","productName","Object","values","attributeCombination","count","productPrice","productDiscountPrice","asyncOnClick","textDecoration","height","bordered","onSortColumn","handleSortColumn","setTimeout","align","handleCheckAll","keys","handleCheck","sortable","resizable","xmlns","fill","viewBox","d","entries","_ref3","index","toString","Pagination","prev","next","first","last","ellipsis","boundaryLinks","maxButtons","layout","limitOptions","activePage","onChangePage","onChangeLimit"],"sourceRoot":""}