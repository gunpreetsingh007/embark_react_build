{"version":3,"file":"static/js/6960.6761eb81.chunk.js","mappings":"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","sources":["../node_modules/clsx/dist/clsx.m.js","../node_modules/react-toastify/src/utils/propValidator.ts","../node_modules/react-toastify/src/utils/constant.ts","../node_modules/react-toastify/src/utils/cssTransition.tsx","../node_modules/react-toastify/src/utils/collapseToast.ts","../node_modules/react-toastify/src/core/eventManager.ts","../node_modules/react-toastify/src/hooks/useKeeper.ts","../node_modules/react-toastify/src/hooks/toastContainerReducer.ts","../node_modules/react-toastify/src/hooks/useToastContainer.ts","../node_modules/react-toastify/src/hooks/useToast.ts","../node_modules/react-toastify/src/components/CloseButton.tsx","../node_modules/react-toastify/src/components/ProgressBar.tsx","../node_modules/react-toastify/src/components/Toast.tsx","../node_modules/react-toastify/src/components/Transitions.tsx","../node_modules/react-toastify/src/components/ToastContainer.tsx","../node_modules/react-toastify/src/core/toast.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { Default } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered() {\n      const node = nodeRef.current!;\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { isToastIdValid } from '../utils';\n\nexport const enum ActionType {\n  ADD,\n  REMOVE\n}\nexport type State = Array<Id>;\nexport type Action =\n  | { type: ActionType.ADD; toastId: Id; staleId?: Id }\n  | { type: ActionType.REMOVE; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.ADD:\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case ActionType.REMOVE:\n      return isToastIdValid(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  Direction,\n  Default\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { ActionType, reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    dispatch({ type: ActionType.REMOVE, toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (collection[toastId] && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = options.updateId == null;\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    //  tweak for vertical dragging\n    if (\n      toastProps.draggableDirection === Direction.Y &&\n      toastProps.draggablePercent === Default.DRAGGABLE_PERCENT\n    ) {\n      (toastProps.draggablePercent as number) *= 1.5;\n    }\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) delete collection[staleId];\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: ActionType.ADD,\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    const queueLen = queue.length;\n    toastCount = isToastIdValid(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    } else {\n      forceUpdate();\n    }\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\nimport { Direction } from '../utils/constant';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight * (props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    if (drag.canDrag) {\n      e.preventDefault();\n\n      const toast = toastRef.current!;\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties =\n          toastList.length === 0\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst createToastByType = (type: string) => (\n  content: ToastContent,\n  options?: ToastOptions\n) => dispatchToast(content, mergeOptions(type, options));\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.dark = createToastByType(TYPE.DARK);\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n"],"names":["r","e","t","f","n","Array","isArray","length","arguments","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canUseDom","window","document","createElement","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","cssTransition","_ref","enter","exit","appendPosition","_ref$appendPosition","collapse","_ref$collapse","collapseDuration","_ref$collapseDuration","_ref2","children","position","preventExitTransition","done","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","onEntered","node","current","removeEventListener","className","onExited","duration","height","scrollHeight","style","requestAnimationFrame","minHeight","transition","padding","margin","setTimeout","collapseToast","useLayoutEffect","addEventListener","onEnter","useEffect","onExit","React__default","eventManager","list","Map","emitQueue","on","event","callback","this","has","set","get","push","off","cb","filter","cancelEmit","timers","forEach","clearTimeout","emit","args","_len","_key","timer","apply","_this","useKeeper","arg","refresh","ref","reducer","state","action","type","concat","id","staleId","useToastContainer","props","forceUpdate","useReducer","x","toast","_useReducer2","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","indexOf","clearWaitingQueue","limit","removeToast","dequeueToast","shift","appendToast","_queue$shift","toastContent","toastProps","buildToast","_ref3","delay","options","_objectWithoutPropertiesLoose","updateId","enableMultiContainer","isNotValid","closeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","queueLen","freeSlot","toDequeue","i","removeFromCollection","onOpen","onClose","cloneElement","getToastToRender","toastToRender","toastList","newestOnTop","Object","keys","reverse","_toast","map","p","getX","targetTouches","clientX","getY","clientY","useToast","useState","isRunning","_useState","setIsRunning","_useState2","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","onDragStart","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","_drag$boundingRect","top","bottom","left","right","pauseToast","playToast","onDragMove","preventDefault","transform","opacity","Math","abs","onDragEnd","hasFocus","bindFocusEvents","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","_ref$ariaLabel","stopPropagation","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","_extends","animationDuration","animationPlayState","defaultClassName","cx","_cx","classNames","animationEvent","_animationEvent","assign","defaultProps","Toast","_useToast","Transition","cssClasses","isProgressControlled","renderCloseButton","Bounce","ToastContainer","_useToastContainer","getClassName","containerStyle","pointerEvents","latestInstance","containerDomNode","containerConfig","containers","lazy","generateToastId","random","toString","substr","getToastId","dispatchToast","size","body","appendChild","render","mergeOptions","createToastByType","success","info","error","warning","dark","warn","dismiss","params","isActive","container","update","oldOptions","oldContent","nextOptions","onChange","configure","config","containerInstance","item","removeChild"],"sourceRoot":""}